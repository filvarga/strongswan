// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_INCLUDED_rpc_2eproto
#define PROTOBUF_INCLUDED_rpc_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "vpp/model/acl/acl.pb.h"
#include "vpp/model/bfd/bfd.pb.h"
#include "vpp/model/interfaces/interfaces.pb.h"
#include "vpp/model/ipsec/ipsec.pb.h"
#include "vpp/model/l2/l2.pb.h"
#include "vpp/model/l3/l3.pb.h"
#include "vpp/model/l4/l4.pb.h"
#include "vpp/model/nat/nat.pb.h"
#include "vpp/model/punt/punt.pb.h"
#include "vpp/model/stn/stn.pb.h"
#include "linux/model/interfaces/interfaces.pb.h"
#include "linux/model/l3/l3.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto 

namespace protobuf_rpc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[22];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_rpc_2eproto
namespace rpc {
class ARPsResponse;
class ARPsResponseDefaultTypeInternal;
extern ARPsResponseDefaultTypeInternal _ARPsResponse_default_instance_;
class AclResponse;
class AclResponseDefaultTypeInternal;
extern AclResponseDefaultTypeInternal _AclResponse_default_instance_;
class BDResponse;
class BDResponseDefaultTypeInternal;
extern BDResponseDefaultTypeInternal _BDResponse_default_instance_;
class DataRequest;
class DataRequestDefaultTypeInternal;
extern DataRequestDefaultTypeInternal _DataRequest_default_instance_;
class DelResponse;
class DelResponseDefaultTypeInternal;
extern DelResponseDefaultTypeInternal _DelResponse_default_instance_;
class DumpRequest;
class DumpRequestDefaultTypeInternal;
extern DumpRequestDefaultTypeInternal _DumpRequest_default_instance_;
class FibResponse;
class FibResponseDefaultTypeInternal;
extern FibResponseDefaultTypeInternal _FibResponse_default_instance_;
class IPSecSAResponse;
class IPSecSAResponseDefaultTypeInternal;
extern IPSecSAResponseDefaultTypeInternal _IPSecSAResponse_default_instance_;
class IPSecSPDResponse;
class IPSecSPDResponseDefaultTypeInternal;
extern IPSecSPDResponseDefaultTypeInternal _IPSecSPDResponse_default_instance_;
class IPSecTunnelResponse;
class IPSecTunnelResponseDefaultTypeInternal;
extern IPSecTunnelResponseDefaultTypeInternal _IPSecTunnelResponse_default_instance_;
class InterfaceResponse;
class InterfaceResponseDefaultTypeInternal;
extern InterfaceResponseDefaultTypeInternal _InterfaceResponse_default_instance_;
class LinuxARPsResponse;
class LinuxARPsResponseDefaultTypeInternal;
extern LinuxARPsResponseDefaultTypeInternal _LinuxARPsResponse_default_instance_;
class LinuxInterfaceResponse;
class LinuxInterfaceResponseDefaultTypeInternal;
extern LinuxInterfaceResponseDefaultTypeInternal _LinuxInterfaceResponse_default_instance_;
class LinuxRoutesResponse;
class LinuxRoutesResponseDefaultTypeInternal;
extern LinuxRoutesResponseDefaultTypeInternal _LinuxRoutesResponse_default_instance_;
class NotificationRequest;
class NotificationRequestDefaultTypeInternal;
extern NotificationRequestDefaultTypeInternal _NotificationRequest_default_instance_;
class NotificationsResponse;
class NotificationsResponseDefaultTypeInternal;
extern NotificationsResponseDefaultTypeInternal _NotificationsResponse_default_instance_;
class PuntResponse;
class PuntResponseDefaultTypeInternal;
extern PuntResponseDefaultTypeInternal _PuntResponse_default_instance_;
class PuntResponse_PuntEntry;
class PuntResponse_PuntEntryDefaultTypeInternal;
extern PuntResponse_PuntEntryDefaultTypeInternal _PuntResponse_PuntEntry_default_instance_;
class PutResponse;
class PutResponseDefaultTypeInternal;
extern PutResponseDefaultTypeInternal _PutResponse_default_instance_;
class ResyncResponse;
class ResyncResponseDefaultTypeInternal;
extern ResyncResponseDefaultTypeInternal _ResyncResponse_default_instance_;
class RoutesResponse;
class RoutesResponseDefaultTypeInternal;
extern RoutesResponseDefaultTypeInternal _RoutesResponse_default_instance_;
class XcResponse;
class XcResponseDefaultTypeInternal;
extern XcResponseDefaultTypeInternal _XcResponse_default_instance_;
}  // namespace rpc
namespace google {
namespace protobuf {
template<> ::rpc::ARPsResponse* Arena::CreateMaybeMessage<::rpc::ARPsResponse>(Arena*);
template<> ::rpc::AclResponse* Arena::CreateMaybeMessage<::rpc::AclResponse>(Arena*);
template<> ::rpc::BDResponse* Arena::CreateMaybeMessage<::rpc::BDResponse>(Arena*);
template<> ::rpc::DataRequest* Arena::CreateMaybeMessage<::rpc::DataRequest>(Arena*);
template<> ::rpc::DelResponse* Arena::CreateMaybeMessage<::rpc::DelResponse>(Arena*);
template<> ::rpc::DumpRequest* Arena::CreateMaybeMessage<::rpc::DumpRequest>(Arena*);
template<> ::rpc::FibResponse* Arena::CreateMaybeMessage<::rpc::FibResponse>(Arena*);
template<> ::rpc::IPSecSAResponse* Arena::CreateMaybeMessage<::rpc::IPSecSAResponse>(Arena*);
template<> ::rpc::IPSecSPDResponse* Arena::CreateMaybeMessage<::rpc::IPSecSPDResponse>(Arena*);
template<> ::rpc::IPSecTunnelResponse* Arena::CreateMaybeMessage<::rpc::IPSecTunnelResponse>(Arena*);
template<> ::rpc::InterfaceResponse* Arena::CreateMaybeMessage<::rpc::InterfaceResponse>(Arena*);
template<> ::rpc::LinuxARPsResponse* Arena::CreateMaybeMessage<::rpc::LinuxARPsResponse>(Arena*);
template<> ::rpc::LinuxInterfaceResponse* Arena::CreateMaybeMessage<::rpc::LinuxInterfaceResponse>(Arena*);
template<> ::rpc::LinuxRoutesResponse* Arena::CreateMaybeMessage<::rpc::LinuxRoutesResponse>(Arena*);
template<> ::rpc::NotificationRequest* Arena::CreateMaybeMessage<::rpc::NotificationRequest>(Arena*);
template<> ::rpc::NotificationsResponse* Arena::CreateMaybeMessage<::rpc::NotificationsResponse>(Arena*);
template<> ::rpc::PuntResponse* Arena::CreateMaybeMessage<::rpc::PuntResponse>(Arena*);
template<> ::rpc::PuntResponse_PuntEntry* Arena::CreateMaybeMessage<::rpc::PuntResponse_PuntEntry>(Arena*);
template<> ::rpc::PutResponse* Arena::CreateMaybeMessage<::rpc::PutResponse>(Arena*);
template<> ::rpc::ResyncResponse* Arena::CreateMaybeMessage<::rpc::ResyncResponse>(Arena*);
template<> ::rpc::RoutesResponse* Arena::CreateMaybeMessage<::rpc::RoutesResponse>(Arena*);
template<> ::rpc::XcResponse* Arena::CreateMaybeMessage<::rpc::XcResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace rpc {

// ===================================================================

class DataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.DataRequest) */ {
 public:
  DataRequest();
  virtual ~DataRequest();

  DataRequest(const DataRequest& from);

  inline DataRequest& operator=(const DataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataRequest(DataRequest&& from) noexcept
    : DataRequest() {
    *this = ::std::move(from);
  }

  inline DataRequest& operator=(DataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataRequest* internal_default_instance() {
    return reinterpret_cast<const DataRequest*>(
               &_DataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DataRequest* other);
  friend void swap(DataRequest& a, DataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataRequest* New() const final {
    return CreateMaybeMessage<DataRequest>(NULL);
  }

  DataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataRequest& from);
  void MergeFrom(const DataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acl.AccessLists.Acl AccessLists = 10;
  int accesslists_size() const;
  void clear_accesslists();
  static const int kAccessListsFieldNumber = 10;
  ::acl::AccessLists_Acl* mutable_accesslists(int index);
  ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >*
      mutable_accesslists();
  const ::acl::AccessLists_Acl& accesslists(int index) const;
  ::acl::AccessLists_Acl* add_accesslists();
  const ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >&
      accesslists() const;

  // repeated .interfaces.Interfaces.Interface Interfaces = 20;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 20;
  ::interfaces::Interfaces_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
      mutable_interfaces();
  const ::interfaces::Interfaces_Interface& interfaces(int index) const;
  ::interfaces::Interfaces_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
      interfaces() const;

  // repeated .ipsec.SecurityPolicyDatabases.SPD SPDs = 21;
  int spds_size() const;
  void clear_spds();
  static const int kSPDsFieldNumber = 21;
  ::ipsec::SecurityPolicyDatabases_SPD* mutable_spds(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >*
      mutable_spds();
  const ::ipsec::SecurityPolicyDatabases_SPD& spds(int index) const;
  ::ipsec::SecurityPolicyDatabases_SPD* add_spds();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >&
      spds() const;

  // repeated .ipsec.SecurityAssociations.SA SAs = 22;
  int sas_size() const;
  void clear_sas();
  static const int kSAsFieldNumber = 22;
  ::ipsec::SecurityAssociations_SA* mutable_sas(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >*
      mutable_sas();
  const ::ipsec::SecurityAssociations_SA& sas(int index) const;
  ::ipsec::SecurityAssociations_SA* add_sas();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >&
      sas() const;

  // repeated .ipsec.TunnelInterfaces.Tunnel Tunnels = 23;
  int tunnels_size() const;
  void clear_tunnels();
  static const int kTunnelsFieldNumber = 23;
  ::ipsec::TunnelInterfaces_Tunnel* mutable_tunnels(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >*
      mutable_tunnels();
  const ::ipsec::TunnelInterfaces_Tunnel& tunnels(int index) const;
  ::ipsec::TunnelInterfaces_Tunnel* add_tunnels();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >&
      tunnels() const;

  // repeated .bfd.SingleHopBFD.Session BfdSessions = 30;
  int bfdsessions_size() const;
  void clear_bfdsessions();
  static const int kBfdSessionsFieldNumber = 30;
  ::bfd::SingleHopBFD_Session* mutable_bfdsessions(int index);
  ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Session >*
      mutable_bfdsessions();
  const ::bfd::SingleHopBFD_Session& bfdsessions(int index) const;
  ::bfd::SingleHopBFD_Session* add_bfdsessions();
  const ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Session >&
      bfdsessions() const;

  // repeated .bfd.SingleHopBFD.Key BfdAuthKeys = 31;
  int bfdauthkeys_size() const;
  void clear_bfdauthkeys();
  static const int kBfdAuthKeysFieldNumber = 31;
  ::bfd::SingleHopBFD_Key* mutable_bfdauthkeys(int index);
  ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Key >*
      mutable_bfdauthkeys();
  const ::bfd::SingleHopBFD_Key& bfdauthkeys(int index) const;
  ::bfd::SingleHopBFD_Key* add_bfdauthkeys();
  const ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Key >&
      bfdauthkeys() const;

  // repeated .l2.BridgeDomains.BridgeDomain BridgeDomains = 40;
  int bridgedomains_size() const;
  void clear_bridgedomains();
  static const int kBridgeDomainsFieldNumber = 40;
  ::l2::BridgeDomains_BridgeDomain* mutable_bridgedomains(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >*
      mutable_bridgedomains();
  const ::l2::BridgeDomains_BridgeDomain& bridgedomains(int index) const;
  ::l2::BridgeDomains_BridgeDomain* add_bridgedomains();
  const ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >&
      bridgedomains() const;

  // repeated .l2.FibTable.FibEntry FIBs = 41;
  int fibs_size() const;
  void clear_fibs();
  static const int kFIBsFieldNumber = 41;
  ::l2::FibTable_FibEntry* mutable_fibs(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >*
      mutable_fibs();
  const ::l2::FibTable_FibEntry& fibs(int index) const;
  ::l2::FibTable_FibEntry* add_fibs();
  const ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >&
      fibs() const;

  // repeated .l2.XConnectPairs.XConnectPair XCons = 42;
  int xcons_size() const;
  void clear_xcons();
  static const int kXConsFieldNumber = 42;
  ::l2::XConnectPairs_XConnectPair* mutable_xcons(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >*
      mutable_xcons();
  const ::l2::XConnectPairs_XConnectPair& xcons(int index) const;
  ::l2::XConnectPairs_XConnectPair* add_xcons();
  const ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >&
      xcons() const;

  // repeated .l3.StaticRoutes.Route StaticRoutes = 50;
  int staticroutes_size() const;
  void clear_staticroutes();
  static const int kStaticRoutesFieldNumber = 50;
  ::l3::StaticRoutes_Route* mutable_staticroutes(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
      mutable_staticroutes();
  const ::l3::StaticRoutes_Route& staticroutes(int index) const;
  ::l3::StaticRoutes_Route* add_staticroutes();
  const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
      staticroutes() const;

  // repeated .l3.ArpTable.ArpEntry ArpEntries = 51;
  int arpentries_size() const;
  void clear_arpentries();
  static const int kArpEntriesFieldNumber = 51;
  ::l3::ArpTable_ArpEntry* mutable_arpentries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
      mutable_arpentries();
  const ::l3::ArpTable_ArpEntry& arpentries(int index) const;
  ::l3::ArpTable_ArpEntry* add_arpentries();
  const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
      arpentries() const;

  // repeated .l3.ProxyArpInterfaces.InterfaceList ProxyArpInterfaces = 52;
  int proxyarpinterfaces_size() const;
  void clear_proxyarpinterfaces();
  static const int kProxyArpInterfacesFieldNumber = 52;
  ::l3::ProxyArpInterfaces_InterfaceList* mutable_proxyarpinterfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >*
      mutable_proxyarpinterfaces();
  const ::l3::ProxyArpInterfaces_InterfaceList& proxyarpinterfaces(int index) const;
  ::l3::ProxyArpInterfaces_InterfaceList* add_proxyarpinterfaces();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >&
      proxyarpinterfaces() const;

  // repeated .l3.ProxyArpRanges.RangeList ProxyArpRanges = 53;
  int proxyarpranges_size() const;
  void clear_proxyarpranges();
  static const int kProxyArpRangesFieldNumber = 53;
  ::l3::ProxyArpRanges_RangeList* mutable_proxyarpranges(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >*
      mutable_proxyarpranges();
  const ::l3::ProxyArpRanges_RangeList& proxyarpranges(int index) const;
  ::l3::ProxyArpRanges_RangeList* add_proxyarpranges();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >&
      proxyarpranges() const;

  // repeated .l4.AppNamespaces.AppNamespace ApplicationNamespaces = 61;
  int applicationnamespaces_size() const;
  void clear_applicationnamespaces();
  static const int kApplicationNamespacesFieldNumber = 61;
  ::l4::AppNamespaces_AppNamespace* mutable_applicationnamespaces(int index);
  ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >*
      mutable_applicationnamespaces();
  const ::l4::AppNamespaces_AppNamespace& applicationnamespaces(int index) const;
  ::l4::AppNamespaces_AppNamespace* add_applicationnamespaces();
  const ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >&
      applicationnamespaces() const;

  // repeated .stn.STN.Rule StnRules = 70;
  int stnrules_size() const;
  void clear_stnrules();
  static const int kStnRulesFieldNumber = 70;
  ::stn::STN_Rule* mutable_stnrules(int index);
  ::google::protobuf::RepeatedPtrField< ::stn::STN_Rule >*
      mutable_stnrules();
  const ::stn::STN_Rule& stnrules(int index) const;
  ::stn::STN_Rule* add_stnrules();
  const ::google::protobuf::RepeatedPtrField< ::stn::STN_Rule >&
      stnrules() const;

  // repeated .nat.Nat44DNat.DNatConfig DNATs = 72;
  int dnats_size() const;
  void clear_dnats();
  static const int kDNATsFieldNumber = 72;
  ::nat::Nat44DNat_DNatConfig* mutable_dnats(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >*
      mutable_dnats();
  const ::nat::Nat44DNat_DNatConfig& dnats(int index) const;
  ::nat::Nat44DNat_DNatConfig* add_dnats();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >&
      dnats() const;

  // repeated .punt.Punt punts = 73;
  int punts_size() const;
  void clear_punts();
  static const int kPuntsFieldNumber = 73;
  ::punt::Punt* mutable_punts(int index);
  ::google::protobuf::RepeatedPtrField< ::punt::Punt >*
      mutable_punts();
  const ::punt::Punt& punts(int index) const;
  ::punt::Punt* add_punts();
  const ::google::protobuf::RepeatedPtrField< ::punt::Punt >&
      punts() const;

  // repeated .interfaces.LinuxInterfaces.Interface LinuxInterfaces = 80;
  int linuxinterfaces_size() const;
  void clear_linuxinterfaces();
  static const int kLinuxInterfacesFieldNumber = 80;
  ::interfaces::LinuxInterfaces_Interface* mutable_linuxinterfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >*
      mutable_linuxinterfaces();
  const ::interfaces::LinuxInterfaces_Interface& linuxinterfaces(int index) const;
  ::interfaces::LinuxInterfaces_Interface* add_linuxinterfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >&
      linuxinterfaces() const;

  // repeated .l3.LinuxStaticArpEntries.ArpEntry LinuxArpEntries = 90;
  int linuxarpentries_size() const;
  void clear_linuxarpentries();
  static const int kLinuxArpEntriesFieldNumber = 90;
  ::l3::LinuxStaticArpEntries_ArpEntry* mutable_linuxarpentries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >*
      mutable_linuxarpentries();
  const ::l3::LinuxStaticArpEntries_ArpEntry& linuxarpentries(int index) const;
  ::l3::LinuxStaticArpEntries_ArpEntry* add_linuxarpentries();
  const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >&
      linuxarpentries() const;

  // repeated .l3.LinuxStaticRoutes.Route LinuxRoutes = 91;
  int linuxroutes_size() const;
  void clear_linuxroutes();
  static const int kLinuxRoutesFieldNumber = 91;
  ::l3::LinuxStaticRoutes_Route* mutable_linuxroutes(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >*
      mutable_linuxroutes();
  const ::l3::LinuxStaticRoutes_Route& linuxroutes(int index) const;
  ::l3::LinuxStaticRoutes_Route* add_linuxroutes();
  const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >&
      linuxroutes() const;

  // .bfd.SingleHopBFD.EchoFunction BfdEchoFunction = 32;
  bool has_bfdechofunction() const;
  void clear_bfdechofunction();
  static const int kBfdEchoFunctionFieldNumber = 32;
  private:
  const ::bfd::SingleHopBFD_EchoFunction& _internal_bfdechofunction() const;
  public:
  const ::bfd::SingleHopBFD_EchoFunction& bfdechofunction() const;
  ::bfd::SingleHopBFD_EchoFunction* release_bfdechofunction();
  ::bfd::SingleHopBFD_EchoFunction* mutable_bfdechofunction();
  void set_allocated_bfdechofunction(::bfd::SingleHopBFD_EchoFunction* bfdechofunction);

  // .l4.L4Features L4Feature = 60;
  bool has_l4feature() const;
  void clear_l4feature();
  static const int kL4FeatureFieldNumber = 60;
  private:
  const ::l4::L4Features& _internal_l4feature() const;
  public:
  const ::l4::L4Features& l4feature() const;
  ::l4::L4Features* release_l4feature();
  ::l4::L4Features* mutable_l4feature();
  void set_allocated_l4feature(::l4::L4Features* l4feature);

  // .nat.Nat44Global NatGlobal = 71;
  bool has_natglobal() const;
  void clear_natglobal();
  static const int kNatGlobalFieldNumber = 71;
  private:
  const ::nat::Nat44Global& _internal_natglobal() const;
  public:
  const ::nat::Nat44Global& natglobal() const;
  ::nat::Nat44Global* release_natglobal();
  ::nat::Nat44Global* mutable_natglobal();
  void set_allocated_natglobal(::nat::Nat44Global* natglobal);

  // @@protoc_insertion_point(class_scope:rpc.DataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl > accesslists_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface > interfaces_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD > spds_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA > sas_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel > tunnels_;
  ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Session > bfdsessions_;
  ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Key > bfdauthkeys_;
  ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain > bridgedomains_;
  ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry > fibs_;
  ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair > xcons_;
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route > staticroutes_;
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry > arpentries_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList > proxyarpinterfaces_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList > proxyarpranges_;
  ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace > applicationnamespaces_;
  ::google::protobuf::RepeatedPtrField< ::stn::STN_Rule > stnrules_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig > dnats_;
  ::google::protobuf::RepeatedPtrField< ::punt::Punt > punts_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface > linuxinterfaces_;
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry > linuxarpentries_;
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route > linuxroutes_;
  ::bfd::SingleHopBFD_EchoFunction* bfdechofunction_;
  ::l4::L4Features* l4feature_;
  ::nat::Nat44Global* natglobal_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DumpRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.DumpRequest) */ {
 public:
  DumpRequest();
  virtual ~DumpRequest();

  DumpRequest(const DumpRequest& from);

  inline DumpRequest& operator=(const DumpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DumpRequest(DumpRequest&& from) noexcept
    : DumpRequest() {
    *this = ::std::move(from);
  }

  inline DumpRequest& operator=(DumpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DumpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DumpRequest* internal_default_instance() {
    return reinterpret_cast<const DumpRequest*>(
               &_DumpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DumpRequest* other);
  friend void swap(DumpRequest& a, DumpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DumpRequest* New() const final {
    return CreateMaybeMessage<DumpRequest>(NULL);
  }

  DumpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DumpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DumpRequest& from);
  void MergeFrom(const DumpRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DumpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpc.DumpRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotificationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.NotificationRequest) */ {
 public:
  NotificationRequest();
  virtual ~NotificationRequest();

  NotificationRequest(const NotificationRequest& from);

  inline NotificationRequest& operator=(const NotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NotificationRequest(NotificationRequest&& from) noexcept
    : NotificationRequest() {
    *this = ::std::move(from);
  }

  inline NotificationRequest& operator=(NotificationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NotificationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotificationRequest* internal_default_instance() {
    return reinterpret_cast<const NotificationRequest*>(
               &_NotificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(NotificationRequest* other);
  friend void swap(NotificationRequest& a, NotificationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotificationRequest* New() const final {
    return CreateMaybeMessage<NotificationRequest>(NULL);
  }

  NotificationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NotificationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NotificationRequest& from);
  void MergeFrom(const NotificationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotificationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 idx = 1;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::uint32 idx() const;
  void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.NotificationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 idx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutResponse(PutResponse&& from) noexcept
    : PutResponse() {
    *this = ::std::move(from);
  }

  inline PutResponse& operator=(PutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutResponse* internal_default_instance() {
    return reinterpret_cast<const PutResponse*>(
               &_PutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PutResponse* other);
  friend void swap(PutResponse& a, PutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutResponse* New() const final {
    return CreateMaybeMessage<PutResponse>(NULL);
  }

  PutResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpc.PutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.DelResponse) */ {
 public:
  DelResponse();
  virtual ~DelResponse();

  DelResponse(const DelResponse& from);

  inline DelResponse& operator=(const DelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelResponse(DelResponse&& from) noexcept
    : DelResponse() {
    *this = ::std::move(from);
  }

  inline DelResponse& operator=(DelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DelResponse* internal_default_instance() {
    return reinterpret_cast<const DelResponse*>(
               &_DelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DelResponse* other);
  friend void swap(DelResponse& a, DelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelResponse* New() const final {
    return CreateMaybeMessage<DelResponse>(NULL);
  }

  DelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DelResponse& from);
  void MergeFrom(const DelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpc.DelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.ResyncResponse) */ {
 public:
  ResyncResponse();
  virtual ~ResyncResponse();

  ResyncResponse(const ResyncResponse& from);

  inline ResyncResponse& operator=(const ResyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResyncResponse(ResyncResponse&& from) noexcept
    : ResyncResponse() {
    *this = ::std::move(from);
  }

  inline ResyncResponse& operator=(ResyncResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResyncResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResyncResponse* internal_default_instance() {
    return reinterpret_cast<const ResyncResponse*>(
               &_ResyncResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ResyncResponse* other);
  friend void swap(ResyncResponse& a, ResyncResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResyncResponse* New() const final {
    return CreateMaybeMessage<ResyncResponse>(NULL);
  }

  ResyncResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResyncResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResyncResponse& from);
  void MergeFrom(const ResyncResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpc.ResyncResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AclResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.AclResponse) */ {
 public:
  AclResponse();
  virtual ~AclResponse();

  AclResponse(const AclResponse& from);

  inline AclResponse& operator=(const AclResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AclResponse(AclResponse&& from) noexcept
    : AclResponse() {
    *this = ::std::move(from);
  }

  inline AclResponse& operator=(AclResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AclResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AclResponse* internal_default_instance() {
    return reinterpret_cast<const AclResponse*>(
               &_AclResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(AclResponse* other);
  friend void swap(AclResponse& a, AclResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AclResponse* New() const final {
    return CreateMaybeMessage<AclResponse>(NULL);
  }

  AclResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AclResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AclResponse& from);
  void MergeFrom(const AclResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AclResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acl.AccessLists.Acl AccessLists = 1;
  int accesslists_size() const;
  void clear_accesslists();
  static const int kAccessListsFieldNumber = 1;
  ::acl::AccessLists_Acl* mutable_accesslists(int index);
  ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >*
      mutable_accesslists();
  const ::acl::AccessLists_Acl& accesslists(int index) const;
  ::acl::AccessLists_Acl* add_accesslists();
  const ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >&
      accesslists() const;

  // @@protoc_insertion_point(class_scope:rpc.AclResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl > accesslists_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfaceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.InterfaceResponse) */ {
 public:
  InterfaceResponse();
  virtual ~InterfaceResponse();

  InterfaceResponse(const InterfaceResponse& from);

  inline InterfaceResponse& operator=(const InterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfaceResponse(InterfaceResponse&& from) noexcept
    : InterfaceResponse() {
    *this = ::std::move(from);
  }

  inline InterfaceResponse& operator=(InterfaceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const InterfaceResponse*>(
               &_InterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(InterfaceResponse* other);
  friend void swap(InterfaceResponse& a, InterfaceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfaceResponse* New() const final {
    return CreateMaybeMessage<InterfaceResponse>(NULL);
  }

  InterfaceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfaceResponse& from);
  void MergeFrom(const InterfaceResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interfaces.Interfaces.Interface Interfaces = 1;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 1;
  ::interfaces::Interfaces_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
      mutable_interfaces();
  const ::interfaces::Interfaces_Interface& interfaces(int index) const;
  ::interfaces::Interfaces_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
      interfaces() const;

  // @@protoc_insertion_point(class_scope:rpc.InterfaceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface > interfaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IPSecSPDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.IPSecSPDResponse) */ {
 public:
  IPSecSPDResponse();
  virtual ~IPSecSPDResponse();

  IPSecSPDResponse(const IPSecSPDResponse& from);

  inline IPSecSPDResponse& operator=(const IPSecSPDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPSecSPDResponse(IPSecSPDResponse&& from) noexcept
    : IPSecSPDResponse() {
    *this = ::std::move(from);
  }

  inline IPSecSPDResponse& operator=(IPSecSPDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPSecSPDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPSecSPDResponse* internal_default_instance() {
    return reinterpret_cast<const IPSecSPDResponse*>(
               &_IPSecSPDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(IPSecSPDResponse* other);
  friend void swap(IPSecSPDResponse& a, IPSecSPDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPSecSPDResponse* New() const final {
    return CreateMaybeMessage<IPSecSPDResponse>(NULL);
  }

  IPSecSPDResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPSecSPDResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPSecSPDResponse& from);
  void MergeFrom(const IPSecSPDResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPSecSPDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ipsec.SecurityPolicyDatabases.SPD SPDs = 1;
  int spds_size() const;
  void clear_spds();
  static const int kSPDsFieldNumber = 1;
  ::ipsec::SecurityPolicyDatabases_SPD* mutable_spds(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >*
      mutable_spds();
  const ::ipsec::SecurityPolicyDatabases_SPD& spds(int index) const;
  ::ipsec::SecurityPolicyDatabases_SPD* add_spds();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >&
      spds() const;

  // @@protoc_insertion_point(class_scope:rpc.IPSecSPDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD > spds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IPSecSAResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.IPSecSAResponse) */ {
 public:
  IPSecSAResponse();
  virtual ~IPSecSAResponse();

  IPSecSAResponse(const IPSecSAResponse& from);

  inline IPSecSAResponse& operator=(const IPSecSAResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPSecSAResponse(IPSecSAResponse&& from) noexcept
    : IPSecSAResponse() {
    *this = ::std::move(from);
  }

  inline IPSecSAResponse& operator=(IPSecSAResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPSecSAResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPSecSAResponse* internal_default_instance() {
    return reinterpret_cast<const IPSecSAResponse*>(
               &_IPSecSAResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(IPSecSAResponse* other);
  friend void swap(IPSecSAResponse& a, IPSecSAResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPSecSAResponse* New() const final {
    return CreateMaybeMessage<IPSecSAResponse>(NULL);
  }

  IPSecSAResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPSecSAResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPSecSAResponse& from);
  void MergeFrom(const IPSecSAResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPSecSAResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ipsec.SecurityAssociations.SA SAa = 1;
  int saa_size() const;
  void clear_saa();
  static const int kSAaFieldNumber = 1;
  ::ipsec::SecurityAssociations_SA* mutable_saa(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >*
      mutable_saa();
  const ::ipsec::SecurityAssociations_SA& saa(int index) const;
  ::ipsec::SecurityAssociations_SA* add_saa();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >&
      saa() const;

  // @@protoc_insertion_point(class_scope:rpc.IPSecSAResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA > saa_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IPSecTunnelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.IPSecTunnelResponse) */ {
 public:
  IPSecTunnelResponse();
  virtual ~IPSecTunnelResponse();

  IPSecTunnelResponse(const IPSecTunnelResponse& from);

  inline IPSecTunnelResponse& operator=(const IPSecTunnelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPSecTunnelResponse(IPSecTunnelResponse&& from) noexcept
    : IPSecTunnelResponse() {
    *this = ::std::move(from);
  }

  inline IPSecTunnelResponse& operator=(IPSecTunnelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPSecTunnelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPSecTunnelResponse* internal_default_instance() {
    return reinterpret_cast<const IPSecTunnelResponse*>(
               &_IPSecTunnelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(IPSecTunnelResponse* other);
  friend void swap(IPSecTunnelResponse& a, IPSecTunnelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPSecTunnelResponse* New() const final {
    return CreateMaybeMessage<IPSecTunnelResponse>(NULL);
  }

  IPSecTunnelResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPSecTunnelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPSecTunnelResponse& from);
  void MergeFrom(const IPSecTunnelResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPSecTunnelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ipsec.TunnelInterfaces.Tunnel Tunnels = 1;
  int tunnels_size() const;
  void clear_tunnels();
  static const int kTunnelsFieldNumber = 1;
  ::ipsec::TunnelInterfaces_Tunnel* mutable_tunnels(int index);
  ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >*
      mutable_tunnels();
  const ::ipsec::TunnelInterfaces_Tunnel& tunnels(int index) const;
  ::ipsec::TunnelInterfaces_Tunnel* add_tunnels();
  const ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >&
      tunnels() const;

  // @@protoc_insertion_point(class_scope:rpc.IPSecTunnelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel > tunnels_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.BDResponse) */ {
 public:
  BDResponse();
  virtual ~BDResponse();

  BDResponse(const BDResponse& from);

  inline BDResponse& operator=(const BDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BDResponse(BDResponse&& from) noexcept
    : BDResponse() {
    *this = ::std::move(from);
  }

  inline BDResponse& operator=(BDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BDResponse* internal_default_instance() {
    return reinterpret_cast<const BDResponse*>(
               &_BDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(BDResponse* other);
  friend void swap(BDResponse& a, BDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BDResponse* New() const final {
    return CreateMaybeMessage<BDResponse>(NULL);
  }

  BDResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BDResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BDResponse& from);
  void MergeFrom(const BDResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l2.BridgeDomains.BridgeDomain BridgeDomains = 1;
  int bridgedomains_size() const;
  void clear_bridgedomains();
  static const int kBridgeDomainsFieldNumber = 1;
  ::l2::BridgeDomains_BridgeDomain* mutable_bridgedomains(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >*
      mutable_bridgedomains();
  const ::l2::BridgeDomains_BridgeDomain& bridgedomains(int index) const;
  ::l2::BridgeDomains_BridgeDomain* add_bridgedomains();
  const ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >&
      bridgedomains() const;

  // @@protoc_insertion_point(class_scope:rpc.BDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain > bridgedomains_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FibResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.FibResponse) */ {
 public:
  FibResponse();
  virtual ~FibResponse();

  FibResponse(const FibResponse& from);

  inline FibResponse& operator=(const FibResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FibResponse(FibResponse&& from) noexcept
    : FibResponse() {
    *this = ::std::move(from);
  }

  inline FibResponse& operator=(FibResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FibResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FibResponse* internal_default_instance() {
    return reinterpret_cast<const FibResponse*>(
               &_FibResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(FibResponse* other);
  friend void swap(FibResponse& a, FibResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FibResponse* New() const final {
    return CreateMaybeMessage<FibResponse>(NULL);
  }

  FibResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FibResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FibResponse& from);
  void MergeFrom(const FibResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FibResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l2.FibTable.FibEntry FIBs = 1;
  int fibs_size() const;
  void clear_fibs();
  static const int kFIBsFieldNumber = 1;
  ::l2::FibTable_FibEntry* mutable_fibs(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >*
      mutable_fibs();
  const ::l2::FibTable_FibEntry& fibs(int index) const;
  ::l2::FibTable_FibEntry* add_fibs();
  const ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >&
      fibs() const;

  // @@protoc_insertion_point(class_scope:rpc.FibResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry > fibs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class XcResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.XcResponse) */ {
 public:
  XcResponse();
  virtual ~XcResponse();

  XcResponse(const XcResponse& from);

  inline XcResponse& operator=(const XcResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XcResponse(XcResponse&& from) noexcept
    : XcResponse() {
    *this = ::std::move(from);
  }

  inline XcResponse& operator=(XcResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XcResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XcResponse* internal_default_instance() {
    return reinterpret_cast<const XcResponse*>(
               &_XcResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(XcResponse* other);
  friend void swap(XcResponse& a, XcResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XcResponse* New() const final {
    return CreateMaybeMessage<XcResponse>(NULL);
  }

  XcResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XcResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XcResponse& from);
  void MergeFrom(const XcResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XcResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l2.XConnectPairs.XConnectPair XCons = 1;
  int xcons_size() const;
  void clear_xcons();
  static const int kXConsFieldNumber = 1;
  ::l2::XConnectPairs_XConnectPair* mutable_xcons(int index);
  ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >*
      mutable_xcons();
  const ::l2::XConnectPairs_XConnectPair& xcons(int index) const;
  ::l2::XConnectPairs_XConnectPair* add_xcons();
  const ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >&
      xcons() const;

  // @@protoc_insertion_point(class_scope:rpc.XcResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair > xcons_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoutesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.RoutesResponse) */ {
 public:
  RoutesResponse();
  virtual ~RoutesResponse();

  RoutesResponse(const RoutesResponse& from);

  inline RoutesResponse& operator=(const RoutesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutesResponse(RoutesResponse&& from) noexcept
    : RoutesResponse() {
    *this = ::std::move(from);
  }

  inline RoutesResponse& operator=(RoutesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoutesResponse* internal_default_instance() {
    return reinterpret_cast<const RoutesResponse*>(
               &_RoutesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(RoutesResponse* other);
  friend void swap(RoutesResponse& a, RoutesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutesResponse* New() const final {
    return CreateMaybeMessage<RoutesResponse>(NULL);
  }

  RoutesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoutesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoutesResponse& from);
  void MergeFrom(const RoutesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoutesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l3.StaticRoutes.Route StaticRoutes = 1;
  int staticroutes_size() const;
  void clear_staticroutes();
  static const int kStaticRoutesFieldNumber = 1;
  ::l3::StaticRoutes_Route* mutable_staticroutes(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
      mutable_staticroutes();
  const ::l3::StaticRoutes_Route& staticroutes(int index) const;
  ::l3::StaticRoutes_Route* add_staticroutes();
  const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
      staticroutes() const;

  // @@protoc_insertion_point(class_scope:rpc.RoutesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route > staticroutes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ARPsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.ARPsResponse) */ {
 public:
  ARPsResponse();
  virtual ~ARPsResponse();

  ARPsResponse(const ARPsResponse& from);

  inline ARPsResponse& operator=(const ARPsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ARPsResponse(ARPsResponse&& from) noexcept
    : ARPsResponse() {
    *this = ::std::move(from);
  }

  inline ARPsResponse& operator=(ARPsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ARPsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ARPsResponse* internal_default_instance() {
    return reinterpret_cast<const ARPsResponse*>(
               &_ARPsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ARPsResponse* other);
  friend void swap(ARPsResponse& a, ARPsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ARPsResponse* New() const final {
    return CreateMaybeMessage<ARPsResponse>(NULL);
  }

  ARPsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ARPsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ARPsResponse& from);
  void MergeFrom(const ARPsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ARPsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l3.ArpTable.ArpEntry ArpEntries = 1;
  int arpentries_size() const;
  void clear_arpentries();
  static const int kArpEntriesFieldNumber = 1;
  ::l3::ArpTable_ArpEntry* mutable_arpentries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
      mutable_arpentries();
  const ::l3::ArpTable_ArpEntry& arpentries(int index) const;
  ::l3::ArpTable_ArpEntry* add_arpentries();
  const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
      arpentries() const;

  // @@protoc_insertion_point(class_scope:rpc.ARPsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry > arpentries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PuntResponse_PuntEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.PuntResponse.PuntEntry) */ {
 public:
  PuntResponse_PuntEntry();
  virtual ~PuntResponse_PuntEntry();

  PuntResponse_PuntEntry(const PuntResponse_PuntEntry& from);

  inline PuntResponse_PuntEntry& operator=(const PuntResponse_PuntEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PuntResponse_PuntEntry(PuntResponse_PuntEntry&& from) noexcept
    : PuntResponse_PuntEntry() {
    *this = ::std::move(from);
  }

  inline PuntResponse_PuntEntry& operator=(PuntResponse_PuntEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PuntResponse_PuntEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PuntResponse_PuntEntry* internal_default_instance() {
    return reinterpret_cast<const PuntResponse_PuntEntry*>(
               &_PuntResponse_PuntEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(PuntResponse_PuntEntry* other);
  friend void swap(PuntResponse_PuntEntry& a, PuntResponse_PuntEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PuntResponse_PuntEntry* New() const final {
    return CreateMaybeMessage<PuntResponse_PuntEntry>(NULL);
  }

  PuntResponse_PuntEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PuntResponse_PuntEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PuntResponse_PuntEntry& from);
  void MergeFrom(const PuntResponse_PuntEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PuntResponse_PuntEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes pathName = 2;
  void clear_pathname();
  static const int kPathNameFieldNumber = 2;
  const ::std::string& pathname() const;
  void set_pathname(const ::std::string& value);
  #if LANG_CXX11
  void set_pathname(::std::string&& value);
  #endif
  void set_pathname(const char* value);
  void set_pathname(const void* value, size_t size);
  ::std::string* mutable_pathname();
  ::std::string* release_pathname();
  void set_allocated_pathname(::std::string* pathname);

  // .punt.Punt puntData = 1;
  bool has_puntdata() const;
  void clear_puntdata();
  static const int kPuntDataFieldNumber = 1;
  private:
  const ::punt::Punt& _internal_puntdata() const;
  public:
  const ::punt::Punt& puntdata() const;
  ::punt::Punt* release_puntdata();
  ::punt::Punt* mutable_puntdata();
  void set_allocated_puntdata(::punt::Punt* puntdata);

  // @@protoc_insertion_point(class_scope:rpc.PuntResponse.PuntEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pathname_;
  ::punt::Punt* puntdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PuntResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.PuntResponse) */ {
 public:
  PuntResponse();
  virtual ~PuntResponse();

  PuntResponse(const PuntResponse& from);

  inline PuntResponse& operator=(const PuntResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PuntResponse(PuntResponse&& from) noexcept
    : PuntResponse() {
    *this = ::std::move(from);
  }

  inline PuntResponse& operator=(PuntResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PuntResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PuntResponse* internal_default_instance() {
    return reinterpret_cast<const PuntResponse*>(
               &_PuntResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(PuntResponse* other);
  friend void swap(PuntResponse& a, PuntResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PuntResponse* New() const final {
    return CreateMaybeMessage<PuntResponse>(NULL);
  }

  PuntResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PuntResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PuntResponse& from);
  void MergeFrom(const PuntResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PuntResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PuntResponse_PuntEntry PuntEntry;

  // accessors -------------------------------------------------------

  // repeated .rpc.PuntResponse.PuntEntry punt_entries = 1;
  int punt_entries_size() const;
  void clear_punt_entries();
  static const int kPuntEntriesFieldNumber = 1;
  ::rpc::PuntResponse_PuntEntry* mutable_punt_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::rpc::PuntResponse_PuntEntry >*
      mutable_punt_entries();
  const ::rpc::PuntResponse_PuntEntry& punt_entries(int index) const;
  ::rpc::PuntResponse_PuntEntry* add_punt_entries();
  const ::google::protobuf::RepeatedPtrField< ::rpc::PuntResponse_PuntEntry >&
      punt_entries() const;

  // @@protoc_insertion_point(class_scope:rpc.PuntResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::rpc::PuntResponse_PuntEntry > punt_entries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinuxInterfaceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LinuxInterfaceResponse) */ {
 public:
  LinuxInterfaceResponse();
  virtual ~LinuxInterfaceResponse();

  LinuxInterfaceResponse(const LinuxInterfaceResponse& from);

  inline LinuxInterfaceResponse& operator=(const LinuxInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinuxInterfaceResponse(LinuxInterfaceResponse&& from) noexcept
    : LinuxInterfaceResponse() {
    *this = ::std::move(from);
  }

  inline LinuxInterfaceResponse& operator=(LinuxInterfaceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinuxInterfaceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinuxInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const LinuxInterfaceResponse*>(
               &_LinuxInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(LinuxInterfaceResponse* other);
  friend void swap(LinuxInterfaceResponse& a, LinuxInterfaceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinuxInterfaceResponse* New() const final {
    return CreateMaybeMessage<LinuxInterfaceResponse>(NULL);
  }

  LinuxInterfaceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinuxInterfaceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinuxInterfaceResponse& from);
  void MergeFrom(const LinuxInterfaceResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinuxInterfaceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .interfaces.LinuxInterfaces.Interface LinuxInterfaces = 1;
  int linuxinterfaces_size() const;
  void clear_linuxinterfaces();
  static const int kLinuxInterfacesFieldNumber = 1;
  ::interfaces::LinuxInterfaces_Interface* mutable_linuxinterfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >*
      mutable_linuxinterfaces();
  const ::interfaces::LinuxInterfaces_Interface& linuxinterfaces(int index) const;
  ::interfaces::LinuxInterfaces_Interface* add_linuxinterfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >&
      linuxinterfaces() const;

  // @@protoc_insertion_point(class_scope:rpc.LinuxInterfaceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface > linuxinterfaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinuxARPsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LinuxARPsResponse) */ {
 public:
  LinuxARPsResponse();
  virtual ~LinuxARPsResponse();

  LinuxARPsResponse(const LinuxARPsResponse& from);

  inline LinuxARPsResponse& operator=(const LinuxARPsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinuxARPsResponse(LinuxARPsResponse&& from) noexcept
    : LinuxARPsResponse() {
    *this = ::std::move(from);
  }

  inline LinuxARPsResponse& operator=(LinuxARPsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinuxARPsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinuxARPsResponse* internal_default_instance() {
    return reinterpret_cast<const LinuxARPsResponse*>(
               &_LinuxARPsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(LinuxARPsResponse* other);
  friend void swap(LinuxARPsResponse& a, LinuxARPsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinuxARPsResponse* New() const final {
    return CreateMaybeMessage<LinuxARPsResponse>(NULL);
  }

  LinuxARPsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinuxARPsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinuxARPsResponse& from);
  void MergeFrom(const LinuxARPsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinuxARPsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l3.LinuxStaticArpEntries.ArpEntry LinuxArpEntries = 1;
  int linuxarpentries_size() const;
  void clear_linuxarpentries();
  static const int kLinuxArpEntriesFieldNumber = 1;
  ::l3::LinuxStaticArpEntries_ArpEntry* mutable_linuxarpentries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >*
      mutable_linuxarpentries();
  const ::l3::LinuxStaticArpEntries_ArpEntry& linuxarpentries(int index) const;
  ::l3::LinuxStaticArpEntries_ArpEntry* add_linuxarpentries();
  const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >&
      linuxarpentries() const;

  // @@protoc_insertion_point(class_scope:rpc.LinuxARPsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry > linuxarpentries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LinuxRoutesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LinuxRoutesResponse) */ {
 public:
  LinuxRoutesResponse();
  virtual ~LinuxRoutesResponse();

  LinuxRoutesResponse(const LinuxRoutesResponse& from);

  inline LinuxRoutesResponse& operator=(const LinuxRoutesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LinuxRoutesResponse(LinuxRoutesResponse&& from) noexcept
    : LinuxRoutesResponse() {
    *this = ::std::move(from);
  }

  inline LinuxRoutesResponse& operator=(LinuxRoutesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinuxRoutesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LinuxRoutesResponse* internal_default_instance() {
    return reinterpret_cast<const LinuxRoutesResponse*>(
               &_LinuxRoutesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(LinuxRoutesResponse* other);
  friend void swap(LinuxRoutesResponse& a, LinuxRoutesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LinuxRoutesResponse* New() const final {
    return CreateMaybeMessage<LinuxRoutesResponse>(NULL);
  }

  LinuxRoutesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LinuxRoutesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LinuxRoutesResponse& from);
  void MergeFrom(const LinuxRoutesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LinuxRoutesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .l3.LinuxStaticRoutes.Route LinuxRoutes = 1;
  int linuxroutes_size() const;
  void clear_linuxroutes();
  static const int kLinuxRoutesFieldNumber = 1;
  ::l3::LinuxStaticRoutes_Route* mutable_linuxroutes(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >*
      mutable_linuxroutes();
  const ::l3::LinuxStaticRoutes_Route& linuxroutes(int index) const;
  ::l3::LinuxStaticRoutes_Route* add_linuxroutes();
  const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >&
      linuxroutes() const;

  // @@protoc_insertion_point(class_scope:rpc.LinuxRoutesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route > linuxroutes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotificationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.NotificationsResponse) */ {
 public:
  NotificationsResponse();
  virtual ~NotificationsResponse();

  NotificationsResponse(const NotificationsResponse& from);

  inline NotificationsResponse& operator=(const NotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NotificationsResponse(NotificationsResponse&& from) noexcept
    : NotificationsResponse() {
    *this = ::std::move(from);
  }

  inline NotificationsResponse& operator=(NotificationsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NotificationsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotificationsResponse* internal_default_instance() {
    return reinterpret_cast<const NotificationsResponse*>(
               &_NotificationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(NotificationsResponse* other);
  friend void swap(NotificationsResponse& a, NotificationsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotificationsResponse* New() const final {
    return CreateMaybeMessage<NotificationsResponse>(NULL);
  }

  NotificationsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NotificationsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NotificationsResponse& from);
  void MergeFrom(const NotificationsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotificationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .interfaces.InterfaceNotification nIf = 2;
  bool has_nif() const;
  void clear_nif();
  static const int kNIfFieldNumber = 2;
  private:
  const ::interfaces::InterfaceNotification& _internal_nif() const;
  public:
  const ::interfaces::InterfaceNotification& nif() const;
  ::interfaces::InterfaceNotification* release_nif();
  ::interfaces::InterfaceNotification* mutable_nif();
  void set_allocated_nif(::interfaces::InterfaceNotification* nif);

  // uint32 nextIdx = 1;
  void clear_nextidx();
  static const int kNextIdxFieldNumber = 1;
  ::google::protobuf::uint32 nextidx() const;
  void set_nextidx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.NotificationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::interfaces::InterfaceNotification* nif_;
  ::google::protobuf::uint32 nextidx_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataRequest

// repeated .acl.AccessLists.Acl AccessLists = 10;
inline int DataRequest::accesslists_size() const {
  return accesslists_.size();
}
inline ::acl::AccessLists_Acl* DataRequest::mutable_accesslists(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.AccessLists)
  return accesslists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >*
DataRequest::mutable_accesslists() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.AccessLists)
  return &accesslists_;
}
inline const ::acl::AccessLists_Acl& DataRequest::accesslists(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.AccessLists)
  return accesslists_.Get(index);
}
inline ::acl::AccessLists_Acl* DataRequest::add_accesslists() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.AccessLists)
  return accesslists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >&
DataRequest::accesslists() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.AccessLists)
  return accesslists_;
}

// repeated .interfaces.Interfaces.Interface Interfaces = 20;
inline int DataRequest::interfaces_size() const {
  return interfaces_.size();
}
inline ::interfaces::Interfaces_Interface* DataRequest::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.Interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
DataRequest::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.Interfaces)
  return &interfaces_;
}
inline const ::interfaces::Interfaces_Interface& DataRequest::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.Interfaces)
  return interfaces_.Get(index);
}
inline ::interfaces::Interfaces_Interface* DataRequest::add_interfaces() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.Interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
DataRequest::interfaces() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.Interfaces)
  return interfaces_;
}

// repeated .ipsec.SecurityPolicyDatabases.SPD SPDs = 21;
inline int DataRequest::spds_size() const {
  return spds_.size();
}
inline ::ipsec::SecurityPolicyDatabases_SPD* DataRequest::mutable_spds(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.SPDs)
  return spds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >*
DataRequest::mutable_spds() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.SPDs)
  return &spds_;
}
inline const ::ipsec::SecurityPolicyDatabases_SPD& DataRequest::spds(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.SPDs)
  return spds_.Get(index);
}
inline ::ipsec::SecurityPolicyDatabases_SPD* DataRequest::add_spds() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.SPDs)
  return spds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >&
DataRequest::spds() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.SPDs)
  return spds_;
}

// repeated .ipsec.SecurityAssociations.SA SAs = 22;
inline int DataRequest::sas_size() const {
  return sas_.size();
}
inline ::ipsec::SecurityAssociations_SA* DataRequest::mutable_sas(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.SAs)
  return sas_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >*
DataRequest::mutable_sas() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.SAs)
  return &sas_;
}
inline const ::ipsec::SecurityAssociations_SA& DataRequest::sas(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.SAs)
  return sas_.Get(index);
}
inline ::ipsec::SecurityAssociations_SA* DataRequest::add_sas() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.SAs)
  return sas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >&
DataRequest::sas() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.SAs)
  return sas_;
}

// repeated .ipsec.TunnelInterfaces.Tunnel Tunnels = 23;
inline int DataRequest::tunnels_size() const {
  return tunnels_.size();
}
inline ::ipsec::TunnelInterfaces_Tunnel* DataRequest::mutable_tunnels(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.Tunnels)
  return tunnels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >*
DataRequest::mutable_tunnels() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.Tunnels)
  return &tunnels_;
}
inline const ::ipsec::TunnelInterfaces_Tunnel& DataRequest::tunnels(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.Tunnels)
  return tunnels_.Get(index);
}
inline ::ipsec::TunnelInterfaces_Tunnel* DataRequest::add_tunnels() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.Tunnels)
  return tunnels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >&
DataRequest::tunnels() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.Tunnels)
  return tunnels_;
}

// repeated .bfd.SingleHopBFD.Session BfdSessions = 30;
inline int DataRequest::bfdsessions_size() const {
  return bfdsessions_.size();
}
inline ::bfd::SingleHopBFD_Session* DataRequest::mutable_bfdsessions(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.BfdSessions)
  return bfdsessions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Session >*
DataRequest::mutable_bfdsessions() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.BfdSessions)
  return &bfdsessions_;
}
inline const ::bfd::SingleHopBFD_Session& DataRequest::bfdsessions(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.BfdSessions)
  return bfdsessions_.Get(index);
}
inline ::bfd::SingleHopBFD_Session* DataRequest::add_bfdsessions() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.BfdSessions)
  return bfdsessions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Session >&
DataRequest::bfdsessions() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.BfdSessions)
  return bfdsessions_;
}

// repeated .bfd.SingleHopBFD.Key BfdAuthKeys = 31;
inline int DataRequest::bfdauthkeys_size() const {
  return bfdauthkeys_.size();
}
inline ::bfd::SingleHopBFD_Key* DataRequest::mutable_bfdauthkeys(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.BfdAuthKeys)
  return bfdauthkeys_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Key >*
DataRequest::mutable_bfdauthkeys() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.BfdAuthKeys)
  return &bfdauthkeys_;
}
inline const ::bfd::SingleHopBFD_Key& DataRequest::bfdauthkeys(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.BfdAuthKeys)
  return bfdauthkeys_.Get(index);
}
inline ::bfd::SingleHopBFD_Key* DataRequest::add_bfdauthkeys() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.BfdAuthKeys)
  return bfdauthkeys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bfd::SingleHopBFD_Key >&
DataRequest::bfdauthkeys() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.BfdAuthKeys)
  return bfdauthkeys_;
}

// .bfd.SingleHopBFD.EchoFunction BfdEchoFunction = 32;
inline bool DataRequest::has_bfdechofunction() const {
  return this != internal_default_instance() && bfdechofunction_ != NULL;
}
inline const ::bfd::SingleHopBFD_EchoFunction& DataRequest::_internal_bfdechofunction() const {
  return *bfdechofunction_;
}
inline const ::bfd::SingleHopBFD_EchoFunction& DataRequest::bfdechofunction() const {
  const ::bfd::SingleHopBFD_EchoFunction* p = bfdechofunction_;
  // @@protoc_insertion_point(field_get:rpc.DataRequest.BfdEchoFunction)
  return p != NULL ? *p : *reinterpret_cast<const ::bfd::SingleHopBFD_EchoFunction*>(
      &::bfd::_SingleHopBFD_EchoFunction_default_instance_);
}
inline ::bfd::SingleHopBFD_EchoFunction* DataRequest::release_bfdechofunction() {
  // @@protoc_insertion_point(field_release:rpc.DataRequest.BfdEchoFunction)
  
  ::bfd::SingleHopBFD_EchoFunction* temp = bfdechofunction_;
  bfdechofunction_ = NULL;
  return temp;
}
inline ::bfd::SingleHopBFD_EchoFunction* DataRequest::mutable_bfdechofunction() {
  
  if (bfdechofunction_ == NULL) {
    auto* p = CreateMaybeMessage<::bfd::SingleHopBFD_EchoFunction>(GetArenaNoVirtual());
    bfdechofunction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.BfdEchoFunction)
  return bfdechofunction_;
}
inline void DataRequest::set_allocated_bfdechofunction(::bfd::SingleHopBFD_EchoFunction* bfdechofunction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bfdechofunction_);
  }
  if (bfdechofunction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bfdechofunction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bfdechofunction, submessage_arena);
    }
    
  } else {
    
  }
  bfdechofunction_ = bfdechofunction;
  // @@protoc_insertion_point(field_set_allocated:rpc.DataRequest.BfdEchoFunction)
}

// repeated .l2.BridgeDomains.BridgeDomain BridgeDomains = 40;
inline int DataRequest::bridgedomains_size() const {
  return bridgedomains_.size();
}
inline ::l2::BridgeDomains_BridgeDomain* DataRequest::mutable_bridgedomains(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.BridgeDomains)
  return bridgedomains_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >*
DataRequest::mutable_bridgedomains() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.BridgeDomains)
  return &bridgedomains_;
}
inline const ::l2::BridgeDomains_BridgeDomain& DataRequest::bridgedomains(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.BridgeDomains)
  return bridgedomains_.Get(index);
}
inline ::l2::BridgeDomains_BridgeDomain* DataRequest::add_bridgedomains() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.BridgeDomains)
  return bridgedomains_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >&
DataRequest::bridgedomains() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.BridgeDomains)
  return bridgedomains_;
}

// repeated .l2.FibTable.FibEntry FIBs = 41;
inline int DataRequest::fibs_size() const {
  return fibs_.size();
}
inline ::l2::FibTable_FibEntry* DataRequest::mutable_fibs(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.FIBs)
  return fibs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >*
DataRequest::mutable_fibs() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.FIBs)
  return &fibs_;
}
inline const ::l2::FibTable_FibEntry& DataRequest::fibs(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.FIBs)
  return fibs_.Get(index);
}
inline ::l2::FibTable_FibEntry* DataRequest::add_fibs() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.FIBs)
  return fibs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >&
DataRequest::fibs() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.FIBs)
  return fibs_;
}

// repeated .l2.XConnectPairs.XConnectPair XCons = 42;
inline int DataRequest::xcons_size() const {
  return xcons_.size();
}
inline ::l2::XConnectPairs_XConnectPair* DataRequest::mutable_xcons(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.XCons)
  return xcons_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >*
DataRequest::mutable_xcons() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.XCons)
  return &xcons_;
}
inline const ::l2::XConnectPairs_XConnectPair& DataRequest::xcons(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.XCons)
  return xcons_.Get(index);
}
inline ::l2::XConnectPairs_XConnectPair* DataRequest::add_xcons() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.XCons)
  return xcons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >&
DataRequest::xcons() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.XCons)
  return xcons_;
}

// repeated .l3.StaticRoutes.Route StaticRoutes = 50;
inline int DataRequest::staticroutes_size() const {
  return staticroutes_.size();
}
inline ::l3::StaticRoutes_Route* DataRequest::mutable_staticroutes(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.StaticRoutes)
  return staticroutes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
DataRequest::mutable_staticroutes() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.StaticRoutes)
  return &staticroutes_;
}
inline const ::l3::StaticRoutes_Route& DataRequest::staticroutes(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.StaticRoutes)
  return staticroutes_.Get(index);
}
inline ::l3::StaticRoutes_Route* DataRequest::add_staticroutes() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.StaticRoutes)
  return staticroutes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
DataRequest::staticroutes() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.StaticRoutes)
  return staticroutes_;
}

// repeated .l3.ArpTable.ArpEntry ArpEntries = 51;
inline int DataRequest::arpentries_size() const {
  return arpentries_.size();
}
inline ::l3::ArpTable_ArpEntry* DataRequest::mutable_arpentries(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.ArpEntries)
  return arpentries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
DataRequest::mutable_arpentries() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.ArpEntries)
  return &arpentries_;
}
inline const ::l3::ArpTable_ArpEntry& DataRequest::arpentries(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.ArpEntries)
  return arpentries_.Get(index);
}
inline ::l3::ArpTable_ArpEntry* DataRequest::add_arpentries() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.ArpEntries)
  return arpentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
DataRequest::arpentries() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.ArpEntries)
  return arpentries_;
}

// repeated .l3.ProxyArpInterfaces.InterfaceList ProxyArpInterfaces = 52;
inline int DataRequest::proxyarpinterfaces_size() const {
  return proxyarpinterfaces_.size();
}
inline ::l3::ProxyArpInterfaces_InterfaceList* DataRequest::mutable_proxyarpinterfaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.ProxyArpInterfaces)
  return proxyarpinterfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >*
DataRequest::mutable_proxyarpinterfaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.ProxyArpInterfaces)
  return &proxyarpinterfaces_;
}
inline const ::l3::ProxyArpInterfaces_InterfaceList& DataRequest::proxyarpinterfaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.ProxyArpInterfaces)
  return proxyarpinterfaces_.Get(index);
}
inline ::l3::ProxyArpInterfaces_InterfaceList* DataRequest::add_proxyarpinterfaces() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.ProxyArpInterfaces)
  return proxyarpinterfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >&
DataRequest::proxyarpinterfaces() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.ProxyArpInterfaces)
  return proxyarpinterfaces_;
}

// repeated .l3.ProxyArpRanges.RangeList ProxyArpRanges = 53;
inline int DataRequest::proxyarpranges_size() const {
  return proxyarpranges_.size();
}
inline ::l3::ProxyArpRanges_RangeList* DataRequest::mutable_proxyarpranges(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.ProxyArpRanges)
  return proxyarpranges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >*
DataRequest::mutable_proxyarpranges() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.ProxyArpRanges)
  return &proxyarpranges_;
}
inline const ::l3::ProxyArpRanges_RangeList& DataRequest::proxyarpranges(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.ProxyArpRanges)
  return proxyarpranges_.Get(index);
}
inline ::l3::ProxyArpRanges_RangeList* DataRequest::add_proxyarpranges() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.ProxyArpRanges)
  return proxyarpranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >&
DataRequest::proxyarpranges() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.ProxyArpRanges)
  return proxyarpranges_;
}

// .l4.L4Features L4Feature = 60;
inline bool DataRequest::has_l4feature() const {
  return this != internal_default_instance() && l4feature_ != NULL;
}
inline const ::l4::L4Features& DataRequest::_internal_l4feature() const {
  return *l4feature_;
}
inline const ::l4::L4Features& DataRequest::l4feature() const {
  const ::l4::L4Features* p = l4feature_;
  // @@protoc_insertion_point(field_get:rpc.DataRequest.L4Feature)
  return p != NULL ? *p : *reinterpret_cast<const ::l4::L4Features*>(
      &::l4::_L4Features_default_instance_);
}
inline ::l4::L4Features* DataRequest::release_l4feature() {
  // @@protoc_insertion_point(field_release:rpc.DataRequest.L4Feature)
  
  ::l4::L4Features* temp = l4feature_;
  l4feature_ = NULL;
  return temp;
}
inline ::l4::L4Features* DataRequest::mutable_l4feature() {
  
  if (l4feature_ == NULL) {
    auto* p = CreateMaybeMessage<::l4::L4Features>(GetArenaNoVirtual());
    l4feature_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.L4Feature)
  return l4feature_;
}
inline void DataRequest::set_allocated_l4feature(::l4::L4Features* l4feature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(l4feature_);
  }
  if (l4feature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      l4feature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, l4feature, submessage_arena);
    }
    
  } else {
    
  }
  l4feature_ = l4feature;
  // @@protoc_insertion_point(field_set_allocated:rpc.DataRequest.L4Feature)
}

// repeated .l4.AppNamespaces.AppNamespace ApplicationNamespaces = 61;
inline int DataRequest::applicationnamespaces_size() const {
  return applicationnamespaces_.size();
}
inline ::l4::AppNamespaces_AppNamespace* DataRequest::mutable_applicationnamespaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.ApplicationNamespaces)
  return applicationnamespaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >*
DataRequest::mutable_applicationnamespaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.ApplicationNamespaces)
  return &applicationnamespaces_;
}
inline const ::l4::AppNamespaces_AppNamespace& DataRequest::applicationnamespaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.ApplicationNamespaces)
  return applicationnamespaces_.Get(index);
}
inline ::l4::AppNamespaces_AppNamespace* DataRequest::add_applicationnamespaces() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.ApplicationNamespaces)
  return applicationnamespaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >&
DataRequest::applicationnamespaces() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.ApplicationNamespaces)
  return applicationnamespaces_;
}

// repeated .stn.STN.Rule StnRules = 70;
inline int DataRequest::stnrules_size() const {
  return stnrules_.size();
}
inline ::stn::STN_Rule* DataRequest::mutable_stnrules(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.StnRules)
  return stnrules_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::stn::STN_Rule >*
DataRequest::mutable_stnrules() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.StnRules)
  return &stnrules_;
}
inline const ::stn::STN_Rule& DataRequest::stnrules(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.StnRules)
  return stnrules_.Get(index);
}
inline ::stn::STN_Rule* DataRequest::add_stnrules() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.StnRules)
  return stnrules_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::stn::STN_Rule >&
DataRequest::stnrules() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.StnRules)
  return stnrules_;
}

// .nat.Nat44Global NatGlobal = 71;
inline bool DataRequest::has_natglobal() const {
  return this != internal_default_instance() && natglobal_ != NULL;
}
inline const ::nat::Nat44Global& DataRequest::_internal_natglobal() const {
  return *natglobal_;
}
inline const ::nat::Nat44Global& DataRequest::natglobal() const {
  const ::nat::Nat44Global* p = natglobal_;
  // @@protoc_insertion_point(field_get:rpc.DataRequest.NatGlobal)
  return p != NULL ? *p : *reinterpret_cast<const ::nat::Nat44Global*>(
      &::nat::_Nat44Global_default_instance_);
}
inline ::nat::Nat44Global* DataRequest::release_natglobal() {
  // @@protoc_insertion_point(field_release:rpc.DataRequest.NatGlobal)
  
  ::nat::Nat44Global* temp = natglobal_;
  natglobal_ = NULL;
  return temp;
}
inline ::nat::Nat44Global* DataRequest::mutable_natglobal() {
  
  if (natglobal_ == NULL) {
    auto* p = CreateMaybeMessage<::nat::Nat44Global>(GetArenaNoVirtual());
    natglobal_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.NatGlobal)
  return natglobal_;
}
inline void DataRequest::set_allocated_natglobal(::nat::Nat44Global* natglobal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(natglobal_);
  }
  if (natglobal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      natglobal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, natglobal, submessage_arena);
    }
    
  } else {
    
  }
  natglobal_ = natglobal;
  // @@protoc_insertion_point(field_set_allocated:rpc.DataRequest.NatGlobal)
}

// repeated .nat.Nat44DNat.DNatConfig DNATs = 72;
inline int DataRequest::dnats_size() const {
  return dnats_.size();
}
inline ::nat::Nat44DNat_DNatConfig* DataRequest::mutable_dnats(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.DNATs)
  return dnats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >*
DataRequest::mutable_dnats() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.DNATs)
  return &dnats_;
}
inline const ::nat::Nat44DNat_DNatConfig& DataRequest::dnats(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.DNATs)
  return dnats_.Get(index);
}
inline ::nat::Nat44DNat_DNatConfig* DataRequest::add_dnats() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.DNATs)
  return dnats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >&
DataRequest::dnats() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.DNATs)
  return dnats_;
}

// repeated .punt.Punt punts = 73;
inline int DataRequest::punts_size() const {
  return punts_.size();
}
inline ::punt::Punt* DataRequest::mutable_punts(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.punts)
  return punts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::punt::Punt >*
DataRequest::mutable_punts() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.punts)
  return &punts_;
}
inline const ::punt::Punt& DataRequest::punts(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.punts)
  return punts_.Get(index);
}
inline ::punt::Punt* DataRequest::add_punts() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.punts)
  return punts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::punt::Punt >&
DataRequest::punts() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.punts)
  return punts_;
}

// repeated .interfaces.LinuxInterfaces.Interface LinuxInterfaces = 80;
inline int DataRequest::linuxinterfaces_size() const {
  return linuxinterfaces_.size();
}
inline ::interfaces::LinuxInterfaces_Interface* DataRequest::mutable_linuxinterfaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.LinuxInterfaces)
  return linuxinterfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >*
DataRequest::mutable_linuxinterfaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.LinuxInterfaces)
  return &linuxinterfaces_;
}
inline const ::interfaces::LinuxInterfaces_Interface& DataRequest::linuxinterfaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.LinuxInterfaces)
  return linuxinterfaces_.Get(index);
}
inline ::interfaces::LinuxInterfaces_Interface* DataRequest::add_linuxinterfaces() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.LinuxInterfaces)
  return linuxinterfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >&
DataRequest::linuxinterfaces() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.LinuxInterfaces)
  return linuxinterfaces_;
}

// repeated .l3.LinuxStaticArpEntries.ArpEntry LinuxArpEntries = 90;
inline int DataRequest::linuxarpentries_size() const {
  return linuxarpentries_.size();
}
inline ::l3::LinuxStaticArpEntries_ArpEntry* DataRequest::mutable_linuxarpentries(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.LinuxArpEntries)
  return linuxarpentries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >*
DataRequest::mutable_linuxarpentries() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.LinuxArpEntries)
  return &linuxarpentries_;
}
inline const ::l3::LinuxStaticArpEntries_ArpEntry& DataRequest::linuxarpentries(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.LinuxArpEntries)
  return linuxarpentries_.Get(index);
}
inline ::l3::LinuxStaticArpEntries_ArpEntry* DataRequest::add_linuxarpentries() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.LinuxArpEntries)
  return linuxarpentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >&
DataRequest::linuxarpentries() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.LinuxArpEntries)
  return linuxarpentries_;
}

// repeated .l3.LinuxStaticRoutes.Route LinuxRoutes = 91;
inline int DataRequest::linuxroutes_size() const {
  return linuxroutes_.size();
}
inline ::l3::LinuxStaticRoutes_Route* DataRequest::mutable_linuxroutes(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.DataRequest.LinuxRoutes)
  return linuxroutes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >*
DataRequest::mutable_linuxroutes() {
  // @@protoc_insertion_point(field_mutable_list:rpc.DataRequest.LinuxRoutes)
  return &linuxroutes_;
}
inline const ::l3::LinuxStaticRoutes_Route& DataRequest::linuxroutes(int index) const {
  // @@protoc_insertion_point(field_get:rpc.DataRequest.LinuxRoutes)
  return linuxroutes_.Get(index);
}
inline ::l3::LinuxStaticRoutes_Route* DataRequest::add_linuxroutes() {
  // @@protoc_insertion_point(field_add:rpc.DataRequest.LinuxRoutes)
  return linuxroutes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >&
DataRequest::linuxroutes() const {
  // @@protoc_insertion_point(field_list:rpc.DataRequest.LinuxRoutes)
  return linuxroutes_;
}

// -------------------------------------------------------------------

// DumpRequest

// -------------------------------------------------------------------

// NotificationRequest

// uint32 idx = 1;
inline void NotificationRequest::clear_idx() {
  idx_ = 0u;
}
inline ::google::protobuf::uint32 NotificationRequest::idx() const {
  // @@protoc_insertion_point(field_get:rpc.NotificationRequest.idx)
  return idx_;
}
inline void NotificationRequest::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:rpc.NotificationRequest.idx)
}

// -------------------------------------------------------------------

// PutResponse

// -------------------------------------------------------------------

// DelResponse

// -------------------------------------------------------------------

// ResyncResponse

// -------------------------------------------------------------------

// AclResponse

// repeated .acl.AccessLists.Acl AccessLists = 1;
inline int AclResponse::accesslists_size() const {
  return accesslists_.size();
}
inline ::acl::AccessLists_Acl* AclResponse::mutable_accesslists(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AclResponse.AccessLists)
  return accesslists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >*
AclResponse::mutable_accesslists() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AclResponse.AccessLists)
  return &accesslists_;
}
inline const ::acl::AccessLists_Acl& AclResponse::accesslists(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AclResponse.AccessLists)
  return accesslists_.Get(index);
}
inline ::acl::AccessLists_Acl* AclResponse::add_accesslists() {
  // @@protoc_insertion_point(field_add:rpc.AclResponse.AccessLists)
  return accesslists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::acl::AccessLists_Acl >&
AclResponse::accesslists() const {
  // @@protoc_insertion_point(field_list:rpc.AclResponse.AccessLists)
  return accesslists_;
}

// -------------------------------------------------------------------

// InterfaceResponse

// repeated .interfaces.Interfaces.Interface Interfaces = 1;
inline int InterfaceResponse::interfaces_size() const {
  return interfaces_.size();
}
inline ::interfaces::Interfaces_Interface* InterfaceResponse::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.InterfaceResponse.Interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
InterfaceResponse::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.InterfaceResponse.Interfaces)
  return &interfaces_;
}
inline const ::interfaces::Interfaces_Interface& InterfaceResponse::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.InterfaceResponse.Interfaces)
  return interfaces_.Get(index);
}
inline ::interfaces::Interfaces_Interface* InterfaceResponse::add_interfaces() {
  // @@protoc_insertion_point(field_add:rpc.InterfaceResponse.Interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
InterfaceResponse::interfaces() const {
  // @@protoc_insertion_point(field_list:rpc.InterfaceResponse.Interfaces)
  return interfaces_;
}

// -------------------------------------------------------------------

// IPSecSPDResponse

// repeated .ipsec.SecurityPolicyDatabases.SPD SPDs = 1;
inline int IPSecSPDResponse::spds_size() const {
  return spds_.size();
}
inline ::ipsec::SecurityPolicyDatabases_SPD* IPSecSPDResponse::mutable_spds(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.IPSecSPDResponse.SPDs)
  return spds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >*
IPSecSPDResponse::mutable_spds() {
  // @@protoc_insertion_point(field_mutable_list:rpc.IPSecSPDResponse.SPDs)
  return &spds_;
}
inline const ::ipsec::SecurityPolicyDatabases_SPD& IPSecSPDResponse::spds(int index) const {
  // @@protoc_insertion_point(field_get:rpc.IPSecSPDResponse.SPDs)
  return spds_.Get(index);
}
inline ::ipsec::SecurityPolicyDatabases_SPD* IPSecSPDResponse::add_spds() {
  // @@protoc_insertion_point(field_add:rpc.IPSecSPDResponse.SPDs)
  return spds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityPolicyDatabases_SPD >&
IPSecSPDResponse::spds() const {
  // @@protoc_insertion_point(field_list:rpc.IPSecSPDResponse.SPDs)
  return spds_;
}

// -------------------------------------------------------------------

// IPSecSAResponse

// repeated .ipsec.SecurityAssociations.SA SAa = 1;
inline int IPSecSAResponse::saa_size() const {
  return saa_.size();
}
inline ::ipsec::SecurityAssociations_SA* IPSecSAResponse::mutable_saa(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.IPSecSAResponse.SAa)
  return saa_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >*
IPSecSAResponse::mutable_saa() {
  // @@protoc_insertion_point(field_mutable_list:rpc.IPSecSAResponse.SAa)
  return &saa_;
}
inline const ::ipsec::SecurityAssociations_SA& IPSecSAResponse::saa(int index) const {
  // @@protoc_insertion_point(field_get:rpc.IPSecSAResponse.SAa)
  return saa_.Get(index);
}
inline ::ipsec::SecurityAssociations_SA* IPSecSAResponse::add_saa() {
  // @@protoc_insertion_point(field_add:rpc.IPSecSAResponse.SAa)
  return saa_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::SecurityAssociations_SA >&
IPSecSAResponse::saa() const {
  // @@protoc_insertion_point(field_list:rpc.IPSecSAResponse.SAa)
  return saa_;
}

// -------------------------------------------------------------------

// IPSecTunnelResponse

// repeated .ipsec.TunnelInterfaces.Tunnel Tunnels = 1;
inline int IPSecTunnelResponse::tunnels_size() const {
  return tunnels_.size();
}
inline ::ipsec::TunnelInterfaces_Tunnel* IPSecTunnelResponse::mutable_tunnels(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.IPSecTunnelResponse.Tunnels)
  return tunnels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >*
IPSecTunnelResponse::mutable_tunnels() {
  // @@protoc_insertion_point(field_mutable_list:rpc.IPSecTunnelResponse.Tunnels)
  return &tunnels_;
}
inline const ::ipsec::TunnelInterfaces_Tunnel& IPSecTunnelResponse::tunnels(int index) const {
  // @@protoc_insertion_point(field_get:rpc.IPSecTunnelResponse.Tunnels)
  return tunnels_.Get(index);
}
inline ::ipsec::TunnelInterfaces_Tunnel* IPSecTunnelResponse::add_tunnels() {
  // @@protoc_insertion_point(field_add:rpc.IPSecTunnelResponse.Tunnels)
  return tunnels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ipsec::TunnelInterfaces_Tunnel >&
IPSecTunnelResponse::tunnels() const {
  // @@protoc_insertion_point(field_list:rpc.IPSecTunnelResponse.Tunnels)
  return tunnels_;
}

// -------------------------------------------------------------------

// BDResponse

// repeated .l2.BridgeDomains.BridgeDomain BridgeDomains = 1;
inline int BDResponse::bridgedomains_size() const {
  return bridgedomains_.size();
}
inline ::l2::BridgeDomains_BridgeDomain* BDResponse::mutable_bridgedomains(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.BDResponse.BridgeDomains)
  return bridgedomains_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >*
BDResponse::mutable_bridgedomains() {
  // @@protoc_insertion_point(field_mutable_list:rpc.BDResponse.BridgeDomains)
  return &bridgedomains_;
}
inline const ::l2::BridgeDomains_BridgeDomain& BDResponse::bridgedomains(int index) const {
  // @@protoc_insertion_point(field_get:rpc.BDResponse.BridgeDomains)
  return bridgedomains_.Get(index);
}
inline ::l2::BridgeDomains_BridgeDomain* BDResponse::add_bridgedomains() {
  // @@protoc_insertion_point(field_add:rpc.BDResponse.BridgeDomains)
  return bridgedomains_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::BridgeDomains_BridgeDomain >&
BDResponse::bridgedomains() const {
  // @@protoc_insertion_point(field_list:rpc.BDResponse.BridgeDomains)
  return bridgedomains_;
}

// -------------------------------------------------------------------

// FibResponse

// repeated .l2.FibTable.FibEntry FIBs = 1;
inline int FibResponse::fibs_size() const {
  return fibs_.size();
}
inline ::l2::FibTable_FibEntry* FibResponse::mutable_fibs(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.FibResponse.FIBs)
  return fibs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >*
FibResponse::mutable_fibs() {
  // @@protoc_insertion_point(field_mutable_list:rpc.FibResponse.FIBs)
  return &fibs_;
}
inline const ::l2::FibTable_FibEntry& FibResponse::fibs(int index) const {
  // @@protoc_insertion_point(field_get:rpc.FibResponse.FIBs)
  return fibs_.Get(index);
}
inline ::l2::FibTable_FibEntry* FibResponse::add_fibs() {
  // @@protoc_insertion_point(field_add:rpc.FibResponse.FIBs)
  return fibs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::FibTable_FibEntry >&
FibResponse::fibs() const {
  // @@protoc_insertion_point(field_list:rpc.FibResponse.FIBs)
  return fibs_;
}

// -------------------------------------------------------------------

// XcResponse

// repeated .l2.XConnectPairs.XConnectPair XCons = 1;
inline int XcResponse::xcons_size() const {
  return xcons_.size();
}
inline ::l2::XConnectPairs_XConnectPair* XcResponse::mutable_xcons(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.XcResponse.XCons)
  return xcons_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >*
XcResponse::mutable_xcons() {
  // @@protoc_insertion_point(field_mutable_list:rpc.XcResponse.XCons)
  return &xcons_;
}
inline const ::l2::XConnectPairs_XConnectPair& XcResponse::xcons(int index) const {
  // @@protoc_insertion_point(field_get:rpc.XcResponse.XCons)
  return xcons_.Get(index);
}
inline ::l2::XConnectPairs_XConnectPair* XcResponse::add_xcons() {
  // @@protoc_insertion_point(field_add:rpc.XcResponse.XCons)
  return xcons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l2::XConnectPairs_XConnectPair >&
XcResponse::xcons() const {
  // @@protoc_insertion_point(field_list:rpc.XcResponse.XCons)
  return xcons_;
}

// -------------------------------------------------------------------

// RoutesResponse

// repeated .l3.StaticRoutes.Route StaticRoutes = 1;
inline int RoutesResponse::staticroutes_size() const {
  return staticroutes_.size();
}
inline ::l3::StaticRoutes_Route* RoutesResponse::mutable_staticroutes(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.RoutesResponse.StaticRoutes)
  return staticroutes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
RoutesResponse::mutable_staticroutes() {
  // @@protoc_insertion_point(field_mutable_list:rpc.RoutesResponse.StaticRoutes)
  return &staticroutes_;
}
inline const ::l3::StaticRoutes_Route& RoutesResponse::staticroutes(int index) const {
  // @@protoc_insertion_point(field_get:rpc.RoutesResponse.StaticRoutes)
  return staticroutes_.Get(index);
}
inline ::l3::StaticRoutes_Route* RoutesResponse::add_staticroutes() {
  // @@protoc_insertion_point(field_add:rpc.RoutesResponse.StaticRoutes)
  return staticroutes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
RoutesResponse::staticroutes() const {
  // @@protoc_insertion_point(field_list:rpc.RoutesResponse.StaticRoutes)
  return staticroutes_;
}

// -------------------------------------------------------------------

// ARPsResponse

// repeated .l3.ArpTable.ArpEntry ArpEntries = 1;
inline int ARPsResponse::arpentries_size() const {
  return arpentries_.size();
}
inline ::l3::ArpTable_ArpEntry* ARPsResponse::mutable_arpentries(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.ARPsResponse.ArpEntries)
  return arpentries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
ARPsResponse::mutable_arpentries() {
  // @@protoc_insertion_point(field_mutable_list:rpc.ARPsResponse.ArpEntries)
  return &arpentries_;
}
inline const ::l3::ArpTable_ArpEntry& ARPsResponse::arpentries(int index) const {
  // @@protoc_insertion_point(field_get:rpc.ARPsResponse.ArpEntries)
  return arpentries_.Get(index);
}
inline ::l3::ArpTable_ArpEntry* ARPsResponse::add_arpentries() {
  // @@protoc_insertion_point(field_add:rpc.ARPsResponse.ArpEntries)
  return arpentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
ARPsResponse::arpentries() const {
  // @@protoc_insertion_point(field_list:rpc.ARPsResponse.ArpEntries)
  return arpentries_;
}

// -------------------------------------------------------------------

// PuntResponse_PuntEntry

// .punt.Punt puntData = 1;
inline bool PuntResponse_PuntEntry::has_puntdata() const {
  return this != internal_default_instance() && puntdata_ != NULL;
}
inline const ::punt::Punt& PuntResponse_PuntEntry::_internal_puntdata() const {
  return *puntdata_;
}
inline const ::punt::Punt& PuntResponse_PuntEntry::puntdata() const {
  const ::punt::Punt* p = puntdata_;
  // @@protoc_insertion_point(field_get:rpc.PuntResponse.PuntEntry.puntData)
  return p != NULL ? *p : *reinterpret_cast<const ::punt::Punt*>(
      &::punt::_Punt_default_instance_);
}
inline ::punt::Punt* PuntResponse_PuntEntry::release_puntdata() {
  // @@protoc_insertion_point(field_release:rpc.PuntResponse.PuntEntry.puntData)
  
  ::punt::Punt* temp = puntdata_;
  puntdata_ = NULL;
  return temp;
}
inline ::punt::Punt* PuntResponse_PuntEntry::mutable_puntdata() {
  
  if (puntdata_ == NULL) {
    auto* p = CreateMaybeMessage<::punt::Punt>(GetArenaNoVirtual());
    puntdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpc.PuntResponse.PuntEntry.puntData)
  return puntdata_;
}
inline void PuntResponse_PuntEntry::set_allocated_puntdata(::punt::Punt* puntdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(puntdata_);
  }
  if (puntdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      puntdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, puntdata, submessage_arena);
    }
    
  } else {
    
  }
  puntdata_ = puntdata;
  // @@protoc_insertion_point(field_set_allocated:rpc.PuntResponse.PuntEntry.puntData)
}

// bytes pathName = 2;
inline void PuntResponse_PuntEntry::clear_pathname() {
  pathname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PuntResponse_PuntEntry::pathname() const {
  // @@protoc_insertion_point(field_get:rpc.PuntResponse.PuntEntry.pathName)
  return pathname_.GetNoArena();
}
inline void PuntResponse_PuntEntry::set_pathname(const ::std::string& value) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.PuntResponse.PuntEntry.pathName)
}
#if LANG_CXX11
inline void PuntResponse_PuntEntry::set_pathname(::std::string&& value) {
  
  pathname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.PuntResponse.PuntEntry.pathName)
}
#endif
inline void PuntResponse_PuntEntry::set_pathname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.PuntResponse.PuntEntry.pathName)
}
inline void PuntResponse_PuntEntry::set_pathname(const void* value, size_t size) {
  
  pathname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.PuntResponse.PuntEntry.pathName)
}
inline ::std::string* PuntResponse_PuntEntry::mutable_pathname() {
  
  // @@protoc_insertion_point(field_mutable:rpc.PuntResponse.PuntEntry.pathName)
  return pathname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PuntResponse_PuntEntry::release_pathname() {
  // @@protoc_insertion_point(field_release:rpc.PuntResponse.PuntEntry.pathName)
  
  return pathname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PuntResponse_PuntEntry::set_allocated_pathname(::std::string* pathname) {
  if (pathname != NULL) {
    
  } else {
    
  }
  pathname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pathname);
  // @@protoc_insertion_point(field_set_allocated:rpc.PuntResponse.PuntEntry.pathName)
}

// -------------------------------------------------------------------

// PuntResponse

// repeated .rpc.PuntResponse.PuntEntry punt_entries = 1;
inline int PuntResponse::punt_entries_size() const {
  return punt_entries_.size();
}
inline void PuntResponse::clear_punt_entries() {
  punt_entries_.Clear();
}
inline ::rpc::PuntResponse_PuntEntry* PuntResponse::mutable_punt_entries(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.PuntResponse.punt_entries)
  return punt_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::PuntResponse_PuntEntry >*
PuntResponse::mutable_punt_entries() {
  // @@protoc_insertion_point(field_mutable_list:rpc.PuntResponse.punt_entries)
  return &punt_entries_;
}
inline const ::rpc::PuntResponse_PuntEntry& PuntResponse::punt_entries(int index) const {
  // @@protoc_insertion_point(field_get:rpc.PuntResponse.punt_entries)
  return punt_entries_.Get(index);
}
inline ::rpc::PuntResponse_PuntEntry* PuntResponse::add_punt_entries() {
  // @@protoc_insertion_point(field_add:rpc.PuntResponse.punt_entries)
  return punt_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::PuntResponse_PuntEntry >&
PuntResponse::punt_entries() const {
  // @@protoc_insertion_point(field_list:rpc.PuntResponse.punt_entries)
  return punt_entries_;
}

// -------------------------------------------------------------------

// LinuxInterfaceResponse

// repeated .interfaces.LinuxInterfaces.Interface LinuxInterfaces = 1;
inline int LinuxInterfaceResponse::linuxinterfaces_size() const {
  return linuxinterfaces_.size();
}
inline ::interfaces::LinuxInterfaces_Interface* LinuxInterfaceResponse::mutable_linuxinterfaces(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.LinuxInterfaceResponse.LinuxInterfaces)
  return linuxinterfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >*
LinuxInterfaceResponse::mutable_linuxinterfaces() {
  // @@protoc_insertion_point(field_mutable_list:rpc.LinuxInterfaceResponse.LinuxInterfaces)
  return &linuxinterfaces_;
}
inline const ::interfaces::LinuxInterfaces_Interface& LinuxInterfaceResponse::linuxinterfaces(int index) const {
  // @@protoc_insertion_point(field_get:rpc.LinuxInterfaceResponse.LinuxInterfaces)
  return linuxinterfaces_.Get(index);
}
inline ::interfaces::LinuxInterfaces_Interface* LinuxInterfaceResponse::add_linuxinterfaces() {
  // @@protoc_insertion_point(field_add:rpc.LinuxInterfaceResponse.LinuxInterfaces)
  return linuxinterfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::LinuxInterfaces_Interface >&
LinuxInterfaceResponse::linuxinterfaces() const {
  // @@protoc_insertion_point(field_list:rpc.LinuxInterfaceResponse.LinuxInterfaces)
  return linuxinterfaces_;
}

// -------------------------------------------------------------------

// LinuxARPsResponse

// repeated .l3.LinuxStaticArpEntries.ArpEntry LinuxArpEntries = 1;
inline int LinuxARPsResponse::linuxarpentries_size() const {
  return linuxarpentries_.size();
}
inline ::l3::LinuxStaticArpEntries_ArpEntry* LinuxARPsResponse::mutable_linuxarpentries(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.LinuxARPsResponse.LinuxArpEntries)
  return linuxarpentries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >*
LinuxARPsResponse::mutable_linuxarpentries() {
  // @@protoc_insertion_point(field_mutable_list:rpc.LinuxARPsResponse.LinuxArpEntries)
  return &linuxarpentries_;
}
inline const ::l3::LinuxStaticArpEntries_ArpEntry& LinuxARPsResponse::linuxarpentries(int index) const {
  // @@protoc_insertion_point(field_get:rpc.LinuxARPsResponse.LinuxArpEntries)
  return linuxarpentries_.Get(index);
}
inline ::l3::LinuxStaticArpEntries_ArpEntry* LinuxARPsResponse::add_linuxarpentries() {
  // @@protoc_insertion_point(field_add:rpc.LinuxARPsResponse.LinuxArpEntries)
  return linuxarpentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticArpEntries_ArpEntry >&
LinuxARPsResponse::linuxarpentries() const {
  // @@protoc_insertion_point(field_list:rpc.LinuxARPsResponse.LinuxArpEntries)
  return linuxarpentries_;
}

// -------------------------------------------------------------------

// LinuxRoutesResponse

// repeated .l3.LinuxStaticRoutes.Route LinuxRoutes = 1;
inline int LinuxRoutesResponse::linuxroutes_size() const {
  return linuxroutes_.size();
}
inline ::l3::LinuxStaticRoutes_Route* LinuxRoutesResponse::mutable_linuxroutes(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.LinuxRoutesResponse.LinuxRoutes)
  return linuxroutes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >*
LinuxRoutesResponse::mutable_linuxroutes() {
  // @@protoc_insertion_point(field_mutable_list:rpc.LinuxRoutesResponse.LinuxRoutes)
  return &linuxroutes_;
}
inline const ::l3::LinuxStaticRoutes_Route& LinuxRoutesResponse::linuxroutes(int index) const {
  // @@protoc_insertion_point(field_get:rpc.LinuxRoutesResponse.LinuxRoutes)
  return linuxroutes_.Get(index);
}
inline ::l3::LinuxStaticRoutes_Route* LinuxRoutesResponse::add_linuxroutes() {
  // @@protoc_insertion_point(field_add:rpc.LinuxRoutesResponse.LinuxRoutes)
  return linuxroutes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::LinuxStaticRoutes_Route >&
LinuxRoutesResponse::linuxroutes() const {
  // @@protoc_insertion_point(field_list:rpc.LinuxRoutesResponse.LinuxRoutes)
  return linuxroutes_;
}

// -------------------------------------------------------------------

// NotificationsResponse

// uint32 nextIdx = 1;
inline void NotificationsResponse::clear_nextidx() {
  nextidx_ = 0u;
}
inline ::google::protobuf::uint32 NotificationsResponse::nextidx() const {
  // @@protoc_insertion_point(field_get:rpc.NotificationsResponse.nextIdx)
  return nextidx_;
}
inline void NotificationsResponse::set_nextidx(::google::protobuf::uint32 value) {
  
  nextidx_ = value;
  // @@protoc_insertion_point(field_set:rpc.NotificationsResponse.nextIdx)
}

// .interfaces.InterfaceNotification nIf = 2;
inline bool NotificationsResponse::has_nif() const {
  return this != internal_default_instance() && nif_ != NULL;
}
inline const ::interfaces::InterfaceNotification& NotificationsResponse::_internal_nif() const {
  return *nif_;
}
inline const ::interfaces::InterfaceNotification& NotificationsResponse::nif() const {
  const ::interfaces::InterfaceNotification* p = nif_;
  // @@protoc_insertion_point(field_get:rpc.NotificationsResponse.nIf)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::InterfaceNotification*>(
      &::interfaces::_InterfaceNotification_default_instance_);
}
inline ::interfaces::InterfaceNotification* NotificationsResponse::release_nif() {
  // @@protoc_insertion_point(field_release:rpc.NotificationsResponse.nIf)
  
  ::interfaces::InterfaceNotification* temp = nif_;
  nif_ = NULL;
  return temp;
}
inline ::interfaces::InterfaceNotification* NotificationsResponse::mutable_nif() {
  
  if (nif_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::InterfaceNotification>(GetArenaNoVirtual());
    nif_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpc.NotificationsResponse.nIf)
  return nif_;
}
inline void NotificationsResponse::set_allocated_nif(::interfaces::InterfaceNotification* nif) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(nif_);
  }
  if (nif) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nif = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nif, submessage_arena);
    }
    
  } else {
    
  }
  nif_ = nif;
  // @@protoc_insertion_point(field_set_allocated:rpc.NotificationsResponse.nIf)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_rpc_2eproto
