// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linux/model/interfaces/interfaces.proto

#include "linux/model/interfaces/interfaces.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Namespace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Tap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Veth;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LinuxInterfaces_Interface;
}  // namespace protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto
namespace interfaces {
class LinuxInterfaces_Interface_NamespaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxInterfaces_Interface_Namespace>
      _instance;
} _LinuxInterfaces_Interface_Namespace_default_instance_;
class LinuxInterfaces_Interface_VethDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxInterfaces_Interface_Veth>
      _instance;
} _LinuxInterfaces_Interface_Veth_default_instance_;
class LinuxInterfaces_Interface_TapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxInterfaces_Interface_Tap>
      _instance;
} _LinuxInterfaces_Interface_Tap_default_instance_;
class LinuxInterfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxInterfaces_Interface>
      _instance;
} _LinuxInterfaces_Interface_default_instance_;
class LinuxInterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxInterfaces>
      _instance;
} _LinuxInterfaces_default_instance_;
}  // namespace interfaces
namespace protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto {
static void InitDefaultsLinuxInterfaces_Interface_Namespace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interfaces::_LinuxInterfaces_Interface_Namespace_default_instance_;
    new (ptr) ::interfaces::LinuxInterfaces_Interface_Namespace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interfaces::LinuxInterfaces_Interface_Namespace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Namespace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxInterfaces_Interface_Namespace}, {}};

static void InitDefaultsLinuxInterfaces_Interface_Veth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interfaces::_LinuxInterfaces_Interface_Veth_default_instance_;
    new (ptr) ::interfaces::LinuxInterfaces_Interface_Veth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interfaces::LinuxInterfaces_Interface_Veth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Veth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxInterfaces_Interface_Veth}, {}};

static void InitDefaultsLinuxInterfaces_Interface_Tap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interfaces::_LinuxInterfaces_Interface_Tap_default_instance_;
    new (ptr) ::interfaces::LinuxInterfaces_Interface_Tap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interfaces::LinuxInterfaces_Interface_Tap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxInterfaces_Interface_Tap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxInterfaces_Interface_Tap}, {}};

static void InitDefaultsLinuxInterfaces_Interface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interfaces::_LinuxInterfaces_Interface_default_instance_;
    new (ptr) ::interfaces::LinuxInterfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interfaces::LinuxInterfaces_Interface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LinuxInterfaces_Interface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLinuxInterfaces_Interface}, {
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Namespace.base,
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Veth.base,
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Tap.base,}};

static void InitDefaultsLinuxInterfaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::interfaces::_LinuxInterfaces_default_instance_;
    new (ptr) ::interfaces::LinuxInterfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::interfaces::LinuxInterfaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinuxInterfaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinuxInterfaces}, {
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxInterfaces_Interface_Namespace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxInterfaces_Interface_Veth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxInterfaces_Interface_Tap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxInterfaces_Interface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxInterfaces.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, microservice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Namespace, filepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Veth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Veth, peer_if_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Tap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface_Tap, temp_if_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, ip_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, phys_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, mtu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, host_if_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, veth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces_Interface, tap_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::interfaces::LinuxInterfaces, interface_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::interfaces::LinuxInterfaces_Interface_Namespace)},
  { 10, -1, sizeof(::interfaces::LinuxInterfaces_Interface_Veth)},
  { 16, -1, sizeof(::interfaces::LinuxInterfaces_Interface_Tap)},
  { 22, -1, sizeof(::interfaces::LinuxInterfaces_Interface)},
  { 38, -1, sizeof(::interfaces::LinuxInterfaces)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::interfaces::_LinuxInterfaces_Interface_Namespace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interfaces::_LinuxInterfaces_Interface_Veth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interfaces::_LinuxInterfaces_Interface_Tap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interfaces::_LinuxInterfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::interfaces::_LinuxInterfaces_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "linux/model/interfaces/interfaces.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'linux/model/interfaces/interfaces.prot"
      "o\022\ninterfaces\"\246\006\n\017LinuxInterfaces\0228\n\tint"
      "erface\030\001 \003(\0132%.interfaces.LinuxInterface"
      "s.Interface\032\257\005\n\tInterface\022\014\n\004name\030\001 \001(\t\022"
      "\023\n\013description\030\002 \001(\t\0227\n\004type\030\003 \001(\0162).int"
      "erfaces.LinuxInterfaces.InterfaceType\022\017\n"
      "\007enabled\030\004 \001(\010\022\024\n\014ip_addresses\030\005 \003(\t\022\024\n\014"
      "phys_address\030\006 \001(\t\022\013\n\003mtu\030\007 \001(\r\022\024\n\014host_"
      "if_name\030\010 \001(\t\022B\n\tnamespace\030\t \001(\0132/.inter"
      "faces.LinuxInterfaces.Interface.Namespac"
      "e\0228\n\004veth\030\n \001(\0132*.interfaces.LinuxInterf"
      "aces.Interface.Veth\0226\n\003tap\030\013 \001(\0132).inter"
      "faces.LinuxInterfaces.Interface.Tap\032\364\001\n\t"
      "Namespace\022K\n\004type\030\001 \001(\0162=.interfaces.Lin"
      "uxInterfaces.Interface.Namespace.Namespa"
      "ceType\022\013\n\003pid\030\002 \001(\r\022\024\n\014microservice\030\003 \001("
      "\t\022\014\n\004name\030\004 \001(\t\022\020\n\010filepath\030\005 \001(\t\"W\n\rNam"
      "espaceType\022\016\n\nPID_REF_NS\020\000\022\027\n\023MICROSERVI"
      "CE_REF_NS\020\001\022\014\n\010NAMED_NS\020\002\022\017\n\013FILE_REF_NS"
      "\020\003\032\034\n\004Veth\022\024\n\014peer_if_name\030\001 \001(\t\032\033\n\003Tap\022"
      "\024\n\014temp_if_name\030\001 \001(\t\"\'\n\rInterfaceType\022\010"
      "\n\004VETH\020\000\022\014\n\010AUTO_TAP\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 870);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "linux/model/interfaces/interfaces.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto
namespace interfaces {
const ::google::protobuf::EnumDescriptor* LinuxInterfaces_Interface_Namespace_NamespaceType_descriptor() {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_enum_descriptors[0];
}
bool LinuxInterfaces_Interface_Namespace_NamespaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::PID_REF_NS;
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::MICROSERVICE_REF_NS;
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::NAMED_NS;
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::FILE_REF_NS;
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::NamespaceType_MIN;
const LinuxInterfaces_Interface_Namespace_NamespaceType LinuxInterfaces_Interface_Namespace::NamespaceType_MAX;
const int LinuxInterfaces_Interface_Namespace::NamespaceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LinuxInterfaces_InterfaceType_descriptor() {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_enum_descriptors[1];
}
bool LinuxInterfaces_InterfaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxInterfaces_InterfaceType LinuxInterfaces::VETH;
const LinuxInterfaces_InterfaceType LinuxInterfaces::AUTO_TAP;
const LinuxInterfaces_InterfaceType LinuxInterfaces::InterfaceType_MIN;
const LinuxInterfaces_InterfaceType LinuxInterfaces::InterfaceType_MAX;
const int LinuxInterfaces::InterfaceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LinuxInterfaces_Interface_Namespace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxInterfaces_Interface_Namespace::kTypeFieldNumber;
const int LinuxInterfaces_Interface_Namespace::kPidFieldNumber;
const int LinuxInterfaces_Interface_Namespace::kMicroserviceFieldNumber;
const int LinuxInterfaces_Interface_Namespace::kNameFieldNumber;
const int LinuxInterfaces_Interface_Namespace::kFilepathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxInterfaces_Interface_Namespace::LinuxInterfaces_Interface_Namespace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Namespace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:interfaces.LinuxInterfaces.Interface.Namespace)
}
LinuxInterfaces_Interface_Namespace::LinuxInterfaces_Interface_Namespace(const LinuxInterfaces_Interface_Namespace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.microservice().size() > 0) {
    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filepath().size() > 0) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:interfaces.LinuxInterfaces.Interface.Namespace)
}

void LinuxInterfaces_Interface_Namespace::SharedCtor() {
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
}

LinuxInterfaces_Interface_Namespace::~LinuxInterfaces_Interface_Namespace() {
  // @@protoc_insertion_point(destructor:interfaces.LinuxInterfaces.Interface.Namespace)
  SharedDtor();
}

void LinuxInterfaces_Interface_Namespace::SharedDtor() {
  microservice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxInterfaces_Interface_Namespace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxInterfaces_Interface_Namespace::descriptor() {
  ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxInterfaces_Interface_Namespace& LinuxInterfaces_Interface_Namespace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Namespace.base);
  return *internal_default_instance();
}


void LinuxInterfaces_Interface_Namespace::Clear() {
// @@protoc_insertion_point(message_clear_start:interfaces.LinuxInterfaces.Interface.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  microservice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  _internal_metadata_.Clear();
}

bool LinuxInterfaces_Interface_Namespace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interfaces.LinuxInterfaces.Interface.Namespace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .interfaces.LinuxInterfaces.Interface.Namespace.NamespaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::interfaces::LinuxInterfaces_Interface_Namespace_NamespaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string microservice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_microservice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->microservice().data(), static_cast<int>(this->microservice().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.Namespace.microservice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.Namespace.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filepath = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filepath().data(), static_cast<int>(this->filepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.Namespace.filepath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interfaces.LinuxInterfaces.Interface.Namespace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interfaces.LinuxInterfaces.Interface.Namespace)
  return false;
#undef DO_
}

void LinuxInterfaces_Interface_Namespace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interfaces.LinuxInterfaces.Interface.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .interfaces.LinuxInterfaces.Interface.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.microservice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->microservice(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filepath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:interfaces.LinuxInterfaces.Interface.Namespace)
}

::google::protobuf::uint8* LinuxInterfaces_Interface_Namespace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:interfaces.LinuxInterfaces.Interface.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .interfaces.LinuxInterfaces.Interface.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.microservice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->microservice(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Namespace.filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filepath(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interfaces.LinuxInterfaces.Interface.Namespace)
  return target;
}

size_t LinuxInterfaces_Interface_Namespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interfaces.LinuxInterfaces.Interface.Namespace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string microservice = 3;
  if (this->microservice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->microservice());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filepath());
  }

  // .interfaces.LinuxInterfaces.Interface.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxInterfaces_Interface_Namespace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interfaces.LinuxInterfaces.Interface.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxInterfaces_Interface_Namespace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxInterfaces_Interface_Namespace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interfaces.LinuxInterfaces.Interface.Namespace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interfaces.LinuxInterfaces.Interface.Namespace)
    MergeFrom(*source);
  }
}

void LinuxInterfaces_Interface_Namespace::MergeFrom(const LinuxInterfaces_Interface_Namespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interfaces.LinuxInterfaces.Interface.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.microservice().size() > 0) {

    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filepath().size() > 0) {

    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void LinuxInterfaces_Interface_Namespace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interfaces.LinuxInterfaces.Interface.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxInterfaces_Interface_Namespace::CopyFrom(const LinuxInterfaces_Interface_Namespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interfaces.LinuxInterfaces.Interface.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxInterfaces_Interface_Namespace::IsInitialized() const {
  return true;
}

void LinuxInterfaces_Interface_Namespace::Swap(LinuxInterfaces_Interface_Namespace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxInterfaces_Interface_Namespace::InternalSwap(LinuxInterfaces_Interface_Namespace* other) {
  using std::swap;
  microservice_.Swap(&other->microservice_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filepath_.Swap(&other->filepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxInterfaces_Interface_Namespace::GetMetadata() const {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxInterfaces_Interface_Veth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxInterfaces_Interface_Veth::kPeerIfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxInterfaces_Interface_Veth::LinuxInterfaces_Interface_Veth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Veth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:interfaces.LinuxInterfaces.Interface.Veth)
}
LinuxInterfaces_Interface_Veth::LinuxInterfaces_Interface_Veth(const LinuxInterfaces_Interface_Veth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  peer_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.peer_if_name().size() > 0) {
    peer_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_if_name_);
  }
  // @@protoc_insertion_point(copy_constructor:interfaces.LinuxInterfaces.Interface.Veth)
}

void LinuxInterfaces_Interface_Veth::SharedCtor() {
  peer_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LinuxInterfaces_Interface_Veth::~LinuxInterfaces_Interface_Veth() {
  // @@protoc_insertion_point(destructor:interfaces.LinuxInterfaces.Interface.Veth)
  SharedDtor();
}

void LinuxInterfaces_Interface_Veth::SharedDtor() {
  peer_if_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxInterfaces_Interface_Veth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxInterfaces_Interface_Veth::descriptor() {
  ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxInterfaces_Interface_Veth& LinuxInterfaces_Interface_Veth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Veth.base);
  return *internal_default_instance();
}


void LinuxInterfaces_Interface_Veth::Clear() {
// @@protoc_insertion_point(message_clear_start:interfaces.LinuxInterfaces.Interface.Veth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peer_if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LinuxInterfaces_Interface_Veth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interfaces.LinuxInterfaces.Interface.Veth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string peer_if_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_if_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peer_if_name().data(), static_cast<int>(this->peer_if_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.Veth.peer_if_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interfaces.LinuxInterfaces.Interface.Veth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interfaces.LinuxInterfaces.Interface.Veth)
  return false;
#undef DO_
}

void LinuxInterfaces_Interface_Veth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interfaces.LinuxInterfaces.Interface.Veth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string peer_if_name = 1;
  if (this->peer_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peer_if_name().data(), static_cast<int>(this->peer_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Veth.peer_if_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->peer_if_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:interfaces.LinuxInterfaces.Interface.Veth)
}

::google::protobuf::uint8* LinuxInterfaces_Interface_Veth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:interfaces.LinuxInterfaces.Interface.Veth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string peer_if_name = 1;
  if (this->peer_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peer_if_name().data(), static_cast<int>(this->peer_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Veth.peer_if_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->peer_if_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interfaces.LinuxInterfaces.Interface.Veth)
  return target;
}

size_t LinuxInterfaces_Interface_Veth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interfaces.LinuxInterfaces.Interface.Veth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string peer_if_name = 1;
  if (this->peer_if_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_if_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxInterfaces_Interface_Veth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interfaces.LinuxInterfaces.Interface.Veth)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxInterfaces_Interface_Veth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxInterfaces_Interface_Veth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interfaces.LinuxInterfaces.Interface.Veth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interfaces.LinuxInterfaces.Interface.Veth)
    MergeFrom(*source);
  }
}

void LinuxInterfaces_Interface_Veth::MergeFrom(const LinuxInterfaces_Interface_Veth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interfaces.LinuxInterfaces.Interface.Veth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.peer_if_name().size() > 0) {

    peer_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_if_name_);
  }
}

void LinuxInterfaces_Interface_Veth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interfaces.LinuxInterfaces.Interface.Veth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxInterfaces_Interface_Veth::CopyFrom(const LinuxInterfaces_Interface_Veth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interfaces.LinuxInterfaces.Interface.Veth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxInterfaces_Interface_Veth::IsInitialized() const {
  return true;
}

void LinuxInterfaces_Interface_Veth::Swap(LinuxInterfaces_Interface_Veth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxInterfaces_Interface_Veth::InternalSwap(LinuxInterfaces_Interface_Veth* other) {
  using std::swap;
  peer_if_name_.Swap(&other->peer_if_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxInterfaces_Interface_Veth::GetMetadata() const {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxInterfaces_Interface_Tap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxInterfaces_Interface_Tap::kTempIfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxInterfaces_Interface_Tap::LinuxInterfaces_Interface_Tap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Tap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:interfaces.LinuxInterfaces.Interface.Tap)
}
LinuxInterfaces_Interface_Tap::LinuxInterfaces_Interface_Tap(const LinuxInterfaces_Interface_Tap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  temp_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.temp_if_name().size() > 0) {
    temp_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temp_if_name_);
  }
  // @@protoc_insertion_point(copy_constructor:interfaces.LinuxInterfaces.Interface.Tap)
}

void LinuxInterfaces_Interface_Tap::SharedCtor() {
  temp_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LinuxInterfaces_Interface_Tap::~LinuxInterfaces_Interface_Tap() {
  // @@protoc_insertion_point(destructor:interfaces.LinuxInterfaces.Interface.Tap)
  SharedDtor();
}

void LinuxInterfaces_Interface_Tap::SharedDtor() {
  temp_if_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxInterfaces_Interface_Tap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxInterfaces_Interface_Tap::descriptor() {
  ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxInterfaces_Interface_Tap& LinuxInterfaces_Interface_Tap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface_Tap.base);
  return *internal_default_instance();
}


void LinuxInterfaces_Interface_Tap::Clear() {
// @@protoc_insertion_point(message_clear_start:interfaces.LinuxInterfaces.Interface.Tap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temp_if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LinuxInterfaces_Interface_Tap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interfaces.LinuxInterfaces.Interface.Tap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string temp_if_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_temp_if_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->temp_if_name().data(), static_cast<int>(this->temp_if_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.Tap.temp_if_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interfaces.LinuxInterfaces.Interface.Tap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interfaces.LinuxInterfaces.Interface.Tap)
  return false;
#undef DO_
}

void LinuxInterfaces_Interface_Tap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interfaces.LinuxInterfaces.Interface.Tap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string temp_if_name = 1;
  if (this->temp_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temp_if_name().data(), static_cast<int>(this->temp_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Tap.temp_if_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->temp_if_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:interfaces.LinuxInterfaces.Interface.Tap)
}

::google::protobuf::uint8* LinuxInterfaces_Interface_Tap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:interfaces.LinuxInterfaces.Interface.Tap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string temp_if_name = 1;
  if (this->temp_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->temp_if_name().data(), static_cast<int>(this->temp_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.Tap.temp_if_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->temp_if_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interfaces.LinuxInterfaces.Interface.Tap)
  return target;
}

size_t LinuxInterfaces_Interface_Tap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interfaces.LinuxInterfaces.Interface.Tap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string temp_if_name = 1;
  if (this->temp_if_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->temp_if_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxInterfaces_Interface_Tap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interfaces.LinuxInterfaces.Interface.Tap)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxInterfaces_Interface_Tap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxInterfaces_Interface_Tap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interfaces.LinuxInterfaces.Interface.Tap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interfaces.LinuxInterfaces.Interface.Tap)
    MergeFrom(*source);
  }
}

void LinuxInterfaces_Interface_Tap::MergeFrom(const LinuxInterfaces_Interface_Tap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interfaces.LinuxInterfaces.Interface.Tap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.temp_if_name().size() > 0) {

    temp_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.temp_if_name_);
  }
}

void LinuxInterfaces_Interface_Tap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interfaces.LinuxInterfaces.Interface.Tap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxInterfaces_Interface_Tap::CopyFrom(const LinuxInterfaces_Interface_Tap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interfaces.LinuxInterfaces.Interface.Tap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxInterfaces_Interface_Tap::IsInitialized() const {
  return true;
}

void LinuxInterfaces_Interface_Tap::Swap(LinuxInterfaces_Interface_Tap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxInterfaces_Interface_Tap::InternalSwap(LinuxInterfaces_Interface_Tap* other) {
  using std::swap;
  temp_if_name_.Swap(&other->temp_if_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxInterfaces_Interface_Tap::GetMetadata() const {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxInterfaces_Interface::InitAsDefaultInstance() {
  ::interfaces::_LinuxInterfaces_Interface_default_instance_._instance.get_mutable()->namespace__ = const_cast< ::interfaces::LinuxInterfaces_Interface_Namespace*>(
      ::interfaces::LinuxInterfaces_Interface_Namespace::internal_default_instance());
  ::interfaces::_LinuxInterfaces_Interface_default_instance_._instance.get_mutable()->veth_ = const_cast< ::interfaces::LinuxInterfaces_Interface_Veth*>(
      ::interfaces::LinuxInterfaces_Interface_Veth::internal_default_instance());
  ::interfaces::_LinuxInterfaces_Interface_default_instance_._instance.get_mutable()->tap_ = const_cast< ::interfaces::LinuxInterfaces_Interface_Tap*>(
      ::interfaces::LinuxInterfaces_Interface_Tap::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxInterfaces_Interface::kNameFieldNumber;
const int LinuxInterfaces_Interface::kDescriptionFieldNumber;
const int LinuxInterfaces_Interface::kTypeFieldNumber;
const int LinuxInterfaces_Interface::kEnabledFieldNumber;
const int LinuxInterfaces_Interface::kIpAddressesFieldNumber;
const int LinuxInterfaces_Interface::kPhysAddressFieldNumber;
const int LinuxInterfaces_Interface::kMtuFieldNumber;
const int LinuxInterfaces_Interface::kHostIfNameFieldNumber;
const int LinuxInterfaces_Interface::kNamespaceFieldNumber;
const int LinuxInterfaces_Interface::kVethFieldNumber;
const int LinuxInterfaces_Interface::kTapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxInterfaces_Interface::LinuxInterfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:interfaces.LinuxInterfaces.Interface)
}
LinuxInterfaces_Interface::LinuxInterfaces_Interface(const LinuxInterfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip_addresses_(from.ip_addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phys_address().size() > 0) {
    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
  host_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_if_name().size() > 0) {
    host_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_if_name_);
  }
  if (from.has_namespace_()) {
    namespace__ = new ::interfaces::LinuxInterfaces_Interface_Namespace(*from.namespace__);
  } else {
    namespace__ = NULL;
  }
  if (from.has_veth()) {
    veth_ = new ::interfaces::LinuxInterfaces_Interface_Veth(*from.veth_);
  } else {
    veth_ = NULL;
  }
  if (from.has_tap()) {
    tap_ = new ::interfaces::LinuxInterfaces_Interface_Tap(*from.tap_);
  } else {
    tap_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mtu_) -
    reinterpret_cast<char*>(&type_)) + sizeof(mtu_));
  // @@protoc_insertion_point(copy_constructor:interfaces.LinuxInterfaces.Interface)
}

void LinuxInterfaces_Interface::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&namespace__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtu_) -
      reinterpret_cast<char*>(&namespace__)) + sizeof(mtu_));
}

LinuxInterfaces_Interface::~LinuxInterfaces_Interface() {
  // @@protoc_insertion_point(destructor:interfaces.LinuxInterfaces.Interface)
  SharedDtor();
}

void LinuxInterfaces_Interface::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_if_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namespace__;
  if (this != internal_default_instance()) delete veth_;
  if (this != internal_default_instance()) delete tap_;
}

void LinuxInterfaces_Interface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxInterfaces_Interface::descriptor() {
  ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxInterfaces_Interface& LinuxInterfaces_Interface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces_Interface.base);
  return *internal_default_instance();
}


void LinuxInterfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:interfaces.LinuxInterfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addresses_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && namespace__ != NULL) {
    delete namespace__;
  }
  namespace__ = NULL;
  if (GetArenaNoVirtual() == NULL && veth_ != NULL) {
    delete veth_;
  }
  veth_ = NULL;
  if (GetArenaNoVirtual() == NULL && tap_ != NULL) {
    delete tap_;
  }
  tap_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mtu_) -
      reinterpret_cast<char*>(&type_)) + sizeof(mtu_));
  _internal_metadata_.Clear();
}

bool LinuxInterfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interfaces.LinuxInterfaces.Interface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interfaces.LinuxInterfaces.InterfaceType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::interfaces::LinuxInterfaces_InterfaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ip_addresses = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ip_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addresses(this->ip_addresses_size() - 1).data(),
            static_cast<int>(this->ip_addresses(this->ip_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.ip_addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phys_address = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phys_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phys_address().data(), static_cast<int>(this->phys_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.phys_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mtu = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mtu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_if_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_if_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_if_name().data(), static_cast<int>(this->host_if_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "interfaces.LinuxInterfaces.Interface.host_if_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interfaces.LinuxInterfaces.Interface.Namespace namespace = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespace_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interfaces.LinuxInterfaces.Interface.Veth veth = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_veth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .interfaces.LinuxInterfaces.Interface.Tap tap = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interfaces.LinuxInterfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interfaces.LinuxInterfaces.Interface)
  return false;
#undef DO_
}

void LinuxInterfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interfaces.LinuxInterfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // .interfaces.LinuxInterfaces.InterfaceType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  // repeated string ip_addresses = 5;
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addresses(i).data(), static_cast<int>(this->ip_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.ip_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->ip_addresses(i), output);
  }

  // string phys_address = 6;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.phys_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->phys_address(), output);
  }

  // uint32 mtu = 7;
  if (this->mtu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mtu(), output);
  }

  // string host_if_name = 8;
  if (this->host_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_if_name().data(), static_cast<int>(this->host_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.host_if_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->host_if_name(), output);
  }

  // .interfaces.LinuxInterfaces.Interface.Namespace namespace = 9;
  if (this->has_namespace_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_namespace_(), output);
  }

  // .interfaces.LinuxInterfaces.Interface.Veth veth = 10;
  if (this->has_veth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_veth(), output);
  }

  // .interfaces.LinuxInterfaces.Interface.Tap tap = 11;
  if (this->has_tap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_tap(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:interfaces.LinuxInterfaces.Interface)
}

::google::protobuf::uint8* LinuxInterfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:interfaces.LinuxInterfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // .interfaces.LinuxInterfaces.InterfaceType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  // repeated string ip_addresses = 5;
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addresses(i).data(), static_cast<int>(this->ip_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.ip_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->ip_addresses(i), target);
  }

  // string phys_address = 6;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.phys_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->phys_address(), target);
  }

  // uint32 mtu = 7;
  if (this->mtu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mtu(), target);
  }

  // string host_if_name = 8;
  if (this->host_if_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_if_name().data(), static_cast<int>(this->host_if_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "interfaces.LinuxInterfaces.Interface.host_if_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->host_if_name(), target);
  }

  // .interfaces.LinuxInterfaces.Interface.Namespace namespace = 9;
  if (this->has_namespace_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_namespace_(), deterministic, target);
  }

  // .interfaces.LinuxInterfaces.Interface.Veth veth = 10;
  if (this->has_veth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_veth(), deterministic, target);
  }

  // .interfaces.LinuxInterfaces.Interface.Tap tap = 11;
  if (this->has_tap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_tap(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interfaces.LinuxInterfaces.Interface)
  return target;
}

size_t LinuxInterfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interfaces.LinuxInterfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string ip_addresses = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ip_addresses_size());
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ip_addresses(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string phys_address = 6;
  if (this->phys_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phys_address());
  }

  // string host_if_name = 8;
  if (this->host_if_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_if_name());
  }

  // .interfaces.LinuxInterfaces.Interface.Namespace namespace = 9;
  if (this->has_namespace_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *namespace__);
  }

  // .interfaces.LinuxInterfaces.Interface.Veth veth = 10;
  if (this->has_veth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *veth_);
  }

  // .interfaces.LinuxInterfaces.Interface.Tap tap = 11;
  if (this->has_tap()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tap_);
  }

  // .interfaces.LinuxInterfaces.InterfaceType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // bool enabled = 4;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // uint32 mtu = 7;
  if (this->mtu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mtu());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxInterfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interfaces.LinuxInterfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxInterfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxInterfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interfaces.LinuxInterfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interfaces.LinuxInterfaces.Interface)
    MergeFrom(*source);
  }
}

void LinuxInterfaces_Interface::MergeFrom(const LinuxInterfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interfaces.LinuxInterfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ip_addresses_.MergeFrom(from.ip_addresses_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.phys_address().size() > 0) {

    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
  if (from.host_if_name().size() > 0) {

    host_if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_if_name_);
  }
  if (from.has_namespace_()) {
    mutable_namespace_()->::interfaces::LinuxInterfaces_Interface_Namespace::MergeFrom(from.namespace_());
  }
  if (from.has_veth()) {
    mutable_veth()->::interfaces::LinuxInterfaces_Interface_Veth::MergeFrom(from.veth());
  }
  if (from.has_tap()) {
    mutable_tap()->::interfaces::LinuxInterfaces_Interface_Tap::MergeFrom(from.tap());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.mtu() != 0) {
    set_mtu(from.mtu());
  }
}

void LinuxInterfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interfaces.LinuxInterfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxInterfaces_Interface::CopyFrom(const LinuxInterfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interfaces.LinuxInterfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxInterfaces_Interface::IsInitialized() const {
  return true;
}

void LinuxInterfaces_Interface::Swap(LinuxInterfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxInterfaces_Interface::InternalSwap(LinuxInterfaces_Interface* other) {
  using std::swap;
  ip_addresses_.InternalSwap(CastToBase(&other->ip_addresses_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phys_address_.Swap(&other->phys_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_if_name_.Swap(&other->host_if_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(namespace__, other->namespace__);
  swap(veth_, other->veth_);
  swap(tap_, other->tap_);
  swap(type_, other->type_);
  swap(enabled_, other->enabled_);
  swap(mtu_, other->mtu_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxInterfaces_Interface::GetMetadata() const {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxInterfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxInterfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxInterfaces::LinuxInterfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:interfaces.LinuxInterfaces)
}
LinuxInterfaces::LinuxInterfaces(const LinuxInterfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:interfaces.LinuxInterfaces)
}

void LinuxInterfaces::SharedCtor() {
}

LinuxInterfaces::~LinuxInterfaces() {
  // @@protoc_insertion_point(destructor:interfaces.LinuxInterfaces)
  SharedDtor();
}

void LinuxInterfaces::SharedDtor() {
}

void LinuxInterfaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxInterfaces::descriptor() {
  ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxInterfaces& LinuxInterfaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::scc_info_LinuxInterfaces.base);
  return *internal_default_instance();
}


void LinuxInterfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:interfaces.LinuxInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool LinuxInterfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:interfaces.LinuxInterfaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .interfaces.LinuxInterfaces.Interface interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:interfaces.LinuxInterfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:interfaces.LinuxInterfaces)
  return false;
#undef DO_
}

void LinuxInterfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:interfaces.LinuxInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interfaces.LinuxInterfaces.Interface interface = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->interface(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:interfaces.LinuxInterfaces)
}

::google::protobuf::uint8* LinuxInterfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:interfaces.LinuxInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .interfaces.LinuxInterfaces.Interface interface = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:interfaces.LinuxInterfaces)
  return target;
}

size_t LinuxInterfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:interfaces.LinuxInterfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .interfaces.LinuxInterfaces.Interface interface = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxInterfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:interfaces.LinuxInterfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxInterfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxInterfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:interfaces.LinuxInterfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:interfaces.LinuxInterfaces)
    MergeFrom(*source);
  }
}

void LinuxInterfaces::MergeFrom(const LinuxInterfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:interfaces.LinuxInterfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void LinuxInterfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:interfaces.LinuxInterfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxInterfaces::CopyFrom(const LinuxInterfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:interfaces.LinuxInterfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxInterfaces::IsInitialized() const {
  return true;
}

void LinuxInterfaces::Swap(LinuxInterfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxInterfaces::InternalSwap(LinuxInterfaces* other) {
  using std::swap;
  CastToBase(&interface_)->InternalSwap(CastToBase(&other->interface_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxInterfaces::GetMetadata() const {
  protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2finterfaces_2finterfaces_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace interfaces
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::interfaces::LinuxInterfaces_Interface_Namespace* Arena::CreateMaybeMessage< ::interfaces::LinuxInterfaces_Interface_Namespace >(Arena* arena) {
  return Arena::CreateInternal< ::interfaces::LinuxInterfaces_Interface_Namespace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::interfaces::LinuxInterfaces_Interface_Veth* Arena::CreateMaybeMessage< ::interfaces::LinuxInterfaces_Interface_Veth >(Arena* arena) {
  return Arena::CreateInternal< ::interfaces::LinuxInterfaces_Interface_Veth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::interfaces::LinuxInterfaces_Interface_Tap* Arena::CreateMaybeMessage< ::interfaces::LinuxInterfaces_Interface_Tap >(Arena* arena) {
  return Arena::CreateInternal< ::interfaces::LinuxInterfaces_Interface_Tap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::interfaces::LinuxInterfaces_Interface* Arena::CreateMaybeMessage< ::interfaces::LinuxInterfaces_Interface >(Arena* arena) {
  return Arena::CreateInternal< ::interfaces::LinuxInterfaces_Interface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::interfaces::LinuxInterfaces* Arena::CreateMaybeMessage< ::interfaces::LinuxInterfaces >(Arena* arena) {
  return Arena::CreateInternal< ::interfaces::LinuxInterfaces >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
