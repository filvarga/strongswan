// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: linux/model/l3/l3.proto

#include "linux/model/l3/l3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_linux_2fmodel_2fl3_2fl3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_Namespace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_NudState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticRoutes_Route_Namespace;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticRoutes_Route_Scope;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LinuxStaticRoutes_Route;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_linux_2fmodel_2fl3_2fl3_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LinuxStaticArpEntries_ArpEntry;
}  // namespace protobuf_linux_2fmodel_2fl3_2fl3_2eproto
namespace l3 {
class LinuxStaticRoutes_Route_NamespaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticRoutes_Route_Namespace>
      _instance;
} _LinuxStaticRoutes_Route_Namespace_default_instance_;
class LinuxStaticRoutes_Route_ScopeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticRoutes_Route_Scope>
      _instance;
} _LinuxStaticRoutes_Route_Scope_default_instance_;
class LinuxStaticRoutes_RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticRoutes_Route>
      _instance;
} _LinuxStaticRoutes_Route_default_instance_;
class LinuxStaticRoutesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticRoutes>
      _instance;
} _LinuxStaticRoutes_default_instance_;
class LinuxStaticArpEntries_ArpEntry_NamespaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticArpEntries_ArpEntry_Namespace>
      _instance;
} _LinuxStaticArpEntries_ArpEntry_Namespace_default_instance_;
class LinuxStaticArpEntries_ArpEntry_IpFamilyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticArpEntries_ArpEntry_IpFamily>
      _instance;
} _LinuxStaticArpEntries_ArpEntry_IpFamily_default_instance_;
class LinuxStaticArpEntries_ArpEntry_NudStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticArpEntries_ArpEntry_NudState>
      _instance;
} _LinuxStaticArpEntries_ArpEntry_NudState_default_instance_;
class LinuxStaticArpEntries_ArpEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticArpEntries_ArpEntry>
      _instance;
} _LinuxStaticArpEntries_ArpEntry_default_instance_;
class LinuxStaticArpEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxStaticArpEntries>
      _instance;
} _LinuxStaticArpEntries_default_instance_;
}  // namespace l3
namespace protobuf_linux_2fmodel_2fl3_2fl3_2eproto {
static void InitDefaultsLinuxStaticRoutes_Route_Namespace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticRoutes_Route_Namespace_default_instance_;
    new (ptr) ::l3::LinuxStaticRoutes_Route_Namespace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticRoutes_Route_Namespace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticRoutes_Route_Namespace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxStaticRoutes_Route_Namespace}, {}};

static void InitDefaultsLinuxStaticRoutes_Route_Scope() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticRoutes_Route_Scope_default_instance_;
    new (ptr) ::l3::LinuxStaticRoutes_Route_Scope();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticRoutes_Route_Scope::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticRoutes_Route_Scope =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxStaticRoutes_Route_Scope}, {}};

static void InitDefaultsLinuxStaticRoutes_Route() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticRoutes_Route_default_instance_;
    new (ptr) ::l3::LinuxStaticRoutes_Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticRoutes_Route::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LinuxStaticRoutes_Route =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLinuxStaticRoutes_Route}, {
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Namespace.base,
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Scope.base,}};

static void InitDefaultsLinuxStaticRoutes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticRoutes_default_instance_;
    new (ptr) ::l3::LinuxStaticRoutes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticRoutes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinuxStaticRoutes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinuxStaticRoutes}, {
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route.base,}};

static void InitDefaultsLinuxStaticArpEntries_ArpEntry_Namespace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticArpEntries_ArpEntry_Namespace_default_instance_;
    new (ptr) ::l3::LinuxStaticArpEntries_ArpEntry_Namespace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticArpEntries_ArpEntry_Namespace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_Namespace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxStaticArpEntries_ArpEntry_Namespace}, {}};

static void InitDefaultsLinuxStaticArpEntries_ArpEntry_IpFamily() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticArpEntries_ArpEntry_IpFamily_default_instance_;
    new (ptr) ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxStaticArpEntries_ArpEntry_IpFamily}, {}};

static void InitDefaultsLinuxStaticArpEntries_ArpEntry_NudState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticArpEntries_ArpEntry_NudState_default_instance_;
    new (ptr) ::l3::LinuxStaticArpEntries_ArpEntry_NudState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticArpEntries_ArpEntry_NudState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LinuxStaticArpEntries_ArpEntry_NudState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinuxStaticArpEntries_ArpEntry_NudState}, {}};

static void InitDefaultsLinuxStaticArpEntries_ArpEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticArpEntries_ArpEntry_default_instance_;
    new (ptr) ::l3::LinuxStaticArpEntries_ArpEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticArpEntries_ArpEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LinuxStaticArpEntries_ArpEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLinuxStaticArpEntries_ArpEntry}, {
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_Namespace.base,
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily.base,
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_NudState.base,}};

static void InitDefaultsLinuxStaticArpEntries() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l3::_LinuxStaticArpEntries_default_instance_;
    new (ptr) ::l3::LinuxStaticArpEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l3::LinuxStaticArpEntries::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinuxStaticArpEntries =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinuxStaticArpEntries}, {
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticRoutes_Route_Namespace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticRoutes_Route_Scope.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticRoutes_Route.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticRoutes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticArpEntries_ArpEntry_Namespace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticArpEntries_ArpEntry_NudState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticArpEntries_ArpEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinuxStaticArpEntries.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, microservice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Namespace, filepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Scope, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route_Scope, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, default__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, dst_ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, src_ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, gw_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes_Route, table_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticRoutes, route_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, microservice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_Namespace, filepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_IpFamily, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_IpFamily, family_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_NudState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry_NudState, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, ip_family_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries_ArpEntry, hw_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l3::LinuxStaticArpEntries, arp_entry_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::l3::LinuxStaticRoutes_Route_Namespace)},
  { 10, -1, sizeof(::l3::LinuxStaticRoutes_Route_Scope)},
  { 16, -1, sizeof(::l3::LinuxStaticRoutes_Route)},
  { 32, -1, sizeof(::l3::LinuxStaticRoutes)},
  { 38, -1, sizeof(::l3::LinuxStaticArpEntries_ArpEntry_Namespace)},
  { 48, -1, sizeof(::l3::LinuxStaticArpEntries_ArpEntry_IpFamily)},
  { 54, -1, sizeof(::l3::LinuxStaticArpEntries_ArpEntry_NudState)},
  { 60, -1, sizeof(::l3::LinuxStaticArpEntries_ArpEntry)},
  { 72, -1, sizeof(::l3::LinuxStaticArpEntries)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticRoutes_Route_Namespace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticRoutes_Route_Scope_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticRoutes_Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticRoutes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticArpEntries_ArpEntry_Namespace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticArpEntries_ArpEntry_IpFamily_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticArpEntries_ArpEntry_NudState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticArpEntries_ArpEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l3::_LinuxStaticArpEntries_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "linux/model/l3/l3.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027linux/model/l3/l3.proto\022\002l3\"\276\005\n\021LinuxS"
      "taticRoutes\022*\n\005route\030\001 \003(\0132\033.l3.LinuxSta"
      "ticRoutes.Route\032\374\004\n\005Route\022\014\n\004name\030\001 \001(\t\022"
      "\017\n\007default\030\002 \001(\010\0228\n\tnamespace\030\003 \001(\0132%.l3"
      ".LinuxStaticRoutes.Route.Namespace\022\021\n\tin"
      "terface\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\0220\n\005sc"
      "ope\030\007 \001(\0132!.l3.LinuxStaticRoutes.Route.S"
      "cope\022\023\n\013dst_ip_addr\030\010 \001(\t\022\023\n\013src_ip_addr"
      "\030\t \001(\t\022\017\n\007gw_addr\030\n \001(\t\022\016\n\006metric\030\013 \001(\r\022"
      "\r\n\005table\030\014 \001(\r\032\352\001\n\tNamespace\022A\n\004type\030\001 \001"
      "(\01623.l3.LinuxStaticRoutes.Route.Namespac"
      "e.NamespaceType\022\013\n\003pid\030\002 \001(\r\022\024\n\014microser"
      "vice\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\020\n\010filepath\030\005 \001"
      "(\t\"W\n\rNamespaceType\022\016\n\nPID_REF_NS\020\000\022\027\n\023M"
      "ICROSERVICE_REF_NS\020\001\022\014\n\010NAMED_NS\020\002\022\017\n\013FI"
      "LE_REF_NS\020\003\032y\n\005Scope\0229\n\004type\030\001 \001(\0162+.l3."
      "LinuxStaticRoutes.Route.Scope.ScopeType\""
      "5\n\tScopeType\022\n\n\006GLOBAL\020\000\022\010\n\004SITE\020\001\022\010\n\004LI"
      "NK\020\002\022\010\n\004HOST\020\003\"\354\006\n\025LinuxStaticArpEntries"
      "\0225\n\tarp_entry\030\001 \003(\0132\".l3.LinuxStaticArpE"
      "ntries.ArpEntry\032\233\006\n\010ArpEntry\022\014\n\004name\030\001 \001"
      "(\t\022\?\n\tnamespace\030\002 \001(\0132,.l3.LinuxStaticAr"
      "pEntries.ArpEntry.Namespace\022\021\n\tinterface"
      "\030\003 \001(\t\022>\n\tip_family\030\004 \001(\0132+.l3.LinuxStat"
      "icArpEntries.ArpEntry.IpFamily\022:\n\005state\030"
      "\005 \001(\0132+.l3.LinuxStaticArpEntries.ArpEntr"
      "y.NudState\022\017\n\007ip_addr\030\006 \001(\t\022\022\n\nhw_addres"
      "s\030\007 \001(\t\032\361\001\n\tNamespace\022H\n\004type\030\001 \001(\0162:.l3"
      ".LinuxStaticArpEntries.ArpEntry.Namespac"
      "e.NamespaceType\022\013\n\003pid\030\002 \001(\r\022\024\n\014microser"
      "vice\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\020\n\010filepath\030\005 \001"
      "(\t\"W\n\rNamespaceType\022\016\n\nPID_REF_NS\020\000\022\027\n\023M"
      "ICROSERVICE_REF_NS\020\001\022\014\n\010NAMED_NS\020\002\022\017\n\013FI"
      "LE_REF_NS\020\003\032\177\n\010IpFamily\022B\n\006family\030\001 \001(\0162"
      "2.l3.LinuxStaticArpEntries.ArpEntry.IpFa"
      "mily.Family\"/\n\006Family\022\010\n\004IPV4\020\000\022\010\n\004IPV6\020"
      "\001\022\007\n\003ALL\020\002\022\010\n\004MPLS\020\003\032\226\001\n\010NudState\022F\n\004typ"
      "e\030\001 \001(\01628.l3.LinuxStaticArpEntries.ArpEn"
      "try.NudState.NudStateType\"B\n\014NudStateTyp"
      "e\022\r\n\tPERMANENT\020\000\022\t\n\005NOARP\020\001\022\r\n\tREACHABLE"
      "\020\002\022\t\n\005STALE\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1621);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "linux/model/l3/l3.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_linux_2fmodel_2fl3_2fl3_2eproto
namespace l3 {
const ::google::protobuf::EnumDescriptor* LinuxStaticRoutes_Route_Namespace_NamespaceType_descriptor() {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_enum_descriptors[0];
}
bool LinuxStaticRoutes_Route_Namespace_NamespaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::PID_REF_NS;
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::MICROSERVICE_REF_NS;
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::NAMED_NS;
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::FILE_REF_NS;
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::NamespaceType_MIN;
const LinuxStaticRoutes_Route_Namespace_NamespaceType LinuxStaticRoutes_Route_Namespace::NamespaceType_MAX;
const int LinuxStaticRoutes_Route_Namespace::NamespaceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LinuxStaticRoutes_Route_Scope_ScopeType_descriptor() {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_enum_descriptors[1];
}
bool LinuxStaticRoutes_Route_Scope_ScopeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::GLOBAL;
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::SITE;
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::LINK;
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::HOST;
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::ScopeType_MIN;
const LinuxStaticRoutes_Route_Scope_ScopeType LinuxStaticRoutes_Route_Scope::ScopeType_MAX;
const int LinuxStaticRoutes_Route_Scope::ScopeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_descriptor() {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_enum_descriptors[2];
}
bool LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::PID_REF_NS;
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::MICROSERVICE_REF_NS;
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::NAMED_NS;
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::FILE_REF_NS;
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::NamespaceType_MIN;
const LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType LinuxStaticArpEntries_ArpEntry_Namespace::NamespaceType_MAX;
const int LinuxStaticArpEntries_ArpEntry_Namespace::NamespaceType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LinuxStaticArpEntries_ArpEntry_IpFamily_Family_descriptor() {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_enum_descriptors[3];
}
bool LinuxStaticArpEntries_ArpEntry_IpFamily_Family_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::IPV4;
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::IPV6;
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::ALL;
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::MPLS;
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::Family_MIN;
const LinuxStaticArpEntries_ArpEntry_IpFamily_Family LinuxStaticArpEntries_ArpEntry_IpFamily::Family_MAX;
const int LinuxStaticArpEntries_ArpEntry_IpFamily::Family_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_descriptor() {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_enum_descriptors[4];
}
bool LinuxStaticArpEntries_ArpEntry_NudState_NudStateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::PERMANENT;
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::NOARP;
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::REACHABLE;
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::STALE;
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::NudStateType_MIN;
const LinuxStaticArpEntries_ArpEntry_NudState_NudStateType LinuxStaticArpEntries_ArpEntry_NudState::NudStateType_MAX;
const int LinuxStaticArpEntries_ArpEntry_NudState::NudStateType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void LinuxStaticRoutes_Route_Namespace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticRoutes_Route_Namespace::kTypeFieldNumber;
const int LinuxStaticRoutes_Route_Namespace::kPidFieldNumber;
const int LinuxStaticRoutes_Route_Namespace::kMicroserviceFieldNumber;
const int LinuxStaticRoutes_Route_Namespace::kNameFieldNumber;
const int LinuxStaticRoutes_Route_Namespace::kFilepathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticRoutes_Route_Namespace::LinuxStaticRoutes_Route_Namespace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Namespace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticRoutes.Route.Namespace)
}
LinuxStaticRoutes_Route_Namespace::LinuxStaticRoutes_Route_Namespace(const LinuxStaticRoutes_Route_Namespace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.microservice().size() > 0) {
    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filepath().size() > 0) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticRoutes.Route.Namespace)
}

void LinuxStaticRoutes_Route_Namespace::SharedCtor() {
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
}

LinuxStaticRoutes_Route_Namespace::~LinuxStaticRoutes_Route_Namespace() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticRoutes.Route.Namespace)
  SharedDtor();
}

void LinuxStaticRoutes_Route_Namespace::SharedDtor() {
  microservice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxStaticRoutes_Route_Namespace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticRoutes_Route_Namespace::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticRoutes_Route_Namespace& LinuxStaticRoutes_Route_Namespace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Namespace.base);
  return *internal_default_instance();
}


void LinuxStaticRoutes_Route_Namespace::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticRoutes.Route.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  microservice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  _internal_metadata_.Clear();
}

bool LinuxStaticRoutes_Route_Namespace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticRoutes.Route.Namespace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .l3.LinuxStaticRoutes.Route.Namespace.NamespaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::l3::LinuxStaticRoutes_Route_Namespace_NamespaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string microservice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_microservice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->microservice().data(), static_cast<int>(this->microservice().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.Namespace.microservice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.Namespace.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filepath = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filepath().data(), static_cast<int>(this->filepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.Namespace.filepath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticRoutes.Route.Namespace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticRoutes.Route.Namespace)
  return false;
#undef DO_
}

void LinuxStaticRoutes_Route_Namespace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticRoutes.Route.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticRoutes.Route.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.microservice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->microservice(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filepath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticRoutes.Route.Namespace)
}

::google::protobuf::uint8* LinuxStaticRoutes_Route_Namespace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticRoutes.Route.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticRoutes.Route.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.microservice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->microservice(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.Namespace.filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filepath(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticRoutes.Route.Namespace)
  return target;
}

size_t LinuxStaticRoutes_Route_Namespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticRoutes.Route.Namespace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string microservice = 3;
  if (this->microservice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->microservice());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filepath());
  }

  // .l3.LinuxStaticRoutes.Route.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticRoutes_Route_Namespace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticRoutes.Route.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticRoutes_Route_Namespace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticRoutes_Route_Namespace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticRoutes.Route.Namespace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticRoutes.Route.Namespace)
    MergeFrom(*source);
  }
}

void LinuxStaticRoutes_Route_Namespace::MergeFrom(const LinuxStaticRoutes_Route_Namespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticRoutes.Route.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.microservice().size() > 0) {

    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filepath().size() > 0) {

    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void LinuxStaticRoutes_Route_Namespace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticRoutes.Route.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticRoutes_Route_Namespace::CopyFrom(const LinuxStaticRoutes_Route_Namespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticRoutes.Route.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticRoutes_Route_Namespace::IsInitialized() const {
  return true;
}

void LinuxStaticRoutes_Route_Namespace::Swap(LinuxStaticRoutes_Route_Namespace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticRoutes_Route_Namespace::InternalSwap(LinuxStaticRoutes_Route_Namespace* other) {
  using std::swap;
  microservice_.Swap(&other->microservice_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filepath_.Swap(&other->filepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticRoutes_Route_Namespace::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticRoutes_Route_Scope::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticRoutes_Route_Scope::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticRoutes_Route_Scope::LinuxStaticRoutes_Route_Scope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Scope.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticRoutes.Route.Scope)
}
LinuxStaticRoutes_Route_Scope::LinuxStaticRoutes_Route_Scope(const LinuxStaticRoutes_Route_Scope& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticRoutes.Route.Scope)
}

void LinuxStaticRoutes_Route_Scope::SharedCtor() {
  type_ = 0;
}

LinuxStaticRoutes_Route_Scope::~LinuxStaticRoutes_Route_Scope() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticRoutes.Route.Scope)
  SharedDtor();
}

void LinuxStaticRoutes_Route_Scope::SharedDtor() {
}

void LinuxStaticRoutes_Route_Scope::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticRoutes_Route_Scope::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticRoutes_Route_Scope& LinuxStaticRoutes_Route_Scope::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route_Scope.base);
  return *internal_default_instance();
}


void LinuxStaticRoutes_Route_Scope::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticRoutes.Route.Scope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool LinuxStaticRoutes_Route_Scope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticRoutes.Route.Scope)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .l3.LinuxStaticRoutes.Route.Scope.ScopeType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::l3::LinuxStaticRoutes_Route_Scope_ScopeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticRoutes.Route.Scope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticRoutes.Route.Scope)
  return false;
#undef DO_
}

void LinuxStaticRoutes_Route_Scope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticRoutes.Route.Scope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticRoutes.Route.Scope.ScopeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticRoutes.Route.Scope)
}

::google::protobuf::uint8* LinuxStaticRoutes_Route_Scope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticRoutes.Route.Scope)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticRoutes.Route.Scope.ScopeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticRoutes.Route.Scope)
  return target;
}

size_t LinuxStaticRoutes_Route_Scope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticRoutes.Route.Scope)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .l3.LinuxStaticRoutes.Route.Scope.ScopeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticRoutes_Route_Scope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticRoutes.Route.Scope)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticRoutes_Route_Scope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticRoutes_Route_Scope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticRoutes.Route.Scope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticRoutes.Route.Scope)
    MergeFrom(*source);
  }
}

void LinuxStaticRoutes_Route_Scope::MergeFrom(const LinuxStaticRoutes_Route_Scope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticRoutes.Route.Scope)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void LinuxStaticRoutes_Route_Scope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticRoutes.Route.Scope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticRoutes_Route_Scope::CopyFrom(const LinuxStaticRoutes_Route_Scope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticRoutes.Route.Scope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticRoutes_Route_Scope::IsInitialized() const {
  return true;
}

void LinuxStaticRoutes_Route_Scope::Swap(LinuxStaticRoutes_Route_Scope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticRoutes_Route_Scope::InternalSwap(LinuxStaticRoutes_Route_Scope* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticRoutes_Route_Scope::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticRoutes_Route::InitAsDefaultInstance() {
  ::l3::_LinuxStaticRoutes_Route_default_instance_._instance.get_mutable()->namespace__ = const_cast< ::l3::LinuxStaticRoutes_Route_Namespace*>(
      ::l3::LinuxStaticRoutes_Route_Namespace::internal_default_instance());
  ::l3::_LinuxStaticRoutes_Route_default_instance_._instance.get_mutable()->scope_ = const_cast< ::l3::LinuxStaticRoutes_Route_Scope*>(
      ::l3::LinuxStaticRoutes_Route_Scope::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticRoutes_Route::kNameFieldNumber;
const int LinuxStaticRoutes_Route::kDefaultFieldNumber;
const int LinuxStaticRoutes_Route::kNamespaceFieldNumber;
const int LinuxStaticRoutes_Route::kInterfaceFieldNumber;
const int LinuxStaticRoutes_Route::kDescriptionFieldNumber;
const int LinuxStaticRoutes_Route::kScopeFieldNumber;
const int LinuxStaticRoutes_Route::kDstIpAddrFieldNumber;
const int LinuxStaticRoutes_Route::kSrcIpAddrFieldNumber;
const int LinuxStaticRoutes_Route::kGwAddrFieldNumber;
const int LinuxStaticRoutes_Route::kMetricFieldNumber;
const int LinuxStaticRoutes_Route::kTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticRoutes_Route::LinuxStaticRoutes_Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticRoutes.Route)
}
LinuxStaticRoutes_Route::LinuxStaticRoutes_Route(const LinuxStaticRoutes_Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  dst_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dst_ip_addr().size() > 0) {
    dst_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_ip_addr_);
  }
  src_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src_ip_addr().size() > 0) {
    src_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_addr_);
  }
  gw_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gw_addr().size() > 0) {
    gw_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gw_addr_);
  }
  if (from.has_namespace_()) {
    namespace__ = new ::l3::LinuxStaticRoutes_Route_Namespace(*from.namespace__);
  } else {
    namespace__ = NULL;
  }
  if (from.has_scope()) {
    scope_ = new ::l3::LinuxStaticRoutes_Route_Scope(*from.scope_);
  } else {
    scope_ = NULL;
  }
  ::memcpy(&default__, &from.default__,
    static_cast<size_t>(reinterpret_cast<char*>(&table_) -
    reinterpret_cast<char*>(&default__)) + sizeof(table_));
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticRoutes.Route)
}

void LinuxStaticRoutes_Route::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gw_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&namespace__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_) -
      reinterpret_cast<char*>(&namespace__)) + sizeof(table_));
}

LinuxStaticRoutes_Route::~LinuxStaticRoutes_Route() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticRoutes.Route)
  SharedDtor();
}

void LinuxStaticRoutes_Route::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gw_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namespace__;
  if (this != internal_default_instance()) delete scope_;
}

void LinuxStaticRoutes_Route::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticRoutes_Route::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticRoutes_Route& LinuxStaticRoutes_Route::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes_Route.base);
  return *internal_default_instance();
}


void LinuxStaticRoutes_Route::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticRoutes.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dst_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gw_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && namespace__ != NULL) {
    delete namespace__;
  }
  namespace__ = NULL;
  if (GetArenaNoVirtual() == NULL && scope_ != NULL) {
    delete scope_;
  }
  scope_ = NULL;
  ::memset(&default__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_) -
      reinterpret_cast<char*>(&default__)) + sizeof(table_));
  _internal_metadata_.Clear();
}

bool LinuxStaticRoutes_Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticRoutes.Route)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool default = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l3.LinuxStaticRoutes.Route.Namespace namespace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespace_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string interface = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l3.LinuxStaticRoutes.Route.Scope scope = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dst_ip_addr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dst_ip_addr().data(), static_cast<int>(this->dst_ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.dst_ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src_ip_addr = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src_ip_addr().data(), static_cast<int>(this->src_ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.src_ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gw_addr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gw_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gw_addr().data(), static_cast<int>(this->gw_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticRoutes.Route.gw_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 metric = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 table = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &table_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticRoutes.Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticRoutes.Route)
  return false;
#undef DO_
}

void LinuxStaticRoutes_Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticRoutes.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool default = 2;
  if (this->default_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->default_(), output);
  }

  // .l3.LinuxStaticRoutes.Route.Namespace namespace = 3;
  if (this->has_namespace_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_namespace_(), output);
  }

  // string interface = 5;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->interface(), output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // .l3.LinuxStaticRoutes.Route.Scope scope = 7;
  if (this->has_scope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_scope(), output);
  }

  // string dst_ip_addr = 8;
  if (this->dst_ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_ip_addr().data(), static_cast<int>(this->dst_ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.dst_ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->dst_ip_addr(), output);
  }

  // string src_ip_addr = 9;
  if (this->src_ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_ip_addr().data(), static_cast<int>(this->src_ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.src_ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->src_ip_addr(), output);
  }

  // string gw_addr = 10;
  if (this->gw_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gw_addr().data(), static_cast<int>(this->gw_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.gw_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->gw_addr(), output);
  }

  // uint32 metric = 11;
  if (this->metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->metric(), output);
  }

  // uint32 table = 12;
  if (this->table() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->table(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticRoutes.Route)
}

::google::protobuf::uint8* LinuxStaticRoutes_Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticRoutes.Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool default = 2;
  if (this->default_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->default_(), target);
  }

  // .l3.LinuxStaticRoutes.Route.Namespace namespace = 3;
  if (this->has_namespace_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_namespace_(), deterministic, target);
  }

  // string interface = 5;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->interface(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // .l3.LinuxStaticRoutes.Route.Scope scope = 7;
  if (this->has_scope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_scope(), deterministic, target);
  }

  // string dst_ip_addr = 8;
  if (this->dst_ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dst_ip_addr().data(), static_cast<int>(this->dst_ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.dst_ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->dst_ip_addr(), target);
  }

  // string src_ip_addr = 9;
  if (this->src_ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src_ip_addr().data(), static_cast<int>(this->src_ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.src_ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->src_ip_addr(), target);
  }

  // string gw_addr = 10;
  if (this->gw_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gw_addr().data(), static_cast<int>(this->gw_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticRoutes.Route.gw_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->gw_addr(), target);
  }

  // uint32 metric = 11;
  if (this->metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->metric(), target);
  }

  // uint32 table = 12;
  if (this->table() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->table(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticRoutes.Route)
  return target;
}

size_t LinuxStaticRoutes_Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticRoutes.Route)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string interface = 5;
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string dst_ip_addr = 8;
  if (this->dst_ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dst_ip_addr());
  }

  // string src_ip_addr = 9;
  if (this->src_ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src_ip_addr());
  }

  // string gw_addr = 10;
  if (this->gw_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gw_addr());
  }

  // .l3.LinuxStaticRoutes.Route.Namespace namespace = 3;
  if (this->has_namespace_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *namespace__);
  }

  // .l3.LinuxStaticRoutes.Route.Scope scope = 7;
  if (this->has_scope()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scope_);
  }

  // bool default = 2;
  if (this->default_() != 0) {
    total_size += 1 + 1;
  }

  // uint32 metric = 11;
  if (this->metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->metric());
  }

  // uint32 table = 12;
  if (this->table() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->table());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticRoutes_Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticRoutes.Route)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticRoutes_Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticRoutes_Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticRoutes.Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticRoutes.Route)
    MergeFrom(*source);
  }
}

void LinuxStaticRoutes_Route::MergeFrom(const LinuxStaticRoutes_Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticRoutes.Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.dst_ip_addr().size() > 0) {

    dst_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_ip_addr_);
  }
  if (from.src_ip_addr().size() > 0) {

    src_ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_addr_);
  }
  if (from.gw_addr().size() > 0) {

    gw_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gw_addr_);
  }
  if (from.has_namespace_()) {
    mutable_namespace_()->::l3::LinuxStaticRoutes_Route_Namespace::MergeFrom(from.namespace_());
  }
  if (from.has_scope()) {
    mutable_scope()->::l3::LinuxStaticRoutes_Route_Scope::MergeFrom(from.scope());
  }
  if (from.default_() != 0) {
    set_default_(from.default_());
  }
  if (from.metric() != 0) {
    set_metric(from.metric());
  }
  if (from.table() != 0) {
    set_table(from.table());
  }
}

void LinuxStaticRoutes_Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticRoutes.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticRoutes_Route::CopyFrom(const LinuxStaticRoutes_Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticRoutes.Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticRoutes_Route::IsInitialized() const {
  return true;
}

void LinuxStaticRoutes_Route::Swap(LinuxStaticRoutes_Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticRoutes_Route::InternalSwap(LinuxStaticRoutes_Route* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  interface_.Swap(&other->interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dst_ip_addr_.Swap(&other->dst_ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  src_ip_addr_.Swap(&other->src_ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gw_addr_.Swap(&other->gw_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(namespace__, other->namespace__);
  swap(scope_, other->scope_);
  swap(default__, other->default__);
  swap(metric_, other->metric_);
  swap(table_, other->table_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticRoutes_Route::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticRoutes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticRoutes::kRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticRoutes::LinuxStaticRoutes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticRoutes)
}
LinuxStaticRoutes::LinuxStaticRoutes(const LinuxStaticRoutes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      route_(from.route_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticRoutes)
}

void LinuxStaticRoutes::SharedCtor() {
}

LinuxStaticRoutes::~LinuxStaticRoutes() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticRoutes)
  SharedDtor();
}

void LinuxStaticRoutes::SharedDtor() {
}

void LinuxStaticRoutes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticRoutes::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticRoutes& LinuxStaticRoutes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticRoutes.base);
  return *internal_default_instance();
}


void LinuxStaticRoutes::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_.Clear();
  _internal_metadata_.Clear();
}

bool LinuxStaticRoutes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticRoutes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l3.LinuxStaticRoutes.Route route = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticRoutes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticRoutes)
  return false;
#undef DO_
}

void LinuxStaticRoutes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l3.LinuxStaticRoutes.Route route = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->route(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticRoutes)
}

::google::protobuf::uint8* LinuxStaticRoutes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticRoutes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l3.LinuxStaticRoutes.Route route = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->route(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticRoutes)
  return target;
}

size_t LinuxStaticRoutes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticRoutes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l3.LinuxStaticRoutes.Route route = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->route_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->route(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticRoutes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticRoutes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticRoutes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticRoutes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticRoutes)
    MergeFrom(*source);
  }
}

void LinuxStaticRoutes::MergeFrom(const LinuxStaticRoutes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticRoutes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_.MergeFrom(from.route_);
}

void LinuxStaticRoutes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticRoutes::CopyFrom(const LinuxStaticRoutes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticRoutes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticRoutes::IsInitialized() const {
  return true;
}

void LinuxStaticRoutes::Swap(LinuxStaticRoutes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticRoutes::InternalSwap(LinuxStaticRoutes* other) {
  using std::swap;
  CastToBase(&route_)->InternalSwap(CastToBase(&other->route_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticRoutes::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticArpEntries_ArpEntry_Namespace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticArpEntries_ArpEntry_Namespace::kTypeFieldNumber;
const int LinuxStaticArpEntries_ArpEntry_Namespace::kPidFieldNumber;
const int LinuxStaticArpEntries_ArpEntry_Namespace::kMicroserviceFieldNumber;
const int LinuxStaticArpEntries_ArpEntry_Namespace::kNameFieldNumber;
const int LinuxStaticArpEntries_ArpEntry_Namespace::kFilepathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticArpEntries_ArpEntry_Namespace::LinuxStaticArpEntries_ArpEntry_Namespace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_Namespace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
}
LinuxStaticArpEntries_ArpEntry_Namespace::LinuxStaticArpEntries_ArpEntry_Namespace(const LinuxStaticArpEntries_ArpEntry_Namespace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.microservice().size() > 0) {
    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filepath().size() > 0) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
}

void LinuxStaticArpEntries_ArpEntry_Namespace::SharedCtor() {
  microservice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
}

LinuxStaticArpEntries_ArpEntry_Namespace::~LinuxStaticArpEntries_ArpEntry_Namespace() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  SharedDtor();
}

void LinuxStaticArpEntries_ArpEntry_Namespace::SharedDtor() {
  microservice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxStaticArpEntries_ArpEntry_Namespace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticArpEntries_ArpEntry_Namespace::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticArpEntries_ArpEntry_Namespace& LinuxStaticArpEntries_ArpEntry_Namespace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_Namespace.base);
  return *internal_default_instance();
}


void LinuxStaticArpEntries_ArpEntry_Namespace::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  microservice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(pid_));
  _internal_metadata_.Clear();
}

bool LinuxStaticArpEntries_ArpEntry_Namespace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .l3.LinuxStaticArpEntries.ArpEntry.Namespace.NamespaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::l3::LinuxStaticArpEntries_ArpEntry_Namespace_NamespaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string microservice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_microservice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->microservice().data(), static_cast<int>(this->microservice().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.Namespace.microservice"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.Namespace.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filepath = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filepath().data(), static_cast<int>(this->filepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.Namespace.filepath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  return false;
#undef DO_
}

void LinuxStaticArpEntries_ArpEntry_Namespace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.microservice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->microservice(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filepath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
}

::google::protobuf::uint8* LinuxStaticArpEntries_ArpEntry_Namespace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // string microservice = 3;
  if (this->microservice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->microservice().data(), static_cast<int>(this->microservice().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.microservice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->microservice(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.Namespace.filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filepath(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  return target;
}

size_t LinuxStaticArpEntries_ArpEntry_Namespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string microservice = 3;
  if (this->microservice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->microservice());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filepath = 5;
  if (this->filepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filepath());
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace.NamespaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 pid = 2;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticArpEntries_ArpEntry_Namespace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticArpEntries_ArpEntry_Namespace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticArpEntries_ArpEntry_Namespace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
    MergeFrom(*source);
  }
}

void LinuxStaticArpEntries_ArpEntry_Namespace::MergeFrom(const LinuxStaticArpEntries_ArpEntry_Namespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.microservice().size() > 0) {

    microservice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.microservice_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filepath().size() > 0) {

    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
}

void LinuxStaticArpEntries_ArpEntry_Namespace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticArpEntries_ArpEntry_Namespace::CopyFrom(const LinuxStaticArpEntries_ArpEntry_Namespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticArpEntries_ArpEntry_Namespace::IsInitialized() const {
  return true;
}

void LinuxStaticArpEntries_ArpEntry_Namespace::Swap(LinuxStaticArpEntries_ArpEntry_Namespace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticArpEntries_ArpEntry_Namespace::InternalSwap(LinuxStaticArpEntries_ArpEntry_Namespace* other) {
  using std::swap;
  microservice_.Swap(&other->microservice_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filepath_.Swap(&other->filepath_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(pid_, other->pid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticArpEntries_ArpEntry_Namespace::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticArpEntries_ArpEntry_IpFamily::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticArpEntries_ArpEntry_IpFamily::kFamilyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticArpEntries_ArpEntry_IpFamily::LinuxStaticArpEntries_ArpEntry_IpFamily()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
}
LinuxStaticArpEntries_ArpEntry_IpFamily::LinuxStaticArpEntries_ArpEntry_IpFamily(const LinuxStaticArpEntries_ArpEntry_IpFamily& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  family_ = from.family_;
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::SharedCtor() {
  family_ = 0;
}

LinuxStaticArpEntries_ArpEntry_IpFamily::~LinuxStaticArpEntries_ArpEntry_IpFamily() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  SharedDtor();
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::SharedDtor() {
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticArpEntries_ArpEntry_IpFamily::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticArpEntries_ArpEntry_IpFamily& LinuxStaticArpEntries_ArpEntry_IpFamily::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_IpFamily.base);
  return *internal_default_instance();
}


void LinuxStaticArpEntries_ArpEntry_IpFamily::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_ = 0;
  _internal_metadata_.Clear();
}

bool LinuxStaticArpEntries_ArpEntry_IpFamily::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily.Family family = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_family(static_cast< ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily_Family >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  return false;
#undef DO_
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily.Family family = 1;
  if (this->family() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->family(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
}

::google::protobuf::uint8* LinuxStaticArpEntries_ArpEntry_IpFamily::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily.Family family = 1;
  if (this->family() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->family(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  return target;
}

size_t LinuxStaticArpEntries_ArpEntry_IpFamily::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily.Family family = 1;
  if (this->family() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->family());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticArpEntries_ArpEntry_IpFamily* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticArpEntries_ArpEntry_IpFamily>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
    MergeFrom(*source);
  }
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::MergeFrom(const LinuxStaticArpEntries_ArpEntry_IpFamily& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.family() != 0) {
    set_family(from.family());
  }
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::CopyFrom(const LinuxStaticArpEntries_ArpEntry_IpFamily& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.IpFamily)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticArpEntries_ArpEntry_IpFamily::IsInitialized() const {
  return true;
}

void LinuxStaticArpEntries_ArpEntry_IpFamily::Swap(LinuxStaticArpEntries_ArpEntry_IpFamily* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticArpEntries_ArpEntry_IpFamily::InternalSwap(LinuxStaticArpEntries_ArpEntry_IpFamily* other) {
  using std::swap;
  swap(family_, other->family_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticArpEntries_ArpEntry_IpFamily::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticArpEntries_ArpEntry_NudState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticArpEntries_ArpEntry_NudState::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticArpEntries_ArpEntry_NudState::LinuxStaticArpEntries_ArpEntry_NudState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_NudState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticArpEntries.ArpEntry.NudState)
}
LinuxStaticArpEntries_ArpEntry_NudState::LinuxStaticArpEntries_ArpEntry_NudState(const LinuxStaticArpEntries_ArpEntry_NudState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticArpEntries.ArpEntry.NudState)
}

void LinuxStaticArpEntries_ArpEntry_NudState::SharedCtor() {
  type_ = 0;
}

LinuxStaticArpEntries_ArpEntry_NudState::~LinuxStaticArpEntries_ArpEntry_NudState() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  SharedDtor();
}

void LinuxStaticArpEntries_ArpEntry_NudState::SharedDtor() {
}

void LinuxStaticArpEntries_ArpEntry_NudState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticArpEntries_ArpEntry_NudState::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticArpEntries_ArpEntry_NudState& LinuxStaticArpEntries_ArpEntry_NudState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry_NudState.base);
  return *internal_default_instance();
}


void LinuxStaticArpEntries_ArpEntry_NudState::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool LinuxStaticArpEntries_ArpEntry_NudState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .l3.LinuxStaticArpEntries.ArpEntry.NudState.NudStateType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::l3::LinuxStaticArpEntries_ArpEntry_NudState_NudStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  return false;
#undef DO_
}

void LinuxStaticArpEntries_ArpEntry_NudState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.NudState.NudStateType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticArpEntries.ArpEntry.NudState)
}

::google::protobuf::uint8* LinuxStaticArpEntries_ArpEntry_NudState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .l3.LinuxStaticArpEntries.ArpEntry.NudState.NudStateType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  return target;
}

size_t LinuxStaticArpEntries_ArpEntry_NudState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .l3.LinuxStaticArpEntries.ArpEntry.NudState.NudStateType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticArpEntries_ArpEntry_NudState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticArpEntries_ArpEntry_NudState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticArpEntries_ArpEntry_NudState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticArpEntries.ArpEntry.NudState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticArpEntries.ArpEntry.NudState)
    MergeFrom(*source);
  }
}

void LinuxStaticArpEntries_ArpEntry_NudState::MergeFrom(const LinuxStaticArpEntries_ArpEntry_NudState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void LinuxStaticArpEntries_ArpEntry_NudState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticArpEntries_ArpEntry_NudState::CopyFrom(const LinuxStaticArpEntries_ArpEntry_NudState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry.NudState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticArpEntries_ArpEntry_NudState::IsInitialized() const {
  return true;
}

void LinuxStaticArpEntries_ArpEntry_NudState::Swap(LinuxStaticArpEntries_ArpEntry_NudState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticArpEntries_ArpEntry_NudState::InternalSwap(LinuxStaticArpEntries_ArpEntry_NudState* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticArpEntries_ArpEntry_NudState::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticArpEntries_ArpEntry::InitAsDefaultInstance() {
  ::l3::_LinuxStaticArpEntries_ArpEntry_default_instance_._instance.get_mutable()->namespace__ = const_cast< ::l3::LinuxStaticArpEntries_ArpEntry_Namespace*>(
      ::l3::LinuxStaticArpEntries_ArpEntry_Namespace::internal_default_instance());
  ::l3::_LinuxStaticArpEntries_ArpEntry_default_instance_._instance.get_mutable()->ip_family_ = const_cast< ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily*>(
      ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily::internal_default_instance());
  ::l3::_LinuxStaticArpEntries_ArpEntry_default_instance_._instance.get_mutable()->state_ = const_cast< ::l3::LinuxStaticArpEntries_ArpEntry_NudState*>(
      ::l3::LinuxStaticArpEntries_ArpEntry_NudState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticArpEntries_ArpEntry::kNameFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kNamespaceFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kInterfaceFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kIpFamilyFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kStateFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kIpAddrFieldNumber;
const int LinuxStaticArpEntries_ArpEntry::kHwAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticArpEntries_ArpEntry::LinuxStaticArpEntries_ArpEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticArpEntries.ArpEntry)
}
LinuxStaticArpEntries_ArpEntry::LinuxStaticArpEntries_ArpEntry(const LinuxStaticArpEntries_ArpEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  hw_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hw_address().size() > 0) {
    hw_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hw_address_);
  }
  if (from.has_namespace_()) {
    namespace__ = new ::l3::LinuxStaticArpEntries_ArpEntry_Namespace(*from.namespace__);
  } else {
    namespace__ = NULL;
  }
  if (from.has_ip_family()) {
    ip_family_ = new ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily(*from.ip_family_);
  } else {
    ip_family_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::l3::LinuxStaticArpEntries_ArpEntry_NudState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticArpEntries.ArpEntry)
}

void LinuxStaticArpEntries_ArpEntry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&namespace__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&namespace__)) + sizeof(state_));
}

LinuxStaticArpEntries_ArpEntry::~LinuxStaticArpEntries_ArpEntry() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticArpEntries.ArpEntry)
  SharedDtor();
}

void LinuxStaticArpEntries_ArpEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namespace__;
  if (this != internal_default_instance()) delete ip_family_;
  if (this != internal_default_instance()) delete state_;
}

void LinuxStaticArpEntries_ArpEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticArpEntries_ArpEntry::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticArpEntries_ArpEntry& LinuxStaticArpEntries_ArpEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries_ArpEntry.base);
  return *internal_default_instance();
}


void LinuxStaticArpEntries_ArpEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticArpEntries.ArpEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hw_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && namespace__ != NULL) {
    delete namespace__;
  }
  namespace__ = NULL;
  if (GetArenaNoVirtual() == NULL && ip_family_ != NULL) {
    delete ip_family_;
  }
  ip_family_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool LinuxStaticArpEntries_ArpEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticArpEntries.ArpEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l3.LinuxStaticArpEntries.ArpEntry.Namespace namespace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespace_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string interface = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily ip_family = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ip_family()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l3.LinuxStaticArpEntries.ArpEntry.NudState state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_addr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hw_address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hw_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hw_address().data(), static_cast<int>(this->hw_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l3.LinuxStaticArpEntries.ArpEntry.hw_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticArpEntries.ArpEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticArpEntries.ArpEntry)
  return false;
#undef DO_
}

void LinuxStaticArpEntries_ArpEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticArpEntries.ArpEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace namespace = 2;
  if (this->has_namespace_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_namespace_(), output);
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->interface(), output);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily ip_family = 4;
  if (this->has_ip_family()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ip_family(), output);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.NudState state = 5;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_state(), output);
  }

  // string ip_addr = 6;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->ip_addr(), output);
  }

  // string hw_address = 7;
  if (this->hw_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hw_address().data(), static_cast<int>(this->hw_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.hw_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->hw_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticArpEntries.ArpEntry)
}

::google::protobuf::uint8* LinuxStaticArpEntries_ArpEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticArpEntries.ArpEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace namespace = 2;
  if (this->has_namespace_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_namespace_(), deterministic, target);
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->interface(), target);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily ip_family = 4;
  if (this->has_ip_family()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ip_family(), deterministic, target);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.NudState state = 5;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_state(), deterministic, target);
  }

  // string ip_addr = 6;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->ip_addr(), target);
  }

  // string hw_address = 7;
  if (this->hw_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hw_address().data(), static_cast<int>(this->hw_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l3.LinuxStaticArpEntries.ArpEntry.hw_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->hw_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticArpEntries.ArpEntry)
  return target;
}

size_t LinuxStaticArpEntries_ArpEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticArpEntries.ArpEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // string ip_addr = 6;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // string hw_address = 7;
  if (this->hw_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hw_address());
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.Namespace namespace = 2;
  if (this->has_namespace_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *namespace__);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.IpFamily ip_family = 4;
  if (this->has_ip_family()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ip_family_);
  }

  // .l3.LinuxStaticArpEntries.ArpEntry.NudState state = 5;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticArpEntries_ArpEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticArpEntries_ArpEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticArpEntries_ArpEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticArpEntries.ArpEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticArpEntries.ArpEntry)
    MergeFrom(*source);
  }
}

void LinuxStaticArpEntries_ArpEntry::MergeFrom(const LinuxStaticArpEntries_ArpEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticArpEntries.ArpEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.hw_address().size() > 0) {

    hw_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hw_address_);
  }
  if (from.has_namespace_()) {
    mutable_namespace_()->::l3::LinuxStaticArpEntries_ArpEntry_Namespace::MergeFrom(from.namespace_());
  }
  if (from.has_ip_family()) {
    mutable_ip_family()->::l3::LinuxStaticArpEntries_ArpEntry_IpFamily::MergeFrom(from.ip_family());
  }
  if (from.has_state()) {
    mutable_state()->::l3::LinuxStaticArpEntries_ArpEntry_NudState::MergeFrom(from.state());
  }
}

void LinuxStaticArpEntries_ArpEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticArpEntries_ArpEntry::CopyFrom(const LinuxStaticArpEntries_ArpEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticArpEntries.ArpEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticArpEntries_ArpEntry::IsInitialized() const {
  return true;
}

void LinuxStaticArpEntries_ArpEntry::Swap(LinuxStaticArpEntries_ArpEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticArpEntries_ArpEntry::InternalSwap(LinuxStaticArpEntries_ArpEntry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  interface_.Swap(&other->interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hw_address_.Swap(&other->hw_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(namespace__, other->namespace__);
  swap(ip_family_, other->ip_family_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticArpEntries_ArpEntry::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxStaticArpEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxStaticArpEntries::kArpEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxStaticArpEntries::LinuxStaticArpEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l3.LinuxStaticArpEntries)
}
LinuxStaticArpEntries::LinuxStaticArpEntries(const LinuxStaticArpEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arp_entry_(from.arp_entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l3.LinuxStaticArpEntries)
}

void LinuxStaticArpEntries::SharedCtor() {
}

LinuxStaticArpEntries::~LinuxStaticArpEntries() {
  // @@protoc_insertion_point(destructor:l3.LinuxStaticArpEntries)
  SharedDtor();
}

void LinuxStaticArpEntries::SharedDtor() {
}

void LinuxStaticArpEntries::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinuxStaticArpEntries::descriptor() {
  ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxStaticArpEntries& LinuxStaticArpEntries::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_linux_2fmodel_2fl3_2fl3_2eproto::scc_info_LinuxStaticArpEntries.base);
  return *internal_default_instance();
}


void LinuxStaticArpEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:l3.LinuxStaticArpEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arp_entry_.Clear();
  _internal_metadata_.Clear();
}

bool LinuxStaticArpEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l3.LinuxStaticArpEntries)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l3.LinuxStaticArpEntries.ArpEntry arp_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arp_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l3.LinuxStaticArpEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l3.LinuxStaticArpEntries)
  return false;
#undef DO_
}

void LinuxStaticArpEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l3.LinuxStaticArpEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l3.LinuxStaticArpEntries.ArpEntry arp_entry = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arp_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arp_entry(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l3.LinuxStaticArpEntries)
}

::google::protobuf::uint8* LinuxStaticArpEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l3.LinuxStaticArpEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l3.LinuxStaticArpEntries.ArpEntry arp_entry = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arp_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arp_entry(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l3.LinuxStaticArpEntries)
  return target;
}

size_t LinuxStaticArpEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l3.LinuxStaticArpEntries)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l3.LinuxStaticArpEntries.ArpEntry arp_entry = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arp_entry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arp_entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinuxStaticArpEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l3.LinuxStaticArpEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxStaticArpEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxStaticArpEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l3.LinuxStaticArpEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l3.LinuxStaticArpEntries)
    MergeFrom(*source);
  }
}

void LinuxStaticArpEntries::MergeFrom(const LinuxStaticArpEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l3.LinuxStaticArpEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arp_entry_.MergeFrom(from.arp_entry_);
}

void LinuxStaticArpEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l3.LinuxStaticArpEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxStaticArpEntries::CopyFrom(const LinuxStaticArpEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l3.LinuxStaticArpEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxStaticArpEntries::IsInitialized() const {
  return true;
}

void LinuxStaticArpEntries::Swap(LinuxStaticArpEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxStaticArpEntries::InternalSwap(LinuxStaticArpEntries* other) {
  using std::swap;
  CastToBase(&arp_entry_)->InternalSwap(CastToBase(&other->arp_entry_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinuxStaticArpEntries::GetMetadata() const {
  protobuf_linux_2fmodel_2fl3_2fl3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_linux_2fmodel_2fl3_2fl3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace l3
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticRoutes_Route_Namespace* Arena::CreateMaybeMessage< ::l3::LinuxStaticRoutes_Route_Namespace >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticRoutes_Route_Namespace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticRoutes_Route_Scope* Arena::CreateMaybeMessage< ::l3::LinuxStaticRoutes_Route_Scope >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticRoutes_Route_Scope >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticRoutes_Route* Arena::CreateMaybeMessage< ::l3::LinuxStaticRoutes_Route >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticRoutes_Route >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticRoutes* Arena::CreateMaybeMessage< ::l3::LinuxStaticRoutes >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticRoutes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticArpEntries_ArpEntry_Namespace* Arena::CreateMaybeMessage< ::l3::LinuxStaticArpEntries_ArpEntry_Namespace >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticArpEntries_ArpEntry_Namespace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily* Arena::CreateMaybeMessage< ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticArpEntries_ArpEntry_IpFamily >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticArpEntries_ArpEntry_NudState* Arena::CreateMaybeMessage< ::l3::LinuxStaticArpEntries_ArpEntry_NudState >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticArpEntries_ArpEntry_NudState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticArpEntries_ArpEntry* Arena::CreateMaybeMessage< ::l3::LinuxStaticArpEntries_ArpEntry >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticArpEntries_ArpEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l3::LinuxStaticArpEntries* Arena::CreateMaybeMessage< ::l3::LinuxStaticArpEntries >(Arena* arena) {
  return Arena::CreateInternal< ::l3::LinuxStaticArpEntries >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
