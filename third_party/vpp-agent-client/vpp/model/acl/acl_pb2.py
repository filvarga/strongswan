# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vpp/model/acl/acl.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='vpp/model/acl/acl.proto',
  package='acl',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x17vpp/model/acl/acl.proto\x12\x03\x61\x63l\"\x81\x0c\n\x0b\x41\x63\x63\x65ssLists\x12\"\n\x04\x61\x63ls\x18\x01 \x03(\x0b\x32\x14.acl.AccessLists.Acl\x1a\xcd\x0b\n\x03\x41\x63l\x12\x10\n\x08\x61\x63l_name\x18\x01 \x01(\t\x12(\n\x05rules\x18\x02 \x03(\x0b\x32\x19.acl.AccessLists.Acl.Rule\x12\x33\n\ninterfaces\x18\x03 \x01(\x0b\x32\x1f.acl.AccessLists.Acl.Interfaces\x1a\xa5\n\n\x04Rule\x12\x11\n\trule_name\x18\x01 \x01(\t\x12\"\n\nacl_action\x18\x02 \x01(\x0e\x32\x0e.acl.AclAction\x12.\n\x05match\x18\x03 \x01(\x0b\x32\x1f.acl.AccessLists.Acl.Rule.Match\x1a\xb5\t\n\x05Match\x12\x37\n\x07ip_rule\x18\x01 \x01(\x0b\x32&.acl.AccessLists.Acl.Rule.Match.IpRule\x12=\n\nmacip_rule\x18\x02 \x01(\x0b\x32).acl.AccessLists.Acl.Rule.Match.MacIpRule\x1a\xb2\x07\n\x06IpRule\x12\x35\n\x02ip\x18\x01 \x01(\x0b\x32).acl.AccessLists.Acl.Rule.Match.IpRule.Ip\x12\x39\n\x04icmp\x18\x02 \x01(\x0b\x32+.acl.AccessLists.Acl.Rule.Match.IpRule.Icmp\x12\x37\n\x03tcp\x18\x03 \x01(\x0b\x32*.acl.AccessLists.Acl.Rule.Match.IpRule.Tcp\x12\x37\n\x03udp\x18\x04 \x01(\x0b\x32*.acl.AccessLists.Acl.Rule.Match.IpRule.Udp\x1a\x39\n\x02Ip\x12\x1b\n\x13\x64\x65stination_network\x18\x01 \x01(\t\x12\x16\n\x0esource_network\x18\x02 \x01(\t\x1a\xd4\x01\n\x04Icmp\x12\x0e\n\x06icmpv6\x18\x01 \x01(\x08\x12J\n\x0ficmp_code_range\x18\x02 \x01(\x0b\x32\x31.acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range\x12J\n\x0ficmp_type_range\x18\x03 \x01(\x0b\x32\x31.acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range\x1a$\n\x05Range\x12\r\n\x05\x66irst\x18\x01 \x01(\r\x12\x0c\n\x04last\x18\x02 \x01(\r\x1a\x33\n\tPortRange\x12\x12\n\nlower_port\x18\x01 \x01(\r\x12\x12\n\nupper_port\x18\x02 \x01(\r\x1a\xd5\x01\n\x03Tcp\x12P\n\x16\x64\x65stination_port_range\x18\x01 \x01(\x0b\x32\x30.acl.AccessLists.Acl.Rule.Match.IpRule.PortRange\x12K\n\x11source_port_range\x18\x02 \x01(\x0b\x32\x30.acl.AccessLists.Acl.Rule.Match.IpRule.PortRange\x12\x16\n\x0etcp_flags_mask\x18\x03 \x01(\r\x12\x17\n\x0ftcp_flags_value\x18\x04 \x01(\r\x1a\xa4\x01\n\x03Udp\x12P\n\x16\x64\x65stination_port_range\x18\x01 \x01(\x0b\x32\x30.acl.AccessLists.Acl.Rule.Match.IpRule.PortRange\x12K\n\x11source_port_range\x18\x02 \x01(\x0b\x32\x30.acl.AccessLists.Acl.Rule.Match.IpRule.PortRange\x1a\x7f\n\tMacIpRule\x12\x16\n\x0esource_address\x18\x01 \x01(\t\x12\x1d\n\x15source_address_prefix\x18\x02 \x01(\r\x12\x1a\n\x12source_mac_address\x18\x03 \x01(\t\x12\x1f\n\x17source_mac_address_mask\x18\x04 \x01(\t\x1a-\n\nInterfaces\x12\x0e\n\x06\x65gress\x18\x01 \x03(\t\x12\x0f\n\x07ingress\x18\x02 \x03(\t*.\n\tAclAction\x12\x08\n\x04\x44\x45NY\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x0b\n\x07REFLECT\x10\x02\x62\x06proto3')
)

_ACLACTION = _descriptor.EnumDescriptor(
  name='AclAction',
  full_name='acl.AclAction',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DENY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERMIT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REFLECT', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1572,
  serialized_end=1618,
)
_sym_db.RegisterEnumDescriptor(_ACLACTION)

AclAction = enum_type_wrapper.EnumTypeWrapper(_ACLACTION)
DENY = 0
PERMIT = 1
REFLECT = 2



_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_IP = _descriptor.Descriptor(
  name='Ip',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Ip',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination_network', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Ip.destination_network', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_network', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Ip.source_network', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=686,
  serialized_end=743,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE = _descriptor.Descriptor(
  name='Range',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range.first', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range.last', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=922,
  serialized_end=958,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP = _descriptor.Descriptor(
  name='Icmp',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='icmpv6', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.icmpv6', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='icmp_code_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.icmp_code_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='icmp_type_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.icmp_type_range', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=746,
  serialized_end=958,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE = _descriptor.Descriptor(
  name='PortRange',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.PortRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lower_port', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.PortRange.lower_port', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='upper_port', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.PortRange.upper_port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=960,
  serialized_end=1011,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP = _descriptor.Descriptor(
  name='Tcp',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Tcp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination_port_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Tcp.destination_port_range', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_port_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Tcp.source_port_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tcp_flags_mask', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Tcp.tcp_flags_mask', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tcp_flags_value', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Tcp.tcp_flags_value', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1014,
  serialized_end=1227,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP = _descriptor.Descriptor(
  name='Udp',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Udp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination_port_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Udp.destination_port_range', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_port_range', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.Udp.source_port_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1230,
  serialized_end=1394,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE = _descriptor.Descriptor(
  name='IpRule',
  full_name='acl.AccessLists.Acl.Rule.Match.IpRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.ip', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='icmp', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.icmp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tcp', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.tcp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='udp', full_name='acl.AccessLists.Acl.Rule.Match.IpRule.udp', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_IP, _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP, _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE, _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP, _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=448,
  serialized_end=1394,
)

_ACCESSLISTS_ACL_RULE_MATCH_MACIPRULE = _descriptor.Descriptor(
  name='MacIpRule',
  full_name='acl.AccessLists.Acl.Rule.Match.MacIpRule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_address', full_name='acl.AccessLists.Acl.Rule.Match.MacIpRule.source_address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_address_prefix', full_name='acl.AccessLists.Acl.Rule.Match.MacIpRule.source_address_prefix', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_mac_address', full_name='acl.AccessLists.Acl.Rule.Match.MacIpRule.source_mac_address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_mac_address_mask', full_name='acl.AccessLists.Acl.Rule.Match.MacIpRule.source_mac_address_mask', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1396,
  serialized_end=1523,
)

_ACCESSLISTS_ACL_RULE_MATCH = _descriptor.Descriptor(
  name='Match',
  full_name='acl.AccessLists.Acl.Rule.Match',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_rule', full_name='acl.AccessLists.Acl.Rule.Match.ip_rule', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='macip_rule', full_name='acl.AccessLists.Acl.Rule.Match.macip_rule', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL_RULE_MATCH_IPRULE, _ACCESSLISTS_ACL_RULE_MATCH_MACIPRULE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=318,
  serialized_end=1523,
)

_ACCESSLISTS_ACL_RULE = _descriptor.Descriptor(
  name='Rule',
  full_name='acl.AccessLists.Acl.Rule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule_name', full_name='acl.AccessLists.Acl.Rule.rule_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='acl_action', full_name='acl.AccessLists.Acl.Rule.acl_action', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='match', full_name='acl.AccessLists.Acl.Rule.match', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL_RULE_MATCH, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=1523,
)

_ACCESSLISTS_ACL_INTERFACES = _descriptor.Descriptor(
  name='Interfaces',
  full_name='acl.AccessLists.Acl.Interfaces',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='egress', full_name='acl.AccessLists.Acl.Interfaces.egress', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ingress', full_name='acl.AccessLists.Acl.Interfaces.ingress', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1525,
  serialized_end=1570,
)

_ACCESSLISTS_ACL = _descriptor.Descriptor(
  name='Acl',
  full_name='acl.AccessLists.Acl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acl_name', full_name='acl.AccessLists.Acl.acl_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rules', full_name='acl.AccessLists.Acl.rules', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interfaces', full_name='acl.AccessLists.Acl.interfaces', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL_RULE, _ACCESSLISTS_ACL_INTERFACES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=1570,
)

_ACCESSLISTS = _descriptor.Descriptor(
  name='AccessLists',
  full_name='acl.AccessLists',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acls', full_name='acl.AccessLists.acls', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACCESSLISTS_ACL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=1570,
)

_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_IP.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP.fields_by_name['icmp_code_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP.fields_by_name['icmp_type_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP.fields_by_name['destination_port_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP.fields_by_name['source_port_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP.fields_by_name['destination_port_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP.fields_by_name['source_port_range'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP.containing_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE.fields_by_name['ip'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_IP
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE.fields_by_name['icmp'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE.fields_by_name['tcp'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE.fields_by_name['udp'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP
_ACCESSLISTS_ACL_RULE_MATCH_IPRULE.containing_type = _ACCESSLISTS_ACL_RULE_MATCH
_ACCESSLISTS_ACL_RULE_MATCH_MACIPRULE.containing_type = _ACCESSLISTS_ACL_RULE_MATCH
_ACCESSLISTS_ACL_RULE_MATCH.fields_by_name['ip_rule'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE
_ACCESSLISTS_ACL_RULE_MATCH.fields_by_name['macip_rule'].message_type = _ACCESSLISTS_ACL_RULE_MATCH_MACIPRULE
_ACCESSLISTS_ACL_RULE_MATCH.containing_type = _ACCESSLISTS_ACL_RULE
_ACCESSLISTS_ACL_RULE.fields_by_name['acl_action'].enum_type = _ACLACTION
_ACCESSLISTS_ACL_RULE.fields_by_name['match'].message_type = _ACCESSLISTS_ACL_RULE_MATCH
_ACCESSLISTS_ACL_RULE.containing_type = _ACCESSLISTS_ACL
_ACCESSLISTS_ACL_INTERFACES.containing_type = _ACCESSLISTS_ACL
_ACCESSLISTS_ACL.fields_by_name['rules'].message_type = _ACCESSLISTS_ACL_RULE
_ACCESSLISTS_ACL.fields_by_name['interfaces'].message_type = _ACCESSLISTS_ACL_INTERFACES
_ACCESSLISTS_ACL.containing_type = _ACCESSLISTS
_ACCESSLISTS.fields_by_name['acls'].message_type = _ACCESSLISTS_ACL
DESCRIPTOR.message_types_by_name['AccessLists'] = _ACCESSLISTS
DESCRIPTOR.enum_types_by_name['AclAction'] = _ACLACTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AccessLists = _reflection.GeneratedProtocolMessageType('AccessLists', (_message.Message,), dict(

  Acl = _reflection.GeneratedProtocolMessageType('Acl', (_message.Message,), dict(

    Rule = _reflection.GeneratedProtocolMessageType('Rule', (_message.Message,), dict(

      Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), dict(

        IpRule = _reflection.GeneratedProtocolMessageType('IpRule', (_message.Message,), dict(

          Ip = _reflection.GeneratedProtocolMessageType('Ip', (_message.Message,), dict(
            DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_IP,
            __module__ = 'vpp.model.acl.acl_pb2'
            # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.Ip)
            ))
          ,

          Icmp = _reflection.GeneratedProtocolMessageType('Icmp', (_message.Message,), dict(

            Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), dict(
              DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP_RANGE,
              __module__ = 'vpp.model.acl.acl_pb2'
              # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.Icmp.Range)
              ))
            ,
            DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_ICMP,
            __module__ = 'vpp.model.acl.acl_pb2'
            # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.Icmp)
            ))
          ,

          PortRange = _reflection.GeneratedProtocolMessageType('PortRange', (_message.Message,), dict(
            DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_PORTRANGE,
            __module__ = 'vpp.model.acl.acl_pb2'
            # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.PortRange)
            ))
          ,

          Tcp = _reflection.GeneratedProtocolMessageType('Tcp', (_message.Message,), dict(
            DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_TCP,
            __module__ = 'vpp.model.acl.acl_pb2'
            # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.Tcp)
            ))
          ,

          Udp = _reflection.GeneratedProtocolMessageType('Udp', (_message.Message,), dict(
            DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE_UDP,
            __module__ = 'vpp.model.acl.acl_pb2'
            # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule.Udp)
            ))
          ,
          DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_IPRULE,
          __module__ = 'vpp.model.acl.acl_pb2'
          # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.IpRule)
          ))
        ,

        MacIpRule = _reflection.GeneratedProtocolMessageType('MacIpRule', (_message.Message,), dict(
          DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH_MACIPRULE,
          __module__ = 'vpp.model.acl.acl_pb2'
          # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match.MacIpRule)
          ))
        ,
        DESCRIPTOR = _ACCESSLISTS_ACL_RULE_MATCH,
        __module__ = 'vpp.model.acl.acl_pb2'
        # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule.Match)
        ))
      ,
      DESCRIPTOR = _ACCESSLISTS_ACL_RULE,
      __module__ = 'vpp.model.acl.acl_pb2'
      # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Rule)
      ))
    ,

    Interfaces = _reflection.GeneratedProtocolMessageType('Interfaces', (_message.Message,), dict(
      DESCRIPTOR = _ACCESSLISTS_ACL_INTERFACES,
      __module__ = 'vpp.model.acl.acl_pb2'
      # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl.Interfaces)
      ))
    ,
    DESCRIPTOR = _ACCESSLISTS_ACL,
    __module__ = 'vpp.model.acl.acl_pb2'
    # @@protoc_insertion_point(class_scope:acl.AccessLists.Acl)
    ))
  ,
  DESCRIPTOR = _ACCESSLISTS,
  __module__ = 'vpp.model.acl.acl_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessLists)
  ))
_sym_db.RegisterMessage(AccessLists)
_sym_db.RegisterMessage(AccessLists.Acl)
_sym_db.RegisterMessage(AccessLists.Acl.Rule)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.Ip)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.Icmp)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.Icmp.Range)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.PortRange)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.Tcp)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.IpRule.Udp)
_sym_db.RegisterMessage(AccessLists.Acl.Rule.Match.MacIpRule)
_sym_db.RegisterMessage(AccessLists.Acl.Interfaces)


# @@protoc_insertion_point(module_scope)
