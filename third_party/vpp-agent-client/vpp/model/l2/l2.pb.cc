// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/l2/l2.proto

#include "vpp/model/l2/l2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fl2_2fl2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainErrors_BridgeDomain_ErrorData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainState_BridgeDomain_Interfaces;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainState_BridgeDomain_L2_params;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomains_BridgeDomain_Interfaces;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FibTable_FibEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XConnectPairs_XConnectPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BridgeDomainErrors_BridgeDomain;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BridgeDomainState_BridgeDomain;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl2_2fl2_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BridgeDomains_BridgeDomain;
}  // namespace protobuf_vpp_2fmodel_2fl2_2fl2_2eproto
namespace l2 {
class BridgeDomains_BridgeDomain_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomains_BridgeDomain_Interfaces>
      _instance;
} _BridgeDomains_BridgeDomain_Interfaces_default_instance_;
class BridgeDomains_BridgeDomain_ArpTerminationEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomains_BridgeDomain_ArpTerminationEntry>
      _instance;
} _BridgeDomains_BridgeDomain_ArpTerminationEntry_default_instance_;
class BridgeDomains_BridgeDomainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomains_BridgeDomain>
      _instance;
} _BridgeDomains_BridgeDomain_default_instance_;
class BridgeDomainsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomains>
      _instance;
} _BridgeDomains_default_instance_;
class FibTable_FibEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FibTable_FibEntry>
      _instance;
} _FibTable_FibEntry_default_instance_;
class FibTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FibTable>
      _instance;
} _FibTable_default_instance_;
class XConnectPairs_XConnectPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XConnectPairs_XConnectPair>
      _instance;
} _XConnectPairs_XConnectPair_default_instance_;
class XConnectPairsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XConnectPairs>
      _instance;
} _XConnectPairs_default_instance_;
class BridgeDomainState_BridgeDomain_L2_paramsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainState_BridgeDomain_L2_params>
      _instance;
} _BridgeDomainState_BridgeDomain_L2_params_default_instance_;
class BridgeDomainState_BridgeDomain_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainState_BridgeDomain_Interfaces>
      _instance;
} _BridgeDomainState_BridgeDomain_Interfaces_default_instance_;
class BridgeDomainState_BridgeDomainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainState_BridgeDomain>
      _instance;
} _BridgeDomainState_BridgeDomain_default_instance_;
class BridgeDomainStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainState>
      _instance;
} _BridgeDomainState_default_instance_;
class BridgeDomainErrors_BridgeDomain_ErrorDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainErrors_BridgeDomain_ErrorData>
      _instance;
} _BridgeDomainErrors_BridgeDomain_ErrorData_default_instance_;
class BridgeDomainErrors_BridgeDomainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainErrors_BridgeDomain>
      _instance;
} _BridgeDomainErrors_BridgeDomain_default_instance_;
class BridgeDomainErrorsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BridgeDomainErrors>
      _instance;
} _BridgeDomainErrors_default_instance_;
}  // namespace l2
namespace protobuf_vpp_2fmodel_2fl2_2fl2_2eproto {
static void InitDefaultsBridgeDomains_BridgeDomain_Interfaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomains_BridgeDomain_Interfaces_default_instance_;
    new (ptr) ::l2::BridgeDomains_BridgeDomain_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomains_BridgeDomain_Interfaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomains_BridgeDomain_Interfaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBridgeDomains_BridgeDomain_Interfaces}, {}};

static void InitDefaultsBridgeDomains_BridgeDomain_ArpTerminationEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomains_BridgeDomain_ArpTerminationEntry_default_instance_;
    new (ptr) ::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBridgeDomains_BridgeDomain_ArpTerminationEntry}, {}};

static void InitDefaultsBridgeDomains_BridgeDomain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomains_BridgeDomain_default_instance_;
    new (ptr) ::l2::BridgeDomains_BridgeDomain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomains_BridgeDomain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BridgeDomains_BridgeDomain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBridgeDomains_BridgeDomain}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_Interfaces.base,
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry.base,}};

static void InitDefaultsBridgeDomains() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomains_default_instance_;
    new (ptr) ::l2::BridgeDomains();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomains::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BridgeDomains =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBridgeDomains}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain.base,}};

static void InitDefaultsFibTable_FibEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_FibTable_FibEntry_default_instance_;
    new (ptr) ::l2::FibTable_FibEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::FibTable_FibEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FibTable_FibEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFibTable_FibEntry}, {}};

static void InitDefaultsFibTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_FibTable_default_instance_;
    new (ptr) ::l2::FibTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::FibTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FibTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFibTable}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_FibTable_FibEntry.base,}};

static void InitDefaultsXConnectPairs_XConnectPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_XConnectPairs_XConnectPair_default_instance_;
    new (ptr) ::l2::XConnectPairs_XConnectPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::XConnectPairs_XConnectPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XConnectPairs_XConnectPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXConnectPairs_XConnectPair}, {}};

static void InitDefaultsXConnectPairs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_XConnectPairs_default_instance_;
    new (ptr) ::l2::XConnectPairs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::XConnectPairs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_XConnectPairs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsXConnectPairs}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_XConnectPairs_XConnectPair.base,}};

static void InitDefaultsBridgeDomainState_BridgeDomain_L2_params() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainState_BridgeDomain_L2_params_default_instance_;
    new (ptr) ::l2::BridgeDomainState_BridgeDomain_L2_params();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainState_BridgeDomain_L2_params::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainState_BridgeDomain_L2_params =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBridgeDomainState_BridgeDomain_L2_params}, {}};

static void InitDefaultsBridgeDomainState_BridgeDomain_Interfaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainState_BridgeDomain_Interfaces_default_instance_;
    new (ptr) ::l2::BridgeDomainState_BridgeDomain_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainState_BridgeDomain_Interfaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainState_BridgeDomain_Interfaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBridgeDomainState_BridgeDomain_Interfaces}, {}};

static void InitDefaultsBridgeDomainState_BridgeDomain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainState_BridgeDomain_default_instance_;
    new (ptr) ::l2::BridgeDomainState_BridgeDomain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainState_BridgeDomain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BridgeDomainState_BridgeDomain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBridgeDomainState_BridgeDomain}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_L2_params.base,
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_Interfaces.base,}};

static void InitDefaultsBridgeDomainState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainState_default_instance_;
    new (ptr) ::l2::BridgeDomainState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BridgeDomainState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBridgeDomainState}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain.base,}};

static void InitDefaultsBridgeDomainErrors_BridgeDomain_ErrorData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainErrors_BridgeDomain_ErrorData_default_instance_;
    new (ptr) ::l2::BridgeDomainErrors_BridgeDomain_ErrorData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainErrors_BridgeDomain_ErrorData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BridgeDomainErrors_BridgeDomain_ErrorData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBridgeDomainErrors_BridgeDomain_ErrorData}, {}};

static void InitDefaultsBridgeDomainErrors_BridgeDomain() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainErrors_BridgeDomain_default_instance_;
    new (ptr) ::l2::BridgeDomainErrors_BridgeDomain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainErrors_BridgeDomain::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BridgeDomainErrors_BridgeDomain =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBridgeDomainErrors_BridgeDomain}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain_ErrorData.base,}};

static void InitDefaultsBridgeDomainErrors() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l2::_BridgeDomainErrors_default_instance_;
    new (ptr) ::l2::BridgeDomainErrors();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l2::BridgeDomainErrors::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BridgeDomainErrors =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBridgeDomainErrors}, {
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomains_BridgeDomain_Interfaces.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomains_BridgeDomain.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomains.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FibTable_FibEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FibTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XConnectPairs_XConnectPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XConnectPairs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainState_BridgeDomain_L2_params.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainState_BridgeDomain_Interfaces.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainState_BridgeDomain.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainErrors_BridgeDomain_ErrorData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainErrors_BridgeDomain.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BridgeDomainErrors.base);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_Interfaces, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_Interfaces, bridged_virtual_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_Interfaces, split_horizon_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry, phys_address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, flood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, unknown_unicast_flood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, learn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, arp_termination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, mac_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains_BridgeDomain, arp_termination_table_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomains, bridge_domains_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, phys_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, bridge_domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, outgoing_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, static_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable_FibEntry, bridged_virtual_interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::FibTable, fib_table_entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::XConnectPairs_XConnectPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::XConnectPairs_XConnectPair, receive_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::XConnectPairs_XConnectPair, transmit_interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::XConnectPairs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::XConnectPairs, x_connect_pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, flood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, unknown_unicast_flood_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, learn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, arp_termination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_L2_params, mac_age_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_Interfaces, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_Interfaces, sw_if_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain_Interfaces, split_horizon_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, internal_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, bvi_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, bvi_interface_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, interface_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, last_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, l2_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState_BridgeDomain, interfaces_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainState, bridge_domains_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain_ErrorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain_ErrorData, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain_ErrorData, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain_ErrorData, last_change_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain, bd_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors_BridgeDomain, error_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l2::BridgeDomainErrors, bridge_domain_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::l2::BridgeDomains_BridgeDomain_Interfaces)},
  { 8, -1, sizeof(::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry)},
  { 15, -1, sizeof(::l2::BridgeDomains_BridgeDomain)},
  { 29, -1, sizeof(::l2::BridgeDomains)},
  { 35, -1, sizeof(::l2::FibTable_FibEntry)},
  { 46, -1, sizeof(::l2::FibTable)},
  { 52, -1, sizeof(::l2::XConnectPairs_XConnectPair)},
  { 59, -1, sizeof(::l2::XConnectPairs)},
  { 65, -1, sizeof(::l2::BridgeDomainState_BridgeDomain_L2_params)},
  { 76, -1, sizeof(::l2::BridgeDomainState_BridgeDomain_Interfaces)},
  { 84, -1, sizeof(::l2::BridgeDomainState_BridgeDomain)},
  { 97, -1, sizeof(::l2::BridgeDomainState)},
  { 103, -1, sizeof(::l2::BridgeDomainErrors_BridgeDomain_ErrorData)},
  { 111, -1, sizeof(::l2::BridgeDomainErrors_BridgeDomain)},
  { 118, -1, sizeof(::l2::BridgeDomainErrors)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomains_BridgeDomain_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomains_BridgeDomain_ArpTerminationEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomains_BridgeDomain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomains_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_FibTable_FibEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_FibTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_XConnectPairs_XConnectPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_XConnectPairs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainState_BridgeDomain_L2_params_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainState_BridgeDomain_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainState_BridgeDomain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainErrors_BridgeDomain_ErrorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainErrors_BridgeDomain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l2::_BridgeDomainErrors_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/l2/l2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025vpp/model/l2/l2.proto\022\002l2\"\215\004\n\rBridgeDo"
      "mains\0226\n\016bridge_domains\030\001 \003(\0132\036.l2.Bridg"
      "eDomains.BridgeDomain\032\303\003\n\014BridgeDomain\022\014"
      "\n\004name\030\001 \001(\t\022\r\n\005flood\030\002 \001(\010\022\035\n\025unknown_u"
      "nicast_flood\030\003 \001(\010\022\017\n\007forward\030\004 \001(\010\022\r\n\005l"
      "earn\030\005 \001(\010\022\027\n\017arp_termination\030\006 \001(\010\022\017\n\007m"
      "ac_age\030\007 \001(\r\022=\n\ninterfaces\030d \003(\0132).l2.Br"
      "idgeDomains.BridgeDomain.Interfaces\022Q\n\025a"
      "rp_termination_table\030f \003(\01322.l2.BridgeDo"
      "mains.BridgeDomain.ArpTerminationEntry\032Z"
      "\n\nInterfaces\022\014\n\004name\030\001 \001(\t\022!\n\031bridged_vi"
      "rtual_interface\030\002 \001(\010\022\033\n\023split_horizon_g"
      "roup\030\003 \001(\r\032\?\n\023ArpTerminationEntry\022\022\n\nip_"
      "address\030\001 \001(\t\022\024\n\014phys_address\030\002 \001(\t\"\233\002\n\010"
      "FibTable\0220\n\021fib_table_entries\030d \003(\0132\025.l2"
      ".FibTable.FibEntry\032\334\001\n\010FibEntry\022\024\n\014phys_"
      "address\030\001 \001(\t\022\025\n\rbridge_domain\030\002 \001(\t\022,\n\006"
      "action\030\003 \001(\0162\034.l2.FibTable.FibEntry.Acti"
      "on\022\032\n\022outgoing_interface\030\004 \001(\t\022\025\n\rstatic"
      "_config\030\005 \001(\010\022!\n\031bridged_virtual_interfa"
      "ce\030\006 \001(\010\"\037\n\006Action\022\013\n\007FORWARD\020\000\022\010\n\004DROP\020"
      "\001\"\217\001\n\rXConnectPairs\0227\n\017x_connect_pairs\030d"
      " \003(\0132\036.l2.XConnectPairs.XConnectPair\032E\n\014"
      "XConnectPair\022\031\n\021receive_interface\030\002 \001(\t\022"
      "\032\n\022transmit_interface\030\003 \001(\t\"\300\004\n\021BridgeDo"
      "mainState\022:\n\016bridge_domains\030d \003(\0132\".l2.B"
      "ridgeDomainState.BridgeDomain\032\356\003\n\014Bridge"
      "Domain\022\r\n\005index\030\001 \001(\r\022\025\n\rinternal_name\030\002"
      " \001(\t\022\025\n\rbvi_interface\030\003 \001(\t\022\033\n\023bvi_inter"
      "face_index\030\004 \001(\r\022\027\n\017interface_count\030\005 \001("
      "\r\022\023\n\013last_change\030\006 \001(\003\022\?\n\tl2_params\030d \001("
      "\0132,.l2.BridgeDomainState.BridgeDomain.L2"
      "_params\022A\n\ninterfaces\030e \003(\0132-.l2.BridgeD"
      "omainState.BridgeDomain.Interfaces\032\203\001\n\tL"
      "2_params\022\r\n\005flood\030\001 \001(\010\022\035\n\025unknown_unica"
      "st_flood\030\002 \001(\010\022\017\n\007forward\030\003 \001(\010\022\r\n\005learn"
      "\030\004 \001(\010\022\027\n\017arp_termination\030\005 \001(\010\022\017\n\007mac_a"
      "ge\030\006 \001(\r\032L\n\nInterfaces\022\014\n\004name\030\001 \001(\t\022\023\n\013"
      "sw_if_index\030\002 \001(\r\022\033\n\023split_horizon_group"
      "\030\003 \001(\r\"\203\002\n\022BridgeDomainErrors\022:\n\rbridge_"
      "domain\030\001 \003(\0132#.l2.BridgeDomainErrors.Bri"
      "dgeDomain\032\260\001\n\014BridgeDomain\022\017\n\007bd_name\030\001 "
      "\001(\t\022A\n\nerror_data\030\002 \003(\0132-.l2.BridgeDomai"
      "nErrors.BridgeDomain.ErrorData\032L\n\tErrorD"
      "ata\022\023\n\013change_type\030\002 \001(\t\022\025\n\rerror_messag"
      "e\030\003 \001(\t\022\023\n\013last_change\030\004 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1836);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/l2/l2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fl2_2fl2_2eproto
namespace l2 {
const ::google::protobuf::EnumDescriptor* FibTable_FibEntry_Action_descriptor() {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_enum_descriptors[0];
}
bool FibTable_FibEntry_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FibTable_FibEntry_Action FibTable_FibEntry::FORWARD;
const FibTable_FibEntry_Action FibTable_FibEntry::DROP;
const FibTable_FibEntry_Action FibTable_FibEntry::Action_MIN;
const FibTable_FibEntry_Action FibTable_FibEntry::Action_MAX;
const int FibTable_FibEntry::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void BridgeDomains_BridgeDomain_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomains_BridgeDomain_Interfaces::kNameFieldNumber;
const int BridgeDomains_BridgeDomain_Interfaces::kBridgedVirtualInterfaceFieldNumber;
const int BridgeDomains_BridgeDomain_Interfaces::kSplitHorizonGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomains_BridgeDomain_Interfaces::BridgeDomains_BridgeDomain_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_Interfaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomains.BridgeDomain.Interfaces)
}
BridgeDomains_BridgeDomain_Interfaces::BridgeDomains_BridgeDomain_Interfaces(const BridgeDomains_BridgeDomain_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&bridged_virtual_interface_, &from.bridged_virtual_interface_,
    static_cast<size_t>(reinterpret_cast<char*>(&split_horizon_group_) -
    reinterpret_cast<char*>(&bridged_virtual_interface_)) + sizeof(split_horizon_group_));
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomains.BridgeDomain.Interfaces)
}

void BridgeDomains_BridgeDomain_Interfaces::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bridged_virtual_interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_horizon_group_) -
      reinterpret_cast<char*>(&bridged_virtual_interface_)) + sizeof(split_horizon_group_));
}

BridgeDomains_BridgeDomain_Interfaces::~BridgeDomains_BridgeDomain_Interfaces() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomains.BridgeDomain.Interfaces)
  SharedDtor();
}

void BridgeDomains_BridgeDomain_Interfaces::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomains_BridgeDomain_Interfaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomains_BridgeDomain_Interfaces::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomains_BridgeDomain_Interfaces& BridgeDomains_BridgeDomain_Interfaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_Interfaces.base);
  return *internal_default_instance();
}


void BridgeDomains_BridgeDomain_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bridged_virtual_interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_horizon_group_) -
      reinterpret_cast<char*>(&bridged_virtual_interface_)) + sizeof(split_horizon_group_));
  _internal_metadata_.Clear();
}

bool BridgeDomains_BridgeDomain_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomains.BridgeDomain.Interfaces.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bridged_virtual_interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bridged_virtual_interface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 split_horizon_group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &split_horizon_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomains.BridgeDomain.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomains.BridgeDomain.Interfaces)
  return false;
#undef DO_
}

void BridgeDomains_BridgeDomain_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.Interfaces.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool bridged_virtual_interface = 2;
  if (this->bridged_virtual_interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bridged_virtual_interface(), output);
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->split_horizon_group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomains.BridgeDomain.Interfaces)
}

::google::protobuf::uint8* BridgeDomains_BridgeDomain_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.Interfaces.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool bridged_virtual_interface = 2;
  if (this->bridged_virtual_interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bridged_virtual_interface(), target);
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->split_horizon_group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomains.BridgeDomain.Interfaces)
  return target;
}

size_t BridgeDomains_BridgeDomain_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool bridged_virtual_interface = 2;
  if (this->bridged_virtual_interface() != 0) {
    total_size += 1 + 1;
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->split_horizon_group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomains_BridgeDomain_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomains_BridgeDomain_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomains_BridgeDomain_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomains.BridgeDomain.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomains.BridgeDomain.Interfaces)
    MergeFrom(*source);
  }
}

void BridgeDomains_BridgeDomain_Interfaces::MergeFrom(const BridgeDomains_BridgeDomain_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.bridged_virtual_interface() != 0) {
    set_bridged_virtual_interface(from.bridged_virtual_interface());
  }
  if (from.split_horizon_group() != 0) {
    set_split_horizon_group(from.split_horizon_group());
  }
}

void BridgeDomains_BridgeDomain_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomains_BridgeDomain_Interfaces::CopyFrom(const BridgeDomains_BridgeDomain_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomains.BridgeDomain.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomains_BridgeDomain_Interfaces::IsInitialized() const {
  return true;
}

void BridgeDomains_BridgeDomain_Interfaces::Swap(BridgeDomains_BridgeDomain_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomains_BridgeDomain_Interfaces::InternalSwap(BridgeDomains_BridgeDomain_Interfaces* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bridged_virtual_interface_, other->bridged_virtual_interface_);
  swap(split_horizon_group_, other->split_horizon_group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomains_BridgeDomain_Interfaces::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomains_BridgeDomain_ArpTerminationEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomains_BridgeDomain_ArpTerminationEntry::kIpAddressFieldNumber;
const int BridgeDomains_BridgeDomain_ArpTerminationEntry::kPhysAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomains_BridgeDomain_ArpTerminationEntry::BridgeDomains_BridgeDomain_ArpTerminationEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
}
BridgeDomains_BridgeDomain_ArpTerminationEntry::BridgeDomains_BridgeDomain_ArpTerminationEntry(const BridgeDomains_BridgeDomain_ArpTerminationEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phys_address().size() > 0) {
    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::SharedCtor() {
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BridgeDomains_BridgeDomain_ArpTerminationEntry::~BridgeDomains_BridgeDomain_ArpTerminationEntry() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  SharedDtor();
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomains_BridgeDomain_ArpTerminationEntry::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomains_BridgeDomain_ArpTerminationEntry& BridgeDomains_BridgeDomain_ArpTerminationEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain_ArpTerminationEntry.base);
  return *internal_default_instance();
}


void BridgeDomains_BridgeDomain_ArpTerminationEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BridgeDomains_BridgeDomain_ArpTerminationEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phys_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phys_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phys_address().data(), static_cast<int>(this->phys_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.phys_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  return false;
#undef DO_
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_address(), output);
  }

  // string phys_address = 2;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.phys_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phys_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
}

::google::protobuf::uint8* BridgeDomains_BridgeDomain_ArpTerminationEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_address(), target);
  }

  // string phys_address = 2;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.ArpTerminationEntry.phys_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phys_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  return target;
}

size_t BridgeDomains_BridgeDomain_ArpTerminationEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // string phys_address = 2;
  if (this->phys_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phys_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomains_BridgeDomain_ArpTerminationEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomains_BridgeDomain_ArpTerminationEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
    MergeFrom(*source);
  }
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::MergeFrom(const BridgeDomains_BridgeDomain_ArpTerminationEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.phys_address().size() > 0) {

    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::CopyFrom(const BridgeDomains_BridgeDomain_ArpTerminationEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomains.BridgeDomain.ArpTerminationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomains_BridgeDomain_ArpTerminationEntry::IsInitialized() const {
  return true;
}

void BridgeDomains_BridgeDomain_ArpTerminationEntry::Swap(BridgeDomains_BridgeDomain_ArpTerminationEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomains_BridgeDomain_ArpTerminationEntry::InternalSwap(BridgeDomains_BridgeDomain_ArpTerminationEntry* other) {
  using std::swap;
  ip_address_.Swap(&other->ip_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phys_address_.Swap(&other->phys_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomains_BridgeDomain_ArpTerminationEntry::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomains_BridgeDomain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomains_BridgeDomain::kNameFieldNumber;
const int BridgeDomains_BridgeDomain::kFloodFieldNumber;
const int BridgeDomains_BridgeDomain::kUnknownUnicastFloodFieldNumber;
const int BridgeDomains_BridgeDomain::kForwardFieldNumber;
const int BridgeDomains_BridgeDomain::kLearnFieldNumber;
const int BridgeDomains_BridgeDomain::kArpTerminationFieldNumber;
const int BridgeDomains_BridgeDomain::kMacAgeFieldNumber;
const int BridgeDomains_BridgeDomain::kInterfacesFieldNumber;
const int BridgeDomains_BridgeDomain::kArpTerminationTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomains_BridgeDomain::BridgeDomains_BridgeDomain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomains.BridgeDomain)
}
BridgeDomains_BridgeDomain::BridgeDomains_BridgeDomain(const BridgeDomains_BridgeDomain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interfaces_(from.interfaces_),
      arp_termination_table_(from.arp_termination_table_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&flood_, &from.flood_,
    static_cast<size_t>(reinterpret_cast<char*>(&mac_age_) -
    reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomains.BridgeDomain)
}

void BridgeDomains_BridgeDomain::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flood_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_age_) -
      reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
}

BridgeDomains_BridgeDomain::~BridgeDomains_BridgeDomain() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomains.BridgeDomain)
  SharedDtor();
}

void BridgeDomains_BridgeDomain::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomains_BridgeDomain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomains_BridgeDomain::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomains_BridgeDomain& BridgeDomains_BridgeDomain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains_BridgeDomain.base);
  return *internal_default_instance();
}


void BridgeDomains_BridgeDomain::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomains.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interfaces_.Clear();
  arp_termination_table_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flood_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_age_) -
      reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
  _internal_metadata_.Clear();
}

bool BridgeDomains_BridgeDomain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomains.BridgeDomain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomains.BridgeDomain.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool flood = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unknown_unicast_flood = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unknown_unicast_flood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool forward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool learn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &learn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool arp_termination = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &arp_termination_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mac_age = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mac_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .l2.BridgeDomains.BridgeDomain.Interfaces interfaces = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .l2.BridgeDomains.BridgeDomain.ArpTerminationEntry arp_termination_table = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arp_termination_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomains.BridgeDomain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomains.BridgeDomain)
  return false;
#undef DO_
}

void BridgeDomains_BridgeDomain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomains.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool flood = 2;
  if (this->flood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->flood(), output);
  }

  // bool unknown_unicast_flood = 3;
  if (this->unknown_unicast_flood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->unknown_unicast_flood(), output);
  }

  // bool forward = 4;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->forward(), output);
  }

  // bool learn = 5;
  if (this->learn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->learn(), output);
  }

  // bool arp_termination = 6;
  if (this->arp_termination() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->arp_termination(), output);
  }

  // uint32 mac_age = 7;
  if (this->mac_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mac_age(), output);
  }

  // repeated .l2.BridgeDomains.BridgeDomain.Interfaces interfaces = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100,
      this->interfaces(static_cast<int>(i)),
      output);
  }

  // repeated .l2.BridgeDomains.BridgeDomain.ArpTerminationEntry arp_termination_table = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arp_termination_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102,
      this->arp_termination_table(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomains.BridgeDomain)
}

::google::protobuf::uint8* BridgeDomains_BridgeDomain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomains.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomains.BridgeDomain.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool flood = 2;
  if (this->flood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->flood(), target);
  }

  // bool unknown_unicast_flood = 3;
  if (this->unknown_unicast_flood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->unknown_unicast_flood(), target);
  }

  // bool forward = 4;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->forward(), target);
  }

  // bool learn = 5;
  if (this->learn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->learn(), target);
  }

  // bool arp_termination = 6;
  if (this->arp_termination() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->arp_termination(), target);
  }

  // uint32 mac_age = 7;
  if (this->mac_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mac_age(), target);
  }

  // repeated .l2.BridgeDomains.BridgeDomain.Interfaces interfaces = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->interfaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .l2.BridgeDomains.BridgeDomain.ArpTerminationEntry arp_termination_table = 102;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arp_termination_table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        102, this->arp_termination_table(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomains.BridgeDomain)
  return target;
}

size_t BridgeDomains_BridgeDomain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomains.BridgeDomain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomains.BridgeDomain.Interfaces interfaces = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->interfaces_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interfaces(static_cast<int>(i)));
    }
  }

  // repeated .l2.BridgeDomains.BridgeDomain.ArpTerminationEntry arp_termination_table = 102;
  {
    unsigned int count = static_cast<unsigned int>(this->arp_termination_table_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arp_termination_table(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool flood = 2;
  if (this->flood() != 0) {
    total_size += 1 + 1;
  }

  // bool unknown_unicast_flood = 3;
  if (this->unknown_unicast_flood() != 0) {
    total_size += 1 + 1;
  }

  // bool forward = 4;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // bool learn = 5;
  if (this->learn() != 0) {
    total_size += 1 + 1;
  }

  // bool arp_termination = 6;
  if (this->arp_termination() != 0) {
    total_size += 1 + 1;
  }

  // uint32 mac_age = 7;
  if (this->mac_age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mac_age());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomains_BridgeDomain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomains.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomains_BridgeDomain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomains_BridgeDomain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomains.BridgeDomain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomains.BridgeDomain)
    MergeFrom(*source);
  }
}

void BridgeDomains_BridgeDomain::MergeFrom(const BridgeDomains_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomains.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interfaces_.MergeFrom(from.interfaces_);
  arp_termination_table_.MergeFrom(from.arp_termination_table_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.flood() != 0) {
    set_flood(from.flood());
  }
  if (from.unknown_unicast_flood() != 0) {
    set_unknown_unicast_flood(from.unknown_unicast_flood());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.learn() != 0) {
    set_learn(from.learn());
  }
  if (from.arp_termination() != 0) {
    set_arp_termination(from.arp_termination());
  }
  if (from.mac_age() != 0) {
    set_mac_age(from.mac_age());
  }
}

void BridgeDomains_BridgeDomain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomains.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomains_BridgeDomain::CopyFrom(const BridgeDomains_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomains.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomains_BridgeDomain::IsInitialized() const {
  return true;
}

void BridgeDomains_BridgeDomain::Swap(BridgeDomains_BridgeDomain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomains_BridgeDomain::InternalSwap(BridgeDomains_BridgeDomain* other) {
  using std::swap;
  CastToBase(&interfaces_)->InternalSwap(CastToBase(&other->interfaces_));
  CastToBase(&arp_termination_table_)->InternalSwap(CastToBase(&other->arp_termination_table_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flood_, other->flood_);
  swap(unknown_unicast_flood_, other->unknown_unicast_flood_);
  swap(forward_, other->forward_);
  swap(learn_, other->learn_);
  swap(arp_termination_, other->arp_termination_);
  swap(mac_age_, other->mac_age_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomains_BridgeDomain::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomains::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomains::kBridgeDomainsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomains::BridgeDomains()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomains)
}
BridgeDomains::BridgeDomains(const BridgeDomains& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bridge_domains_(from.bridge_domains_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomains)
}

void BridgeDomains::SharedCtor() {
}

BridgeDomains::~BridgeDomains() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomains)
  SharedDtor();
}

void BridgeDomains::SharedDtor() {
}

void BridgeDomains::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomains::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomains& BridgeDomains::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomains.base);
  return *internal_default_instance();
}


void BridgeDomains::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bridge_domains_.Clear();
  _internal_metadata_.Clear();
}

bool BridgeDomains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomains)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l2.BridgeDomains.BridgeDomain bridge_domains = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bridge_domains()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomains)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomains)
  return false;
#undef DO_
}

void BridgeDomains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomains.BridgeDomain bridge_domains = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domains_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bridge_domains(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomains)
}

::google::protobuf::uint8* BridgeDomains::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomains.BridgeDomain bridge_domains = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domains_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bridge_domains(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomains)
  return target;
}

size_t BridgeDomains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomains)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomains.BridgeDomain bridge_domains = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bridge_domains_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bridge_domains(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomains::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomains)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomains* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomains>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomains)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomains)
    MergeFrom(*source);
  }
}

void BridgeDomains::MergeFrom(const BridgeDomains& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomains)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bridge_domains_.MergeFrom(from.bridge_domains_);
}

void BridgeDomains::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomains::CopyFrom(const BridgeDomains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomains::IsInitialized() const {
  return true;
}

void BridgeDomains::Swap(BridgeDomains* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomains::InternalSwap(BridgeDomains* other) {
  using std::swap;
  CastToBase(&bridge_domains_)->InternalSwap(CastToBase(&other->bridge_domains_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomains::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FibTable_FibEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FibTable_FibEntry::kPhysAddressFieldNumber;
const int FibTable_FibEntry::kBridgeDomainFieldNumber;
const int FibTable_FibEntry::kActionFieldNumber;
const int FibTable_FibEntry::kOutgoingInterfaceFieldNumber;
const int FibTable_FibEntry::kStaticConfigFieldNumber;
const int FibTable_FibEntry::kBridgedVirtualInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FibTable_FibEntry::FibTable_FibEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_FibTable_FibEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.FibTable.FibEntry)
}
FibTable_FibEntry::FibTable_FibEntry(const FibTable_FibEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phys_address().size() > 0) {
    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
  bridge_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bridge_domain().size() > 0) {
    bridge_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bridge_domain_);
  }
  outgoing_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.outgoing_interface().size() > 0) {
    outgoing_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outgoing_interface_);
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&bridged_virtual_interface_) -
    reinterpret_cast<char*>(&action_)) + sizeof(bridged_virtual_interface_));
  // @@protoc_insertion_point(copy_constructor:l2.FibTable.FibEntry)
}

void FibTable_FibEntry::SharedCtor() {
  phys_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bridge_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outgoing_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bridged_virtual_interface_) -
      reinterpret_cast<char*>(&action_)) + sizeof(bridged_virtual_interface_));
}

FibTable_FibEntry::~FibTable_FibEntry() {
  // @@protoc_insertion_point(destructor:l2.FibTable.FibEntry)
  SharedDtor();
}

void FibTable_FibEntry::SharedDtor() {
  phys_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bridge_domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outgoing_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FibTable_FibEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FibTable_FibEntry::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FibTable_FibEntry& FibTable_FibEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_FibTable_FibEntry.base);
  return *internal_default_instance();
}


void FibTable_FibEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.FibTable.FibEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bridge_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outgoing_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bridged_virtual_interface_) -
      reinterpret_cast<char*>(&action_)) + sizeof(bridged_virtual_interface_));
  _internal_metadata_.Clear();
}

bool FibTable_FibEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.FibTable.FibEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string phys_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phys_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phys_address().data(), static_cast<int>(this->phys_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.FibTable.FibEntry.phys_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bridge_domain = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bridge_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bridge_domain().data(), static_cast<int>(this->bridge_domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.FibTable.FibEntry.bridge_domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l2.FibTable.FibEntry.Action action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::l2::FibTable_FibEntry_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string outgoing_interface = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outgoing_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->outgoing_interface().data(), static_cast<int>(this->outgoing_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.FibTable.FibEntry.outgoing_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool static_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &static_config_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bridged_virtual_interface = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bridged_virtual_interface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.FibTable.FibEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.FibTable.FibEntry)
  return false;
#undef DO_
}

void FibTable_FibEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.FibTable.FibEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phys_address = 1;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.phys_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phys_address(), output);
  }

  // string bridge_domain = 2;
  if (this->bridge_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bridge_domain().data(), static_cast<int>(this->bridge_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.bridge_domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bridge_domain(), output);
  }

  // .l2.FibTable.FibEntry.Action action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action(), output);
  }

  // string outgoing_interface = 4;
  if (this->outgoing_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outgoing_interface().data(), static_cast<int>(this->outgoing_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.outgoing_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->outgoing_interface(), output);
  }

  // bool static_config = 5;
  if (this->static_config() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->static_config(), output);
  }

  // bool bridged_virtual_interface = 6;
  if (this->bridged_virtual_interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bridged_virtual_interface(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.FibTable.FibEntry)
}

::google::protobuf::uint8* FibTable_FibEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.FibTable.FibEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phys_address = 1;
  if (this->phys_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phys_address().data(), static_cast<int>(this->phys_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.phys_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phys_address(), target);
  }

  // string bridge_domain = 2;
  if (this->bridge_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bridge_domain().data(), static_cast<int>(this->bridge_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.bridge_domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bridge_domain(), target);
  }

  // .l2.FibTable.FibEntry.Action action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action(), target);
  }

  // string outgoing_interface = 4;
  if (this->outgoing_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->outgoing_interface().data(), static_cast<int>(this->outgoing_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.FibTable.FibEntry.outgoing_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->outgoing_interface(), target);
  }

  // bool static_config = 5;
  if (this->static_config() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->static_config(), target);
  }

  // bool bridged_virtual_interface = 6;
  if (this->bridged_virtual_interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bridged_virtual_interface(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.FibTable.FibEntry)
  return target;
}

size_t FibTable_FibEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.FibTable.FibEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phys_address = 1;
  if (this->phys_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phys_address());
  }

  // string bridge_domain = 2;
  if (this->bridge_domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bridge_domain());
  }

  // string outgoing_interface = 4;
  if (this->outgoing_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->outgoing_interface());
  }

  // .l2.FibTable.FibEntry.Action action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // bool static_config = 5;
  if (this->static_config() != 0) {
    total_size += 1 + 1;
  }

  // bool bridged_virtual_interface = 6;
  if (this->bridged_virtual_interface() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FibTable_FibEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.FibTable.FibEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const FibTable_FibEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FibTable_FibEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.FibTable.FibEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.FibTable.FibEntry)
    MergeFrom(*source);
  }
}

void FibTable_FibEntry::MergeFrom(const FibTable_FibEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.FibTable.FibEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phys_address().size() > 0) {

    phys_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phys_address_);
  }
  if (from.bridge_domain().size() > 0) {

    bridge_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bridge_domain_);
  }
  if (from.outgoing_interface().size() > 0) {

    outgoing_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outgoing_interface_);
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.static_config() != 0) {
    set_static_config(from.static_config());
  }
  if (from.bridged_virtual_interface() != 0) {
    set_bridged_virtual_interface(from.bridged_virtual_interface());
  }
}

void FibTable_FibEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.FibTable.FibEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FibTable_FibEntry::CopyFrom(const FibTable_FibEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.FibTable.FibEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FibTable_FibEntry::IsInitialized() const {
  return true;
}

void FibTable_FibEntry::Swap(FibTable_FibEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FibTable_FibEntry::InternalSwap(FibTable_FibEntry* other) {
  using std::swap;
  phys_address_.Swap(&other->phys_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bridge_domain_.Swap(&other->bridge_domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  outgoing_interface_.Swap(&other->outgoing_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(static_config_, other->static_config_);
  swap(bridged_virtual_interface_, other->bridged_virtual_interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FibTable_FibEntry::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FibTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FibTable::kFibTableEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FibTable::FibTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_FibTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.FibTable)
}
FibTable::FibTable(const FibTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fib_table_entries_(from.fib_table_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l2.FibTable)
}

void FibTable::SharedCtor() {
}

FibTable::~FibTable() {
  // @@protoc_insertion_point(destructor:l2.FibTable)
  SharedDtor();
}

void FibTable::SharedDtor() {
}

void FibTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FibTable::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FibTable& FibTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_FibTable.base);
  return *internal_default_instance();
}


void FibTable::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.FibTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fib_table_entries_.Clear();
  _internal_metadata_.Clear();
}

bool FibTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.FibTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l2.FibTable.FibEntry fib_table_entries = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fib_table_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.FibTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.FibTable)
  return false;
#undef DO_
}

void FibTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.FibTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.FibTable.FibEntry fib_table_entries = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fib_table_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100,
      this->fib_table_entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.FibTable)
}

::google::protobuf::uint8* FibTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.FibTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.FibTable.FibEntry fib_table_entries = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fib_table_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->fib_table_entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.FibTable)
  return target;
}

size_t FibTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.FibTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.FibTable.FibEntry fib_table_entries = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->fib_table_entries_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fib_table_entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FibTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.FibTable)
  GOOGLE_DCHECK_NE(&from, this);
  const FibTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FibTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.FibTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.FibTable)
    MergeFrom(*source);
  }
}

void FibTable::MergeFrom(const FibTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.FibTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fib_table_entries_.MergeFrom(from.fib_table_entries_);
}

void FibTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.FibTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FibTable::CopyFrom(const FibTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.FibTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FibTable::IsInitialized() const {
  return true;
}

void FibTable::Swap(FibTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FibTable::InternalSwap(FibTable* other) {
  using std::swap;
  CastToBase(&fib_table_entries_)->InternalSwap(CastToBase(&other->fib_table_entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FibTable::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XConnectPairs_XConnectPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XConnectPairs_XConnectPair::kReceiveInterfaceFieldNumber;
const int XConnectPairs_XConnectPair::kTransmitInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XConnectPairs_XConnectPair::XConnectPairs_XConnectPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_XConnectPairs_XConnectPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.XConnectPairs.XConnectPair)
}
XConnectPairs_XConnectPair::XConnectPairs_XConnectPair(const XConnectPairs_XConnectPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  receive_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.receive_interface().size() > 0) {
    receive_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receive_interface_);
  }
  transmit_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transmit_interface().size() > 0) {
    transmit_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transmit_interface_);
  }
  // @@protoc_insertion_point(copy_constructor:l2.XConnectPairs.XConnectPair)
}

void XConnectPairs_XConnectPair::SharedCtor() {
  receive_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transmit_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

XConnectPairs_XConnectPair::~XConnectPairs_XConnectPair() {
  // @@protoc_insertion_point(destructor:l2.XConnectPairs.XConnectPair)
  SharedDtor();
}

void XConnectPairs_XConnectPair::SharedDtor() {
  receive_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transmit_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XConnectPairs_XConnectPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XConnectPairs_XConnectPair::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XConnectPairs_XConnectPair& XConnectPairs_XConnectPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_XConnectPairs_XConnectPair.base);
  return *internal_default_instance();
}


void XConnectPairs_XConnectPair::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.XConnectPairs.XConnectPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receive_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transmit_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XConnectPairs_XConnectPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.XConnectPairs.XConnectPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string receive_interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receive_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receive_interface().data(), static_cast<int>(this->receive_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.XConnectPairs.XConnectPair.receive_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transmit_interface = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transmit_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transmit_interface().data(), static_cast<int>(this->transmit_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.XConnectPairs.XConnectPair.transmit_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.XConnectPairs.XConnectPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.XConnectPairs.XConnectPair)
  return false;
#undef DO_
}

void XConnectPairs_XConnectPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.XConnectPairs.XConnectPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string receive_interface = 2;
  if (this->receive_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receive_interface().data(), static_cast<int>(this->receive_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.XConnectPairs.XConnectPair.receive_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receive_interface(), output);
  }

  // string transmit_interface = 3;
  if (this->transmit_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transmit_interface().data(), static_cast<int>(this->transmit_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.XConnectPairs.XConnectPair.transmit_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transmit_interface(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.XConnectPairs.XConnectPair)
}

::google::protobuf::uint8* XConnectPairs_XConnectPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.XConnectPairs.XConnectPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string receive_interface = 2;
  if (this->receive_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receive_interface().data(), static_cast<int>(this->receive_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.XConnectPairs.XConnectPair.receive_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->receive_interface(), target);
  }

  // string transmit_interface = 3;
  if (this->transmit_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transmit_interface().data(), static_cast<int>(this->transmit_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.XConnectPairs.XConnectPair.transmit_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transmit_interface(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.XConnectPairs.XConnectPair)
  return target;
}

size_t XConnectPairs_XConnectPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.XConnectPairs.XConnectPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string receive_interface = 2;
  if (this->receive_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receive_interface());
  }

  // string transmit_interface = 3;
  if (this->transmit_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transmit_interface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XConnectPairs_XConnectPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.XConnectPairs.XConnectPair)
  GOOGLE_DCHECK_NE(&from, this);
  const XConnectPairs_XConnectPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XConnectPairs_XConnectPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.XConnectPairs.XConnectPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.XConnectPairs.XConnectPair)
    MergeFrom(*source);
  }
}

void XConnectPairs_XConnectPair::MergeFrom(const XConnectPairs_XConnectPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.XConnectPairs.XConnectPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.receive_interface().size() > 0) {

    receive_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receive_interface_);
  }
  if (from.transmit_interface().size() > 0) {

    transmit_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transmit_interface_);
  }
}

void XConnectPairs_XConnectPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.XConnectPairs.XConnectPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XConnectPairs_XConnectPair::CopyFrom(const XConnectPairs_XConnectPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.XConnectPairs.XConnectPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XConnectPairs_XConnectPair::IsInitialized() const {
  return true;
}

void XConnectPairs_XConnectPair::Swap(XConnectPairs_XConnectPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XConnectPairs_XConnectPair::InternalSwap(XConnectPairs_XConnectPair* other) {
  using std::swap;
  receive_interface_.Swap(&other->receive_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transmit_interface_.Swap(&other->transmit_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XConnectPairs_XConnectPair::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XConnectPairs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XConnectPairs::kXConnectPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XConnectPairs::XConnectPairs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_XConnectPairs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.XConnectPairs)
}
XConnectPairs::XConnectPairs(const XConnectPairs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x_connect_pairs_(from.x_connect_pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l2.XConnectPairs)
}

void XConnectPairs::SharedCtor() {
}

XConnectPairs::~XConnectPairs() {
  // @@protoc_insertion_point(destructor:l2.XConnectPairs)
  SharedDtor();
}

void XConnectPairs::SharedDtor() {
}

void XConnectPairs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XConnectPairs::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XConnectPairs& XConnectPairs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_XConnectPairs.base);
  return *internal_default_instance();
}


void XConnectPairs::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.XConnectPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_connect_pairs_.Clear();
  _internal_metadata_.Clear();
}

bool XConnectPairs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.XConnectPairs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l2.XConnectPairs.XConnectPair x_connect_pairs = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_x_connect_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.XConnectPairs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.XConnectPairs)
  return false;
#undef DO_
}

void XConnectPairs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.XConnectPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.XConnectPairs.XConnectPair x_connect_pairs = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->x_connect_pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100,
      this->x_connect_pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.XConnectPairs)
}

::google::protobuf::uint8* XConnectPairs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.XConnectPairs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.XConnectPairs.XConnectPair x_connect_pairs = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->x_connect_pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->x_connect_pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.XConnectPairs)
  return target;
}

size_t XConnectPairs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.XConnectPairs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.XConnectPairs.XConnectPair x_connect_pairs = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->x_connect_pairs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->x_connect_pairs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XConnectPairs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.XConnectPairs)
  GOOGLE_DCHECK_NE(&from, this);
  const XConnectPairs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XConnectPairs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.XConnectPairs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.XConnectPairs)
    MergeFrom(*source);
  }
}

void XConnectPairs::MergeFrom(const XConnectPairs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.XConnectPairs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x_connect_pairs_.MergeFrom(from.x_connect_pairs_);
}

void XConnectPairs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.XConnectPairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XConnectPairs::CopyFrom(const XConnectPairs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.XConnectPairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XConnectPairs::IsInitialized() const {
  return true;
}

void XConnectPairs::Swap(XConnectPairs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XConnectPairs::InternalSwap(XConnectPairs* other) {
  using std::swap;
  CastToBase(&x_connect_pairs_)->InternalSwap(CastToBase(&other->x_connect_pairs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XConnectPairs::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainState_BridgeDomain_L2_params::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainState_BridgeDomain_L2_params::kFloodFieldNumber;
const int BridgeDomainState_BridgeDomain_L2_params::kUnknownUnicastFloodFieldNumber;
const int BridgeDomainState_BridgeDomain_L2_params::kForwardFieldNumber;
const int BridgeDomainState_BridgeDomain_L2_params::kLearnFieldNumber;
const int BridgeDomainState_BridgeDomain_L2_params::kArpTerminationFieldNumber;
const int BridgeDomainState_BridgeDomain_L2_params::kMacAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainState_BridgeDomain_L2_params::BridgeDomainState_BridgeDomain_L2_params()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_L2_params.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainState.BridgeDomain.L2_params)
}
BridgeDomainState_BridgeDomain_L2_params::BridgeDomainState_BridgeDomain_L2_params(const BridgeDomainState_BridgeDomain_L2_params& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flood_, &from.flood_,
    static_cast<size_t>(reinterpret_cast<char*>(&mac_age_) -
    reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainState.BridgeDomain.L2_params)
}

void BridgeDomainState_BridgeDomain_L2_params::SharedCtor() {
  ::memset(&flood_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_age_) -
      reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
}

BridgeDomainState_BridgeDomain_L2_params::~BridgeDomainState_BridgeDomain_L2_params() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainState.BridgeDomain.L2_params)
  SharedDtor();
}

void BridgeDomainState_BridgeDomain_L2_params::SharedDtor() {
}

void BridgeDomainState_BridgeDomain_L2_params::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainState_BridgeDomain_L2_params::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainState_BridgeDomain_L2_params& BridgeDomainState_BridgeDomain_L2_params::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_L2_params.base);
  return *internal_default_instance();
}


void BridgeDomainState_BridgeDomain_L2_params::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flood_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_age_) -
      reinterpret_cast<char*>(&flood_)) + sizeof(mac_age_));
  _internal_metadata_.Clear();
}

bool BridgeDomainState_BridgeDomain_L2_params::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool flood = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unknown_unicast_flood = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unknown_unicast_flood_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool learn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &learn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool arp_termination = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &arp_termination_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mac_age = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mac_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainState.BridgeDomain.L2_params)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainState.BridgeDomain.L2_params)
  return false;
#undef DO_
}

void BridgeDomainState_BridgeDomain_L2_params::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool flood = 1;
  if (this->flood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->flood(), output);
  }

  // bool unknown_unicast_flood = 2;
  if (this->unknown_unicast_flood() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->unknown_unicast_flood(), output);
  }

  // bool forward = 3;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->forward(), output);
  }

  // bool learn = 4;
  if (this->learn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->learn(), output);
  }

  // bool arp_termination = 5;
  if (this->arp_termination() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->arp_termination(), output);
  }

  // uint32 mac_age = 6;
  if (this->mac_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mac_age(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainState.BridgeDomain.L2_params)
}

::google::protobuf::uint8* BridgeDomainState_BridgeDomain_L2_params::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool flood = 1;
  if (this->flood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->flood(), target);
  }

  // bool unknown_unicast_flood = 2;
  if (this->unknown_unicast_flood() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->unknown_unicast_flood(), target);
  }

  // bool forward = 3;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->forward(), target);
  }

  // bool learn = 4;
  if (this->learn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->learn(), target);
  }

  // bool arp_termination = 5;
  if (this->arp_termination() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->arp_termination(), target);
  }

  // uint32 mac_age = 6;
  if (this->mac_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mac_age(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainState.BridgeDomain.L2_params)
  return target;
}

size_t BridgeDomainState_BridgeDomain_L2_params::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool flood = 1;
  if (this->flood() != 0) {
    total_size += 1 + 1;
  }

  // bool unknown_unicast_flood = 2;
  if (this->unknown_unicast_flood() != 0) {
    total_size += 1 + 1;
  }

  // bool forward = 3;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // bool learn = 4;
  if (this->learn() != 0) {
    total_size += 1 + 1;
  }

  // bool arp_termination = 5;
  if (this->arp_termination() != 0) {
    total_size += 1 + 1;
  }

  // uint32 mac_age = 6;
  if (this->mac_age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mac_age());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainState_BridgeDomain_L2_params::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainState_BridgeDomain_L2_params* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainState_BridgeDomain_L2_params>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainState.BridgeDomain.L2_params)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainState.BridgeDomain.L2_params)
    MergeFrom(*source);
  }
}

void BridgeDomainState_BridgeDomain_L2_params::MergeFrom(const BridgeDomainState_BridgeDomain_L2_params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flood() != 0) {
    set_flood(from.flood());
  }
  if (from.unknown_unicast_flood() != 0) {
    set_unknown_unicast_flood(from.unknown_unicast_flood());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.learn() != 0) {
    set_learn(from.learn());
  }
  if (from.arp_termination() != 0) {
    set_arp_termination(from.arp_termination());
  }
  if (from.mac_age() != 0) {
    set_mac_age(from.mac_age());
  }
}

void BridgeDomainState_BridgeDomain_L2_params::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainState_BridgeDomain_L2_params::CopyFrom(const BridgeDomainState_BridgeDomain_L2_params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainState.BridgeDomain.L2_params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainState_BridgeDomain_L2_params::IsInitialized() const {
  return true;
}

void BridgeDomainState_BridgeDomain_L2_params::Swap(BridgeDomainState_BridgeDomain_L2_params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainState_BridgeDomain_L2_params::InternalSwap(BridgeDomainState_BridgeDomain_L2_params* other) {
  using std::swap;
  swap(flood_, other->flood_);
  swap(unknown_unicast_flood_, other->unknown_unicast_flood_);
  swap(forward_, other->forward_);
  swap(learn_, other->learn_);
  swap(arp_termination_, other->arp_termination_);
  swap(mac_age_, other->mac_age_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainState_BridgeDomain_L2_params::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainState_BridgeDomain_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainState_BridgeDomain_Interfaces::kNameFieldNumber;
const int BridgeDomainState_BridgeDomain_Interfaces::kSwIfIndexFieldNumber;
const int BridgeDomainState_BridgeDomain_Interfaces::kSplitHorizonGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainState_BridgeDomain_Interfaces::BridgeDomainState_BridgeDomain_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_Interfaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainState.BridgeDomain.Interfaces)
}
BridgeDomainState_BridgeDomain_Interfaces::BridgeDomainState_BridgeDomain_Interfaces(const BridgeDomainState_BridgeDomain_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&sw_if_index_, &from.sw_if_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&split_horizon_group_) -
    reinterpret_cast<char*>(&sw_if_index_)) + sizeof(split_horizon_group_));
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainState.BridgeDomain.Interfaces)
}

void BridgeDomainState_BridgeDomain_Interfaces::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sw_if_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_horizon_group_) -
      reinterpret_cast<char*>(&sw_if_index_)) + sizeof(split_horizon_group_));
}

BridgeDomainState_BridgeDomain_Interfaces::~BridgeDomainState_BridgeDomain_Interfaces() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainState.BridgeDomain.Interfaces)
  SharedDtor();
}

void BridgeDomainState_BridgeDomain_Interfaces::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomainState_BridgeDomain_Interfaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainState_BridgeDomain_Interfaces::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainState_BridgeDomain_Interfaces& BridgeDomainState_BridgeDomain_Interfaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain_Interfaces.base);
  return *internal_default_instance();
}


void BridgeDomainState_BridgeDomain_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sw_if_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&split_horizon_group_) -
      reinterpret_cast<char*>(&sw_if_index_)) + sizeof(split_horizon_group_));
  _internal_metadata_.Clear();
}

bool BridgeDomainState_BridgeDomain_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainState.BridgeDomain.Interfaces.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sw_if_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sw_if_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 split_horizon_group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &split_horizon_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainState.BridgeDomain.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainState.BridgeDomain.Interfaces)
  return false;
#undef DO_
}

void BridgeDomainState_BridgeDomain_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.Interfaces.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 sw_if_index = 2;
  if (this->sw_if_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sw_if_index(), output);
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->split_horizon_group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainState.BridgeDomain.Interfaces)
}

::google::protobuf::uint8* BridgeDomainState_BridgeDomain_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.Interfaces.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 sw_if_index = 2;
  if (this->sw_if_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sw_if_index(), target);
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->split_horizon_group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainState.BridgeDomain.Interfaces)
  return target;
}

size_t BridgeDomainState_BridgeDomain_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 sw_if_index = 2;
  if (this->sw_if_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sw_if_index());
  }

  // uint32 split_horizon_group = 3;
  if (this->split_horizon_group() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->split_horizon_group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainState_BridgeDomain_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainState_BridgeDomain_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainState_BridgeDomain_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainState.BridgeDomain.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainState.BridgeDomain.Interfaces)
    MergeFrom(*source);
  }
}

void BridgeDomainState_BridgeDomain_Interfaces::MergeFrom(const BridgeDomainState_BridgeDomain_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sw_if_index() != 0) {
    set_sw_if_index(from.sw_if_index());
  }
  if (from.split_horizon_group() != 0) {
    set_split_horizon_group(from.split_horizon_group());
  }
}

void BridgeDomainState_BridgeDomain_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainState_BridgeDomain_Interfaces::CopyFrom(const BridgeDomainState_BridgeDomain_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainState.BridgeDomain.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainState_BridgeDomain_Interfaces::IsInitialized() const {
  return true;
}

void BridgeDomainState_BridgeDomain_Interfaces::Swap(BridgeDomainState_BridgeDomain_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainState_BridgeDomain_Interfaces::InternalSwap(BridgeDomainState_BridgeDomain_Interfaces* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sw_if_index_, other->sw_if_index_);
  swap(split_horizon_group_, other->split_horizon_group_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainState_BridgeDomain_Interfaces::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainState_BridgeDomain::InitAsDefaultInstance() {
  ::l2::_BridgeDomainState_BridgeDomain_default_instance_._instance.get_mutable()->l2_params_ = const_cast< ::l2::BridgeDomainState_BridgeDomain_L2_params*>(
      ::l2::BridgeDomainState_BridgeDomain_L2_params::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainState_BridgeDomain::kIndexFieldNumber;
const int BridgeDomainState_BridgeDomain::kInternalNameFieldNumber;
const int BridgeDomainState_BridgeDomain::kBviInterfaceFieldNumber;
const int BridgeDomainState_BridgeDomain::kBviInterfaceIndexFieldNumber;
const int BridgeDomainState_BridgeDomain::kInterfaceCountFieldNumber;
const int BridgeDomainState_BridgeDomain::kLastChangeFieldNumber;
const int BridgeDomainState_BridgeDomain::kL2ParamsFieldNumber;
const int BridgeDomainState_BridgeDomain::kInterfacesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainState_BridgeDomain::BridgeDomainState_BridgeDomain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainState.BridgeDomain)
}
BridgeDomainState_BridgeDomain::BridgeDomainState_BridgeDomain(const BridgeDomainState_BridgeDomain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interfaces_(from.interfaces_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  internal_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.internal_name().size() > 0) {
    internal_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
  }
  bvi_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bvi_interface().size() > 0) {
    bvi_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bvi_interface_);
  }
  if (from.has_l2_params()) {
    l2_params_ = new ::l2::BridgeDomainState_BridgeDomain_L2_params(*from.l2_params_);
  } else {
    l2_params_ = NULL;
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&interface_count_) -
    reinterpret_cast<char*>(&index_)) + sizeof(interface_count_));
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainState.BridgeDomain)
}

void BridgeDomainState_BridgeDomain::SharedCtor() {
  internal_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bvi_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&l2_params_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interface_count_) -
      reinterpret_cast<char*>(&l2_params_)) + sizeof(interface_count_));
}

BridgeDomainState_BridgeDomain::~BridgeDomainState_BridgeDomain() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainState.BridgeDomain)
  SharedDtor();
}

void BridgeDomainState_BridgeDomain::SharedDtor() {
  internal_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bvi_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete l2_params_;
}

void BridgeDomainState_BridgeDomain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainState_BridgeDomain::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainState_BridgeDomain& BridgeDomainState_BridgeDomain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState_BridgeDomain.base);
  return *internal_default_instance();
}


void BridgeDomainState_BridgeDomain::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainState.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interfaces_.Clear();
  internal_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bvi_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && l2_params_ != NULL) {
    delete l2_params_;
  }
  l2_params_ = NULL;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interface_count_) -
      reinterpret_cast<char*>(&index_)) + sizeof(interface_count_));
  _internal_metadata_.Clear();
}

bool BridgeDomainState_BridgeDomain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainState.BridgeDomain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string internal_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->internal_name().data(), static_cast<int>(this->internal_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainState.BridgeDomain.internal_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bvi_interface = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bvi_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bvi_interface().data(), static_cast<int>(this->bvi_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainState.BridgeDomain.bvi_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bvi_interface_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bvi_interface_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 interface_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interface_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_change = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .l2.BridgeDomainState.BridgeDomain.L2_params l2_params = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_l2_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .l2.BridgeDomainState.BridgeDomain.Interfaces interfaces = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainState.BridgeDomain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainState.BridgeDomain)
  return false;
#undef DO_
}

void BridgeDomainState_BridgeDomain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainState.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // string internal_name = 2;
  if (this->internal_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_name().data(), static_cast<int>(this->internal_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.internal_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->internal_name(), output);
  }

  // string bvi_interface = 3;
  if (this->bvi_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bvi_interface().data(), static_cast<int>(this->bvi_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.bvi_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bvi_interface(), output);
  }

  // uint32 bvi_interface_index = 4;
  if (this->bvi_interface_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bvi_interface_index(), output);
  }

  // uint32 interface_count = 5;
  if (this->interface_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->interface_count(), output);
  }

  // int64 last_change = 6;
  if (this->last_change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->last_change(), output);
  }

  // .l2.BridgeDomainState.BridgeDomain.L2_params l2_params = 100;
  if (this->has_l2_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->_internal_l2_params(), output);
  }

  // repeated .l2.BridgeDomainState.BridgeDomain.Interfaces interfaces = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101,
      this->interfaces(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainState.BridgeDomain)
}

::google::protobuf::uint8* BridgeDomainState_BridgeDomain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainState.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // string internal_name = 2;
  if (this->internal_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->internal_name().data(), static_cast<int>(this->internal_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.internal_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->internal_name(), target);
  }

  // string bvi_interface = 3;
  if (this->bvi_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bvi_interface().data(), static_cast<int>(this->bvi_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainState.BridgeDomain.bvi_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bvi_interface(), target);
  }

  // uint32 bvi_interface_index = 4;
  if (this->bvi_interface_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bvi_interface_index(), target);
  }

  // uint32 interface_count = 5;
  if (this->interface_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->interface_count(), target);
  }

  // int64 last_change = 6;
  if (this->last_change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->last_change(), target);
  }

  // .l2.BridgeDomainState.BridgeDomain.L2_params l2_params = 100;
  if (this->has_l2_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->_internal_l2_params(), deterministic, target);
  }

  // repeated .l2.BridgeDomainState.BridgeDomain.Interfaces interfaces = 101;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->interfaces(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainState.BridgeDomain)
  return target;
}

size_t BridgeDomainState_BridgeDomain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainState.BridgeDomain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomainState.BridgeDomain.Interfaces interfaces = 101;
  {
    unsigned int count = static_cast<unsigned int>(this->interfaces_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interfaces(static_cast<int>(i)));
    }
  }

  // string internal_name = 2;
  if (this->internal_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->internal_name());
  }

  // string bvi_interface = 3;
  if (this->bvi_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bvi_interface());
  }

  // .l2.BridgeDomainState.BridgeDomain.L2_params l2_params = 100;
  if (this->has_l2_params()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *l2_params_);
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 bvi_interface_index = 4;
  if (this->bvi_interface_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bvi_interface_index());
  }

  // int64 last_change = 6;
  if (this->last_change() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_change());
  }

  // uint32 interface_count = 5;
  if (this->interface_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->interface_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainState_BridgeDomain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainState.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainState_BridgeDomain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainState_BridgeDomain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainState.BridgeDomain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainState.BridgeDomain)
    MergeFrom(*source);
  }
}

void BridgeDomainState_BridgeDomain::MergeFrom(const BridgeDomainState_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainState.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interfaces_.MergeFrom(from.interfaces_);
  if (from.internal_name().size() > 0) {

    internal_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_name_);
  }
  if (from.bvi_interface().size() > 0) {

    bvi_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bvi_interface_);
  }
  if (from.has_l2_params()) {
    mutable_l2_params()->::l2::BridgeDomainState_BridgeDomain_L2_params::MergeFrom(from.l2_params());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.bvi_interface_index() != 0) {
    set_bvi_interface_index(from.bvi_interface_index());
  }
  if (from.last_change() != 0) {
    set_last_change(from.last_change());
  }
  if (from.interface_count() != 0) {
    set_interface_count(from.interface_count());
  }
}

void BridgeDomainState_BridgeDomain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainState.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainState_BridgeDomain::CopyFrom(const BridgeDomainState_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainState.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainState_BridgeDomain::IsInitialized() const {
  return true;
}

void BridgeDomainState_BridgeDomain::Swap(BridgeDomainState_BridgeDomain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainState_BridgeDomain::InternalSwap(BridgeDomainState_BridgeDomain* other) {
  using std::swap;
  CastToBase(&interfaces_)->InternalSwap(CastToBase(&other->interfaces_));
  internal_name_.Swap(&other->internal_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bvi_interface_.Swap(&other->bvi_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(l2_params_, other->l2_params_);
  swap(index_, other->index_);
  swap(bvi_interface_index_, other->bvi_interface_index_);
  swap(last_change_, other->last_change_);
  swap(interface_count_, other->interface_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainState_BridgeDomain::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainState::kBridgeDomainsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainState::BridgeDomainState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainState)
}
BridgeDomainState::BridgeDomainState(const BridgeDomainState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bridge_domains_(from.bridge_domains_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainState)
}

void BridgeDomainState::SharedCtor() {
}

BridgeDomainState::~BridgeDomainState() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainState)
  SharedDtor();
}

void BridgeDomainState::SharedDtor() {
}

void BridgeDomainState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainState::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainState& BridgeDomainState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainState.base);
  return *internal_default_instance();
}


void BridgeDomainState::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bridge_domains_.Clear();
  _internal_metadata_.Clear();
}

bool BridgeDomainState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l2.BridgeDomainState.BridgeDomain bridge_domains = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bridge_domains()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainState)
  return false;
#undef DO_
}

void BridgeDomainState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomainState.BridgeDomain bridge_domains = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domains_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100,
      this->bridge_domains(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainState)
}

::google::protobuf::uint8* BridgeDomainState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomainState.BridgeDomain bridge_domains = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domains_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->bridge_domains(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainState)
  return target;
}

size_t BridgeDomainState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomainState.BridgeDomain bridge_domains = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->bridge_domains_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bridge_domains(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainState)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainState)
    MergeFrom(*source);
  }
}

void BridgeDomainState::MergeFrom(const BridgeDomainState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bridge_domains_.MergeFrom(from.bridge_domains_);
}

void BridgeDomainState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainState::CopyFrom(const BridgeDomainState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainState::IsInitialized() const {
  return true;
}

void BridgeDomainState::Swap(BridgeDomainState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainState::InternalSwap(BridgeDomainState* other) {
  using std::swap;
  CastToBase(&bridge_domains_)->InternalSwap(CastToBase(&other->bridge_domains_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainState::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainErrors_BridgeDomain_ErrorData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainErrors_BridgeDomain_ErrorData::kChangeTypeFieldNumber;
const int BridgeDomainErrors_BridgeDomain_ErrorData::kErrorMessageFieldNumber;
const int BridgeDomainErrors_BridgeDomain_ErrorData::kLastChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainErrors_BridgeDomain_ErrorData::BridgeDomainErrors_BridgeDomain_ErrorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain_ErrorData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
}
BridgeDomainErrors_BridgeDomain_ErrorData::BridgeDomainErrors_BridgeDomain_ErrorData(const BridgeDomainErrors_BridgeDomain_ErrorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.change_type().size() > 0) {
    change_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_type_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  last_change_ = from.last_change_;
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
}

void BridgeDomainErrors_BridgeDomain_ErrorData::SharedCtor() {
  change_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_change_ = GOOGLE_LONGLONG(0);
}

BridgeDomainErrors_BridgeDomain_ErrorData::~BridgeDomainErrors_BridgeDomain_ErrorData() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  SharedDtor();
}

void BridgeDomainErrors_BridgeDomain_ErrorData::SharedDtor() {
  change_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomainErrors_BridgeDomain_ErrorData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainErrors_BridgeDomain_ErrorData::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainErrors_BridgeDomain_ErrorData& BridgeDomainErrors_BridgeDomain_ErrorData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain_ErrorData.base);
  return *internal_default_instance();
}


void BridgeDomainErrors_BridgeDomain_ErrorData::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  change_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_change_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool BridgeDomainErrors_BridgeDomain_ErrorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->change_type().data(), static_cast<int>(this->change_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainErrors.BridgeDomain.ErrorData.change_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainErrors.BridgeDomain.ErrorData.error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 last_change = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  return false;
#undef DO_
}

void BridgeDomainErrors_BridgeDomain_ErrorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string change_type = 2;
  if (this->change_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->change_type().data(), static_cast<int>(this->change_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.ErrorData.change_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->change_type(), output);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.ErrorData.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  // int64 last_change = 4;
  if (this->last_change() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->last_change(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
}

::google::protobuf::uint8* BridgeDomainErrors_BridgeDomain_ErrorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string change_type = 2;
  if (this->change_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->change_type().data(), static_cast<int>(this->change_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.ErrorData.change_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->change_type(), target);
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.ErrorData.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  // int64 last_change = 4;
  if (this->last_change() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->last_change(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  return target;
}

size_t BridgeDomainErrors_BridgeDomain_ErrorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string change_type = 2;
  if (this->change_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->change_type());
  }

  // string error_message = 3;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_message());
  }

  // int64 last_change = 4;
  if (this->last_change() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->last_change());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainErrors_BridgeDomain_ErrorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainErrors_BridgeDomain_ErrorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainErrors_BridgeDomain_ErrorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
    MergeFrom(*source);
  }
}

void BridgeDomainErrors_BridgeDomain_ErrorData::MergeFrom(const BridgeDomainErrors_BridgeDomain_ErrorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.change_type().size() > 0) {

    change_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_type_);
  }
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.last_change() != 0) {
    set_last_change(from.last_change());
  }
}

void BridgeDomainErrors_BridgeDomain_ErrorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainErrors_BridgeDomain_ErrorData::CopyFrom(const BridgeDomainErrors_BridgeDomain_ErrorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainErrors.BridgeDomain.ErrorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainErrors_BridgeDomain_ErrorData::IsInitialized() const {
  return true;
}

void BridgeDomainErrors_BridgeDomain_ErrorData::Swap(BridgeDomainErrors_BridgeDomain_ErrorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainErrors_BridgeDomain_ErrorData::InternalSwap(BridgeDomainErrors_BridgeDomain_ErrorData* other) {
  using std::swap;
  change_type_.Swap(&other->change_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_message_.Swap(&other->error_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_change_, other->last_change_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainErrors_BridgeDomain_ErrorData::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainErrors_BridgeDomain::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainErrors_BridgeDomain::kBdNameFieldNumber;
const int BridgeDomainErrors_BridgeDomain::kErrorDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainErrors_BridgeDomain::BridgeDomainErrors_BridgeDomain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainErrors.BridgeDomain)
}
BridgeDomainErrors_BridgeDomain::BridgeDomainErrors_BridgeDomain(const BridgeDomainErrors_BridgeDomain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_data_(from.error_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bd_name().size() > 0) {
    bd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bd_name_);
  }
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainErrors.BridgeDomain)
}

void BridgeDomainErrors_BridgeDomain::SharedCtor() {
  bd_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BridgeDomainErrors_BridgeDomain::~BridgeDomainErrors_BridgeDomain() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainErrors.BridgeDomain)
  SharedDtor();
}

void BridgeDomainErrors_BridgeDomain::SharedDtor() {
  bd_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BridgeDomainErrors_BridgeDomain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainErrors_BridgeDomain::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainErrors_BridgeDomain& BridgeDomainErrors_BridgeDomain::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors_BridgeDomain.base);
  return *internal_default_instance();
}


void BridgeDomainErrors_BridgeDomain::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainErrors.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_data_.Clear();
  bd_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BridgeDomainErrors_BridgeDomain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainErrors.BridgeDomain)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bd_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bd_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bd_name().data(), static_cast<int>(this->bd_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l2.BridgeDomainErrors.BridgeDomain.bd_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .l2.BridgeDomainErrors.BridgeDomain.ErrorData error_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainErrors.BridgeDomain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainErrors.BridgeDomain)
  return false;
#undef DO_
}

void BridgeDomainErrors_BridgeDomain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainErrors.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bd_name = 1;
  if (this->bd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bd_name().data(), static_cast<int>(this->bd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.bd_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bd_name(), output);
  }

  // repeated .l2.BridgeDomainErrors.BridgeDomain.ErrorData error_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->error_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainErrors.BridgeDomain)
}

::google::protobuf::uint8* BridgeDomainErrors_BridgeDomain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainErrors.BridgeDomain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bd_name = 1;
  if (this->bd_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bd_name().data(), static_cast<int>(this->bd_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l2.BridgeDomainErrors.BridgeDomain.bd_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bd_name(), target);
  }

  // repeated .l2.BridgeDomainErrors.BridgeDomain.ErrorData error_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->error_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainErrors.BridgeDomain)
  return target;
}

size_t BridgeDomainErrors_BridgeDomain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainErrors.BridgeDomain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomainErrors.BridgeDomain.ErrorData error_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->error_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_data(static_cast<int>(i)));
    }
  }

  // string bd_name = 1;
  if (this->bd_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bd_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainErrors_BridgeDomain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainErrors.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainErrors_BridgeDomain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainErrors_BridgeDomain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainErrors.BridgeDomain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainErrors.BridgeDomain)
    MergeFrom(*source);
  }
}

void BridgeDomainErrors_BridgeDomain::MergeFrom(const BridgeDomainErrors_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainErrors.BridgeDomain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_data_.MergeFrom(from.error_data_);
  if (from.bd_name().size() > 0) {

    bd_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bd_name_);
  }
}

void BridgeDomainErrors_BridgeDomain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainErrors.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainErrors_BridgeDomain::CopyFrom(const BridgeDomainErrors_BridgeDomain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainErrors.BridgeDomain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainErrors_BridgeDomain::IsInitialized() const {
  return true;
}

void BridgeDomainErrors_BridgeDomain::Swap(BridgeDomainErrors_BridgeDomain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainErrors_BridgeDomain::InternalSwap(BridgeDomainErrors_BridgeDomain* other) {
  using std::swap;
  CastToBase(&error_data_)->InternalSwap(CastToBase(&other->error_data_));
  bd_name_.Swap(&other->bd_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainErrors_BridgeDomain::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BridgeDomainErrors::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BridgeDomainErrors::kBridgeDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BridgeDomainErrors::BridgeDomainErrors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l2.BridgeDomainErrors)
}
BridgeDomainErrors::BridgeDomainErrors(const BridgeDomainErrors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bridge_domain_(from.bridge_domain_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l2.BridgeDomainErrors)
}

void BridgeDomainErrors::SharedCtor() {
}

BridgeDomainErrors::~BridgeDomainErrors() {
  // @@protoc_insertion_point(destructor:l2.BridgeDomainErrors)
  SharedDtor();
}

void BridgeDomainErrors::SharedDtor() {
}

void BridgeDomainErrors::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BridgeDomainErrors::descriptor() {
  ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BridgeDomainErrors& BridgeDomainErrors::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::scc_info_BridgeDomainErrors.base);
  return *internal_default_instance();
}


void BridgeDomainErrors::Clear() {
// @@protoc_insertion_point(message_clear_start:l2.BridgeDomainErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bridge_domain_.Clear();
  _internal_metadata_.Clear();
}

bool BridgeDomainErrors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l2.BridgeDomainErrors)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l2.BridgeDomainErrors.BridgeDomain bridge_domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bridge_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l2.BridgeDomainErrors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l2.BridgeDomainErrors)
  return false;
#undef DO_
}

void BridgeDomainErrors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l2.BridgeDomainErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomainErrors.BridgeDomain bridge_domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domain_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bridge_domain(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l2.BridgeDomainErrors)
}

::google::protobuf::uint8* BridgeDomainErrors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l2.BridgeDomainErrors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l2.BridgeDomainErrors.BridgeDomain bridge_domain = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bridge_domain_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bridge_domain(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l2.BridgeDomainErrors)
  return target;
}

size_t BridgeDomainErrors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l2.BridgeDomainErrors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l2.BridgeDomainErrors.BridgeDomain bridge_domain = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bridge_domain_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bridge_domain(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BridgeDomainErrors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l2.BridgeDomainErrors)
  GOOGLE_DCHECK_NE(&from, this);
  const BridgeDomainErrors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BridgeDomainErrors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l2.BridgeDomainErrors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l2.BridgeDomainErrors)
    MergeFrom(*source);
  }
}

void BridgeDomainErrors::MergeFrom(const BridgeDomainErrors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l2.BridgeDomainErrors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bridge_domain_.MergeFrom(from.bridge_domain_);
}

void BridgeDomainErrors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l2.BridgeDomainErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BridgeDomainErrors::CopyFrom(const BridgeDomainErrors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l2.BridgeDomainErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BridgeDomainErrors::IsInitialized() const {
  return true;
}

void BridgeDomainErrors::Swap(BridgeDomainErrors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BridgeDomainErrors::InternalSwap(BridgeDomainErrors* other) {
  using std::swap;
  CastToBase(&bridge_domain_)->InternalSwap(CastToBase(&other->bridge_domain_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BridgeDomainErrors::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl2_2fl2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace l2
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomains_BridgeDomain_Interfaces* Arena::CreateMaybeMessage< ::l2::BridgeDomains_BridgeDomain_Interfaces >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomains_BridgeDomain_Interfaces >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry* Arena::CreateMaybeMessage< ::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomains_BridgeDomain_ArpTerminationEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomains_BridgeDomain* Arena::CreateMaybeMessage< ::l2::BridgeDomains_BridgeDomain >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomains_BridgeDomain >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomains* Arena::CreateMaybeMessage< ::l2::BridgeDomains >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomains >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::FibTable_FibEntry* Arena::CreateMaybeMessage< ::l2::FibTable_FibEntry >(Arena* arena) {
  return Arena::CreateInternal< ::l2::FibTable_FibEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::FibTable* Arena::CreateMaybeMessage< ::l2::FibTable >(Arena* arena) {
  return Arena::CreateInternal< ::l2::FibTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::XConnectPairs_XConnectPair* Arena::CreateMaybeMessage< ::l2::XConnectPairs_XConnectPair >(Arena* arena) {
  return Arena::CreateInternal< ::l2::XConnectPairs_XConnectPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::XConnectPairs* Arena::CreateMaybeMessage< ::l2::XConnectPairs >(Arena* arena) {
  return Arena::CreateInternal< ::l2::XConnectPairs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainState_BridgeDomain_L2_params* Arena::CreateMaybeMessage< ::l2::BridgeDomainState_BridgeDomain_L2_params >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainState_BridgeDomain_L2_params >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainState_BridgeDomain_Interfaces* Arena::CreateMaybeMessage< ::l2::BridgeDomainState_BridgeDomain_Interfaces >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainState_BridgeDomain_Interfaces >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainState_BridgeDomain* Arena::CreateMaybeMessage< ::l2::BridgeDomainState_BridgeDomain >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainState_BridgeDomain >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainState* Arena::CreateMaybeMessage< ::l2::BridgeDomainState >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainErrors_BridgeDomain_ErrorData* Arena::CreateMaybeMessage< ::l2::BridgeDomainErrors_BridgeDomain_ErrorData >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainErrors_BridgeDomain_ErrorData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainErrors_BridgeDomain* Arena::CreateMaybeMessage< ::l2::BridgeDomainErrors_BridgeDomain >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainErrors_BridgeDomain >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l2::BridgeDomainErrors* Arena::CreateMaybeMessage< ::l2::BridgeDomainErrors >(Arena* arena) {
  return Arena::CreateInternal< ::l2::BridgeDomainErrors >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
