// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/interfaces/interfaces.proto

#ifndef PROTOBUF_INCLUDED_vpp_2fmodel_2finterfaces_2finterfaces_2eproto
#define PROTOBUF_INCLUDED_vpp_2fmodel_2finterfaces_2finterfaces_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto 

namespace protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto
namespace interfaces {
class InterfaceErrors;
class InterfaceErrorsDefaultTypeInternal;
extern InterfaceErrorsDefaultTypeInternal _InterfaceErrors_default_instance_;
class InterfaceErrors_Interface;
class InterfaceErrors_InterfaceDefaultTypeInternal;
extern InterfaceErrors_InterfaceDefaultTypeInternal _InterfaceErrors_Interface_default_instance_;
class InterfaceErrors_Interface_ErrorData;
class InterfaceErrors_Interface_ErrorDataDefaultTypeInternal;
extern InterfaceErrors_Interface_ErrorDataDefaultTypeInternal _InterfaceErrors_Interface_ErrorData_default_instance_;
class InterfaceNotification;
class InterfaceNotificationDefaultTypeInternal;
extern InterfaceNotificationDefaultTypeInternal _InterfaceNotification_default_instance_;
class Interfaces;
class InterfacesDefaultTypeInternal;
extern InterfacesDefaultTypeInternal _Interfaces_default_instance_;
class InterfacesState;
class InterfacesStateDefaultTypeInternal;
extern InterfacesStateDefaultTypeInternal _InterfacesState_default_instance_;
class InterfacesState_Interface;
class InterfacesState_InterfaceDefaultTypeInternal;
extern InterfacesState_InterfaceDefaultTypeInternal _InterfacesState_Interface_default_instance_;
class InterfacesState_Interface_Statistics;
class InterfacesState_Interface_StatisticsDefaultTypeInternal;
extern InterfacesState_Interface_StatisticsDefaultTypeInternal _InterfacesState_Interface_Statistics_default_instance_;
class Interfaces_Interface;
class Interfaces_InterfaceDefaultTypeInternal;
extern Interfaces_InterfaceDefaultTypeInternal _Interfaces_Interface_default_instance_;
class Interfaces_Interface_Afpacket;
class Interfaces_Interface_AfpacketDefaultTypeInternal;
extern Interfaces_Interface_AfpacketDefaultTypeInternal _Interfaces_Interface_Afpacket_default_instance_;
class Interfaces_Interface_Memif;
class Interfaces_Interface_MemifDefaultTypeInternal;
extern Interfaces_Interface_MemifDefaultTypeInternal _Interfaces_Interface_Memif_default_instance_;
class Interfaces_Interface_RxModeSettings;
class Interfaces_Interface_RxModeSettingsDefaultTypeInternal;
extern Interfaces_Interface_RxModeSettingsDefaultTypeInternal _Interfaces_Interface_RxModeSettings_default_instance_;
class Interfaces_Interface_RxPlacementSettings;
class Interfaces_Interface_RxPlacementSettingsDefaultTypeInternal;
extern Interfaces_Interface_RxPlacementSettingsDefaultTypeInternal _Interfaces_Interface_RxPlacementSettings_default_instance_;
class Interfaces_Interface_Tap;
class Interfaces_Interface_TapDefaultTypeInternal;
extern Interfaces_Interface_TapDefaultTypeInternal _Interfaces_Interface_Tap_default_instance_;
class Interfaces_Interface_Unnumbered;
class Interfaces_Interface_UnnumberedDefaultTypeInternal;
extern Interfaces_Interface_UnnumberedDefaultTypeInternal _Interfaces_Interface_Unnumbered_default_instance_;
class Interfaces_Interface_VmxNet3;
class Interfaces_Interface_VmxNet3DefaultTypeInternal;
extern Interfaces_Interface_VmxNet3DefaultTypeInternal _Interfaces_Interface_VmxNet3_default_instance_;
class Interfaces_Interface_Vxlan;
class Interfaces_Interface_VxlanDefaultTypeInternal;
extern Interfaces_Interface_VxlanDefaultTypeInternal _Interfaces_Interface_Vxlan_default_instance_;
}  // namespace interfaces
namespace google {
namespace protobuf {
template<> ::interfaces::InterfaceErrors* Arena::CreateMaybeMessage<::interfaces::InterfaceErrors>(Arena*);
template<> ::interfaces::InterfaceErrors_Interface* Arena::CreateMaybeMessage<::interfaces::InterfaceErrors_Interface>(Arena*);
template<> ::interfaces::InterfaceErrors_Interface_ErrorData* Arena::CreateMaybeMessage<::interfaces::InterfaceErrors_Interface_ErrorData>(Arena*);
template<> ::interfaces::InterfaceNotification* Arena::CreateMaybeMessage<::interfaces::InterfaceNotification>(Arena*);
template<> ::interfaces::Interfaces* Arena::CreateMaybeMessage<::interfaces::Interfaces>(Arena*);
template<> ::interfaces::InterfacesState* Arena::CreateMaybeMessage<::interfaces::InterfacesState>(Arena*);
template<> ::interfaces::InterfacesState_Interface* Arena::CreateMaybeMessage<::interfaces::InterfacesState_Interface>(Arena*);
template<> ::interfaces::InterfacesState_Interface_Statistics* Arena::CreateMaybeMessage<::interfaces::InterfacesState_Interface_Statistics>(Arena*);
template<> ::interfaces::Interfaces_Interface* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface>(Arena*);
template<> ::interfaces::Interfaces_Interface_Afpacket* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_Afpacket>(Arena*);
template<> ::interfaces::Interfaces_Interface_Memif* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_Memif>(Arena*);
template<> ::interfaces::Interfaces_Interface_RxModeSettings* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_RxModeSettings>(Arena*);
template<> ::interfaces::Interfaces_Interface_RxPlacementSettings* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_RxPlacementSettings>(Arena*);
template<> ::interfaces::Interfaces_Interface_Tap* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_Tap>(Arena*);
template<> ::interfaces::Interfaces_Interface_Unnumbered* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_Unnumbered>(Arena*);
template<> ::interfaces::Interfaces_Interface_VmxNet3* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_VmxNet3>(Arena*);
template<> ::interfaces::Interfaces_Interface_Vxlan* Arena::CreateMaybeMessage<::interfaces::Interfaces_Interface_Vxlan>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace interfaces {

enum Interfaces_Interface_Memif_MemifMode {
  Interfaces_Interface_Memif_MemifMode_ETHERNET = 0,
  Interfaces_Interface_Memif_MemifMode_IP = 1,
  Interfaces_Interface_Memif_MemifMode_PUNT_INJECT = 2,
  Interfaces_Interface_Memif_MemifMode_Interfaces_Interface_Memif_MemifMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Interfaces_Interface_Memif_MemifMode_Interfaces_Interface_Memif_MemifMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Interfaces_Interface_Memif_MemifMode_IsValid(int value);
const Interfaces_Interface_Memif_MemifMode Interfaces_Interface_Memif_MemifMode_MemifMode_MIN = Interfaces_Interface_Memif_MemifMode_ETHERNET;
const Interfaces_Interface_Memif_MemifMode Interfaces_Interface_Memif_MemifMode_MemifMode_MAX = Interfaces_Interface_Memif_MemifMode_PUNT_INJECT;
const int Interfaces_Interface_Memif_MemifMode_MemifMode_ARRAYSIZE = Interfaces_Interface_Memif_MemifMode_MemifMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Interfaces_Interface_Memif_MemifMode_descriptor();
inline const ::std::string& Interfaces_Interface_Memif_MemifMode_Name(Interfaces_Interface_Memif_MemifMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Interfaces_Interface_Memif_MemifMode_descriptor(), value);
}
inline bool Interfaces_Interface_Memif_MemifMode_Parse(
    const ::std::string& name, Interfaces_Interface_Memif_MemifMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Interfaces_Interface_Memif_MemifMode>(
    Interfaces_Interface_Memif_MemifMode_descriptor(), name, value);
}
enum InterfacesState_Interface_Status {
  InterfacesState_Interface_Status_UNKNOWN_STATUS = 0,
  InterfacesState_Interface_Status_UP = 1,
  InterfacesState_Interface_Status_DOWN = 2,
  InterfacesState_Interface_Status_DELETED = 3,
  InterfacesState_Interface_Status_InterfacesState_Interface_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterfacesState_Interface_Status_InterfacesState_Interface_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterfacesState_Interface_Status_IsValid(int value);
const InterfacesState_Interface_Status InterfacesState_Interface_Status_Status_MIN = InterfacesState_Interface_Status_UNKNOWN_STATUS;
const InterfacesState_Interface_Status InterfacesState_Interface_Status_Status_MAX = InterfacesState_Interface_Status_DELETED;
const int InterfacesState_Interface_Status_Status_ARRAYSIZE = InterfacesState_Interface_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterfacesState_Interface_Status_descriptor();
inline const ::std::string& InterfacesState_Interface_Status_Name(InterfacesState_Interface_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterfacesState_Interface_Status_descriptor(), value);
}
inline bool InterfacesState_Interface_Status_Parse(
    const ::std::string& name, InterfacesState_Interface_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterfacesState_Interface_Status>(
    InterfacesState_Interface_Status_descriptor(), name, value);
}
enum InterfacesState_Interface_Duplex {
  InterfacesState_Interface_Duplex_UNKNOWN_DUPLEX = 0,
  InterfacesState_Interface_Duplex_HALF = 1,
  InterfacesState_Interface_Duplex_FULL = 2,
  InterfacesState_Interface_Duplex_InterfacesState_Interface_Duplex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterfacesState_Interface_Duplex_InterfacesState_Interface_Duplex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterfacesState_Interface_Duplex_IsValid(int value);
const InterfacesState_Interface_Duplex InterfacesState_Interface_Duplex_Duplex_MIN = InterfacesState_Interface_Duplex_UNKNOWN_DUPLEX;
const InterfacesState_Interface_Duplex InterfacesState_Interface_Duplex_Duplex_MAX = InterfacesState_Interface_Duplex_FULL;
const int InterfacesState_Interface_Duplex_Duplex_ARRAYSIZE = InterfacesState_Interface_Duplex_Duplex_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterfacesState_Interface_Duplex_descriptor();
inline const ::std::string& InterfacesState_Interface_Duplex_Name(InterfacesState_Interface_Duplex value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterfacesState_Interface_Duplex_descriptor(), value);
}
inline bool InterfacesState_Interface_Duplex_Parse(
    const ::std::string& name, InterfacesState_Interface_Duplex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterfacesState_Interface_Duplex>(
    InterfacesState_Interface_Duplex_descriptor(), name, value);
}
enum InterfaceNotification_NotifType {
  InterfaceNotification_NotifType_UNKNOWN = 0,
  InterfaceNotification_NotifType_UPDOWN = 1,
  InterfaceNotification_NotifType_COUNTERS = 2,
  InterfaceNotification_NotifType_InterfaceNotification_NotifType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterfaceNotification_NotifType_InterfaceNotification_NotifType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterfaceNotification_NotifType_IsValid(int value);
const InterfaceNotification_NotifType InterfaceNotification_NotifType_NotifType_MIN = InterfaceNotification_NotifType_UNKNOWN;
const InterfaceNotification_NotifType InterfaceNotification_NotifType_NotifType_MAX = InterfaceNotification_NotifType_COUNTERS;
const int InterfaceNotification_NotifType_NotifType_ARRAYSIZE = InterfaceNotification_NotifType_NotifType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterfaceNotification_NotifType_descriptor();
inline const ::std::string& InterfaceNotification_NotifType_Name(InterfaceNotification_NotifType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterfaceNotification_NotifType_descriptor(), value);
}
inline bool InterfaceNotification_NotifType_Parse(
    const ::std::string& name, InterfaceNotification_NotifType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterfaceNotification_NotifType>(
    InterfaceNotification_NotifType_descriptor(), name, value);
}
enum InterfaceType {
  SOFTWARE_LOOPBACK = 0,
  ETHERNET_CSMACD = 1,
  MEMORY_INTERFACE = 2,
  TAP_INTERFACE = 3,
  AF_PACKET_INTERFACE = 4,
  VXLAN_TUNNEL = 5,
  IPSEC_TUNNEL = 6,
  VMXNET3_INTERFACE = 7,
  InterfaceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterfaceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterfaceType_IsValid(int value);
const InterfaceType InterfaceType_MIN = SOFTWARE_LOOPBACK;
const InterfaceType InterfaceType_MAX = VMXNET3_INTERFACE;
const int InterfaceType_ARRAYSIZE = InterfaceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterfaceType_descriptor();
inline const ::std::string& InterfaceType_Name(InterfaceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterfaceType_descriptor(), value);
}
inline bool InterfaceType_Parse(
    const ::std::string& name, InterfaceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterfaceType>(
    InterfaceType_descriptor(), name, value);
}
enum RxModeType {
  UNKNOWN = 0,
  POLLING = 1,
  INTERRUPT = 2,
  ADAPTIVE = 3,
  DEFAULT = 4,
  RxModeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RxModeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RxModeType_IsValid(int value);
const RxModeType RxModeType_MIN = UNKNOWN;
const RxModeType RxModeType_MAX = DEFAULT;
const int RxModeType_ARRAYSIZE = RxModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RxModeType_descriptor();
inline const ::std::string& RxModeType_Name(RxModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RxModeType_descriptor(), value);
}
inline bool RxModeType_Parse(
    const ::std::string& name, RxModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RxModeType>(
    RxModeType_descriptor(), name, value);
}
// ===================================================================

class Interfaces_Interface_Unnumbered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.Unnumbered) */ {
 public:
  Interfaces_Interface_Unnumbered();
  virtual ~Interfaces_Interface_Unnumbered();

  Interfaces_Interface_Unnumbered(const Interfaces_Interface_Unnumbered& from);

  inline Interfaces_Interface_Unnumbered& operator=(const Interfaces_Interface_Unnumbered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_Unnumbered(Interfaces_Interface_Unnumbered&& from) noexcept
    : Interfaces_Interface_Unnumbered() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_Unnumbered& operator=(Interfaces_Interface_Unnumbered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_Unnumbered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_Unnumbered* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_Unnumbered*>(
               &_Interfaces_Interface_Unnumbered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Interfaces_Interface_Unnumbered* other);
  friend void swap(Interfaces_Interface_Unnumbered& a, Interfaces_Interface_Unnumbered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_Unnumbered* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_Unnumbered>(NULL);
  }

  Interfaces_Interface_Unnumbered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_Unnumbered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_Unnumbered& from);
  void MergeFrom(const Interfaces_Interface_Unnumbered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_Unnumbered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string interface_with_ip = 2;
  void clear_interface_with_ip();
  static const int kInterfaceWithIpFieldNumber = 2;
  const ::std::string& interface_with_ip() const;
  void set_interface_with_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_interface_with_ip(::std::string&& value);
  #endif
  void set_interface_with_ip(const char* value);
  void set_interface_with_ip(const char* value, size_t size);
  ::std::string* mutable_interface_with_ip();
  ::std::string* release_interface_with_ip();
  void set_allocated_interface_with_ip(::std::string* interface_with_ip);

  // bool is_unnumbered = 1;
  void clear_is_unnumbered();
  static const int kIsUnnumberedFieldNumber = 1;
  bool is_unnumbered() const;
  void set_is_unnumbered(bool value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.Unnumbered)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr interface_with_ip_;
  bool is_unnumbered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_RxModeSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.RxModeSettings) */ {
 public:
  Interfaces_Interface_RxModeSettings();
  virtual ~Interfaces_Interface_RxModeSettings();

  Interfaces_Interface_RxModeSettings(const Interfaces_Interface_RxModeSettings& from);

  inline Interfaces_Interface_RxModeSettings& operator=(const Interfaces_Interface_RxModeSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_RxModeSettings(Interfaces_Interface_RxModeSettings&& from) noexcept
    : Interfaces_Interface_RxModeSettings() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_RxModeSettings& operator=(Interfaces_Interface_RxModeSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_RxModeSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_RxModeSettings* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_RxModeSettings*>(
               &_Interfaces_Interface_RxModeSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Interfaces_Interface_RxModeSettings* other);
  friend void swap(Interfaces_Interface_RxModeSettings& a, Interfaces_Interface_RxModeSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_RxModeSettings* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_RxModeSettings>(NULL);
  }

  Interfaces_Interface_RxModeSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_RxModeSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_RxModeSettings& from);
  void MergeFrom(const Interfaces_Interface_RxModeSettings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_RxModeSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .interfaces.RxModeType rx_mode = 1;
  void clear_rx_mode();
  static const int kRxModeFieldNumber = 1;
  ::interfaces::RxModeType rx_mode() const;
  void set_rx_mode(::interfaces::RxModeType value);

  // uint32 queue_id = 2;
  void clear_queue_id();
  static const int kQueueIdFieldNumber = 2;
  ::google::protobuf::uint32 queue_id() const;
  void set_queue_id(::google::protobuf::uint32 value);

  // uint32 queue_id_valid = 3;
  void clear_queue_id_valid();
  static const int kQueueIdValidFieldNumber = 3;
  ::google::protobuf::uint32 queue_id_valid() const;
  void set_queue_id_valid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.RxModeSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int rx_mode_;
  ::google::protobuf::uint32 queue_id_;
  ::google::protobuf::uint32 queue_id_valid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_RxPlacementSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.RxPlacementSettings) */ {
 public:
  Interfaces_Interface_RxPlacementSettings();
  virtual ~Interfaces_Interface_RxPlacementSettings();

  Interfaces_Interface_RxPlacementSettings(const Interfaces_Interface_RxPlacementSettings& from);

  inline Interfaces_Interface_RxPlacementSettings& operator=(const Interfaces_Interface_RxPlacementSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_RxPlacementSettings(Interfaces_Interface_RxPlacementSettings&& from) noexcept
    : Interfaces_Interface_RxPlacementSettings() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_RxPlacementSettings& operator=(Interfaces_Interface_RxPlacementSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_RxPlacementSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_RxPlacementSettings* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_RxPlacementSettings*>(
               &_Interfaces_Interface_RxPlacementSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Interfaces_Interface_RxPlacementSettings* other);
  friend void swap(Interfaces_Interface_RxPlacementSettings& a, Interfaces_Interface_RxPlacementSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_RxPlacementSettings* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_RxPlacementSettings>(NULL);
  }

  Interfaces_Interface_RxPlacementSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_RxPlacementSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_RxPlacementSettings& from);
  void MergeFrom(const Interfaces_Interface_RxPlacementSettings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_RxPlacementSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 queue = 1;
  void clear_queue();
  static const int kQueueFieldNumber = 1;
  ::google::protobuf::uint32 queue() const;
  void set_queue(::google::protobuf::uint32 value);

  // uint32 worker = 2;
  void clear_worker();
  static const int kWorkerFieldNumber = 2;
  ::google::protobuf::uint32 worker() const;
  void set_worker(::google::protobuf::uint32 value);

  // bool is_main = 3;
  void clear_is_main();
  static const int kIsMainFieldNumber = 3;
  bool is_main() const;
  void set_is_main(bool value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.RxPlacementSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 queue_;
  ::google::protobuf::uint32 worker_;
  bool is_main_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_Memif : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.Memif) */ {
 public:
  Interfaces_Interface_Memif();
  virtual ~Interfaces_Interface_Memif();

  Interfaces_Interface_Memif(const Interfaces_Interface_Memif& from);

  inline Interfaces_Interface_Memif& operator=(const Interfaces_Interface_Memif& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_Memif(Interfaces_Interface_Memif&& from) noexcept
    : Interfaces_Interface_Memif() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_Memif& operator=(Interfaces_Interface_Memif&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_Memif& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_Memif* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_Memif*>(
               &_Interfaces_Interface_Memif_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Interfaces_Interface_Memif* other);
  friend void swap(Interfaces_Interface_Memif& a, Interfaces_Interface_Memif& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_Memif* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_Memif>(NULL);
  }

  Interfaces_Interface_Memif* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_Memif>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_Memif& from);
  void MergeFrom(const Interfaces_Interface_Memif& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_Memif* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Interfaces_Interface_Memif_MemifMode MemifMode;
  static const MemifMode ETHERNET =
    Interfaces_Interface_Memif_MemifMode_ETHERNET;
  static const MemifMode IP =
    Interfaces_Interface_Memif_MemifMode_IP;
  static const MemifMode PUNT_INJECT =
    Interfaces_Interface_Memif_MemifMode_PUNT_INJECT;
  static inline bool MemifMode_IsValid(int value) {
    return Interfaces_Interface_Memif_MemifMode_IsValid(value);
  }
  static const MemifMode MemifMode_MIN =
    Interfaces_Interface_Memif_MemifMode_MemifMode_MIN;
  static const MemifMode MemifMode_MAX =
    Interfaces_Interface_Memif_MemifMode_MemifMode_MAX;
  static const int MemifMode_ARRAYSIZE =
    Interfaces_Interface_Memif_MemifMode_MemifMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MemifMode_descriptor() {
    return Interfaces_Interface_Memif_MemifMode_descriptor();
  }
  static inline const ::std::string& MemifMode_Name(MemifMode value) {
    return Interfaces_Interface_Memif_MemifMode_Name(value);
  }
  static inline bool MemifMode_Parse(const ::std::string& name,
      MemifMode* value) {
    return Interfaces_Interface_Memif_MemifMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string socket_filename = 4;
  void clear_socket_filename();
  static const int kSocketFilenameFieldNumber = 4;
  const ::std::string& socket_filename() const;
  void set_socket_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_socket_filename(::std::string&& value);
  #endif
  void set_socket_filename(const char* value);
  void set_socket_filename(const char* value, size_t size);
  ::std::string* mutable_socket_filename();
  ::std::string* release_socket_filename();
  void set_allocated_socket_filename(::std::string* socket_filename);

  // string secret = 5;
  void clear_secret();
  static const int kSecretFieldNumber = 5;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // bool master = 1;
  void clear_master();
  static const int kMasterFieldNumber = 1;
  bool master() const;
  void set_master(bool value);

  // .interfaces.Interfaces.Interface.Memif.MemifMode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::interfaces::Interfaces_Interface_Memif_MemifMode mode() const;
  void set_mode(::interfaces::Interfaces_Interface_Memif_MemifMode value);

  // uint32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 ring_size = 6;
  void clear_ring_size();
  static const int kRingSizeFieldNumber = 6;
  ::google::protobuf::uint32 ring_size() const;
  void set_ring_size(::google::protobuf::uint32 value);

  // uint32 buffer_size = 7;
  void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 7;
  ::google::protobuf::uint32 buffer_size() const;
  void set_buffer_size(::google::protobuf::uint32 value);

  // uint32 rx_queues = 8;
  void clear_rx_queues();
  static const int kRxQueuesFieldNumber = 8;
  ::google::protobuf::uint32 rx_queues() const;
  void set_rx_queues(::google::protobuf::uint32 value);

  // uint32 tx_queues = 9;
  void clear_tx_queues();
  static const int kTxQueuesFieldNumber = 9;
  ::google::protobuf::uint32 tx_queues() const;
  void set_tx_queues(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.Memif)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr socket_filename_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  bool master_;
  int mode_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ring_size_;
  ::google::protobuf::uint32 buffer_size_;
  ::google::protobuf::uint32 rx_queues_;
  ::google::protobuf::uint32 tx_queues_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_Vxlan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.Vxlan) */ {
 public:
  Interfaces_Interface_Vxlan();
  virtual ~Interfaces_Interface_Vxlan();

  Interfaces_Interface_Vxlan(const Interfaces_Interface_Vxlan& from);

  inline Interfaces_Interface_Vxlan& operator=(const Interfaces_Interface_Vxlan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_Vxlan(Interfaces_Interface_Vxlan&& from) noexcept
    : Interfaces_Interface_Vxlan() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_Vxlan& operator=(Interfaces_Interface_Vxlan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_Vxlan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_Vxlan* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_Vxlan*>(
               &_Interfaces_Interface_Vxlan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Interfaces_Interface_Vxlan* other);
  friend void swap(Interfaces_Interface_Vxlan& a, Interfaces_Interface_Vxlan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_Vxlan* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_Vxlan>(NULL);
  }

  Interfaces_Interface_Vxlan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_Vxlan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_Vxlan& from);
  void MergeFrom(const Interfaces_Interface_Vxlan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_Vxlan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string src_address = 1;
  void clear_src_address();
  static const int kSrcAddressFieldNumber = 1;
  const ::std::string& src_address() const;
  void set_src_address(const ::std::string& value);
  #if LANG_CXX11
  void set_src_address(::std::string&& value);
  #endif
  void set_src_address(const char* value);
  void set_src_address(const char* value, size_t size);
  ::std::string* mutable_src_address();
  ::std::string* release_src_address();
  void set_allocated_src_address(::std::string* src_address);

  // string dst_address = 2;
  void clear_dst_address();
  static const int kDstAddressFieldNumber = 2;
  const ::std::string& dst_address() const;
  void set_dst_address(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_address(::std::string&& value);
  #endif
  void set_dst_address(const char* value);
  void set_dst_address(const char* value, size_t size);
  ::std::string* mutable_dst_address();
  ::std::string* release_dst_address();
  void set_allocated_dst_address(::std::string* dst_address);

  // string multicast = 4;
  void clear_multicast();
  static const int kMulticastFieldNumber = 4;
  const ::std::string& multicast() const;
  void set_multicast(const ::std::string& value);
  #if LANG_CXX11
  void set_multicast(::std::string&& value);
  #endif
  void set_multicast(const char* value);
  void set_multicast(const char* value, size_t size);
  ::std::string* mutable_multicast();
  ::std::string* release_multicast();
  void set_allocated_multicast(::std::string* multicast);

  // uint32 vni = 3;
  void clear_vni();
  static const int kVniFieldNumber = 3;
  ::google::protobuf::uint32 vni() const;
  void set_vni(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.Vxlan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_address_;
  ::google::protobuf::internal::ArenaStringPtr dst_address_;
  ::google::protobuf::internal::ArenaStringPtr multicast_;
  ::google::protobuf::uint32 vni_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_Afpacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.Afpacket) */ {
 public:
  Interfaces_Interface_Afpacket();
  virtual ~Interfaces_Interface_Afpacket();

  Interfaces_Interface_Afpacket(const Interfaces_Interface_Afpacket& from);

  inline Interfaces_Interface_Afpacket& operator=(const Interfaces_Interface_Afpacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_Afpacket(Interfaces_Interface_Afpacket&& from) noexcept
    : Interfaces_Interface_Afpacket() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_Afpacket& operator=(Interfaces_Interface_Afpacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_Afpacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_Afpacket* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_Afpacket*>(
               &_Interfaces_Interface_Afpacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Interfaces_Interface_Afpacket* other);
  friend void swap(Interfaces_Interface_Afpacket& a, Interfaces_Interface_Afpacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_Afpacket* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_Afpacket>(NULL);
  }

  Interfaces_Interface_Afpacket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_Afpacket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_Afpacket& from);
  void MergeFrom(const Interfaces_Interface_Afpacket& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_Afpacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host_if_name = 1;
  void clear_host_if_name();
  static const int kHostIfNameFieldNumber = 1;
  const ::std::string& host_if_name() const;
  void set_host_if_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_if_name(::std::string&& value);
  #endif
  void set_host_if_name(const char* value);
  void set_host_if_name(const char* value, size_t size);
  ::std::string* mutable_host_if_name();
  ::std::string* release_host_if_name();
  void set_allocated_host_if_name(::std::string* host_if_name);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.Afpacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_if_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_Tap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.Tap) */ {
 public:
  Interfaces_Interface_Tap();
  virtual ~Interfaces_Interface_Tap();

  Interfaces_Interface_Tap(const Interfaces_Interface_Tap& from);

  inline Interfaces_Interface_Tap& operator=(const Interfaces_Interface_Tap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_Tap(Interfaces_Interface_Tap&& from) noexcept
    : Interfaces_Interface_Tap() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_Tap& operator=(Interfaces_Interface_Tap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_Tap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_Tap* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_Tap*>(
               &_Interfaces_Interface_Tap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Interfaces_Interface_Tap* other);
  friend void swap(Interfaces_Interface_Tap& a, Interfaces_Interface_Tap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_Tap* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_Tap>(NULL);
  }

  Interfaces_Interface_Tap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_Tap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_Tap& from);
  void MergeFrom(const Interfaces_Interface_Tap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_Tap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host_if_name = 2;
  void clear_host_if_name();
  static const int kHostIfNameFieldNumber = 2;
  const ::std::string& host_if_name() const;
  void set_host_if_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_if_name(::std::string&& value);
  #endif
  void set_host_if_name(const char* value);
  void set_host_if_name(const char* value, size_t size);
  ::std::string* mutable_host_if_name();
  ::std::string* release_host_if_name();
  void set_allocated_host_if_name(::std::string* host_if_name);

  // string namespace = 3;
  void clear_namespace_();
  static const int kNamespaceFieldNumber = 3;
  const ::std::string& namespace_() const;
  void set_namespace_(const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_(::std::string&& value);
  #endif
  void set_namespace_(const char* value);
  void set_namespace_(const char* value, size_t size);
  ::std::string* mutable_namespace_();
  ::std::string* release_namespace_();
  void set_allocated_namespace_(::std::string* namespace_);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 rx_ring_size = 4;
  void clear_rx_ring_size();
  static const int kRxRingSizeFieldNumber = 4;
  ::google::protobuf::uint32 rx_ring_size() const;
  void set_rx_ring_size(::google::protobuf::uint32 value);

  // uint32 tx_ring_size = 5;
  void clear_tx_ring_size();
  static const int kTxRingSizeFieldNumber = 5;
  ::google::protobuf::uint32 tx_ring_size() const;
  void set_tx_ring_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.Tap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_if_name_;
  ::google::protobuf::internal::ArenaStringPtr namespace__;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 rx_ring_size_;
  ::google::protobuf::uint32 tx_ring_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface_VmxNet3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface.VmxNet3) */ {
 public:
  Interfaces_Interface_VmxNet3();
  virtual ~Interfaces_Interface_VmxNet3();

  Interfaces_Interface_VmxNet3(const Interfaces_Interface_VmxNet3& from);

  inline Interfaces_Interface_VmxNet3& operator=(const Interfaces_Interface_VmxNet3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface_VmxNet3(Interfaces_Interface_VmxNet3&& from) noexcept
    : Interfaces_Interface_VmxNet3() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface_VmxNet3& operator=(Interfaces_Interface_VmxNet3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface_VmxNet3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface_VmxNet3* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface_VmxNet3*>(
               &_Interfaces_Interface_VmxNet3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Interfaces_Interface_VmxNet3* other);
  friend void swap(Interfaces_Interface_VmxNet3& a, Interfaces_Interface_VmxNet3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface_VmxNet3* New() const final {
    return CreateMaybeMessage<Interfaces_Interface_VmxNet3>(NULL);
  }

  Interfaces_Interface_VmxNet3* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface_VmxNet3>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface_VmxNet3& from);
  void MergeFrom(const Interfaces_Interface_VmxNet3& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface_VmxNet3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool enable_elog = 2;
  void clear_enable_elog();
  static const int kEnableElogFieldNumber = 2;
  bool enable_elog() const;
  void set_enable_elog(bool value);

  // uint32 rxq_size = 3;
  void clear_rxq_size();
  static const int kRxqSizeFieldNumber = 3;
  ::google::protobuf::uint32 rxq_size() const;
  void set_rxq_size(::google::protobuf::uint32 value);

  // uint32 txq_size = 4;
  void clear_txq_size();
  static const int kTxqSizeFieldNumber = 4;
  ::google::protobuf::uint32 txq_size() const;
  void set_txq_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface.VmxNet3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool enable_elog_;
  ::google::protobuf::uint32 rxq_size_;
  ::google::protobuf::uint32 txq_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces.Interface) */ {
 public:
  Interfaces_Interface();
  virtual ~Interfaces_Interface();

  Interfaces_Interface(const Interfaces_Interface& from);

  inline Interfaces_Interface& operator=(const Interfaces_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces_Interface(Interfaces_Interface&& from) noexcept
    : Interfaces_Interface() {
    *this = ::std::move(from);
  }

  inline Interfaces_Interface& operator=(Interfaces_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces_Interface* internal_default_instance() {
    return reinterpret_cast<const Interfaces_Interface*>(
               &_Interfaces_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Interfaces_Interface* other);
  friend void swap(Interfaces_Interface& a, Interfaces_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces_Interface* New() const final {
    return CreateMaybeMessage<Interfaces_Interface>(NULL);
  }

  Interfaces_Interface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces_Interface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces_Interface& from);
  void MergeFrom(const Interfaces_Interface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Interfaces_Interface_Unnumbered Unnumbered;
  typedef Interfaces_Interface_RxModeSettings RxModeSettings;
  typedef Interfaces_Interface_RxPlacementSettings RxPlacementSettings;
  typedef Interfaces_Interface_Memif Memif;
  typedef Interfaces_Interface_Vxlan Vxlan;
  typedef Interfaces_Interface_Afpacket Afpacket;
  typedef Interfaces_Interface_Tap Tap;
  typedef Interfaces_Interface_VmxNet3 VmxNet3;

  // accessors -------------------------------------------------------

  // repeated string ip_addresses = 10;
  int ip_addresses_size() const;
  void clear_ip_addresses();
  static const int kIpAddressesFieldNumber = 10;
  const ::std::string& ip_addresses(int index) const;
  ::std::string* mutable_ip_addresses(int index);
  void set_ip_addresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addresses(int index, ::std::string&& value);
  #endif
  void set_ip_addresses(int index, const char* value);
  void set_ip_addresses(int index, const char* value, size_t size);
  ::std::string* add_ip_addresses();
  void add_ip_addresses(const ::std::string& value);
  #if LANG_CXX11
  void add_ip_addresses(::std::string&& value);
  #endif
  void add_ip_addresses(const char* value);
  void add_ip_addresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ip_addresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ip_addresses();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string phys_address = 5;
  void clear_phys_address();
  static const int kPhysAddressFieldNumber = 5;
  const ::std::string& phys_address() const;
  void set_phys_address(const ::std::string& value);
  #if LANG_CXX11
  void set_phys_address(::std::string&& value);
  #endif
  void set_phys_address(const char* value);
  void set_phys_address(const char* value, size_t size);
  ::std::string* mutable_phys_address();
  ::std::string* release_phys_address();
  void set_allocated_phys_address(::std::string* phys_address);

  // string container_ip_address = 8;
  void clear_container_ip_address();
  static const int kContainerIpAddressFieldNumber = 8;
  const ::std::string& container_ip_address() const;
  void set_container_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_container_ip_address(::std::string&& value);
  #endif
  void set_container_ip_address(const char* value);
  void set_container_ip_address(const char* value, size_t size);
  ::std::string* mutable_container_ip_address();
  ::std::string* release_container_ip_address();
  void set_allocated_container_ip_address(::std::string* container_ip_address);

  // .interfaces.Interfaces.Interface.Unnumbered unnumbered = 11;
  bool has_unnumbered() const;
  void clear_unnumbered();
  static const int kUnnumberedFieldNumber = 11;
  private:
  const ::interfaces::Interfaces_Interface_Unnumbered& _internal_unnumbered() const;
  public:
  const ::interfaces::Interfaces_Interface_Unnumbered& unnumbered() const;
  ::interfaces::Interfaces_Interface_Unnumbered* release_unnumbered();
  ::interfaces::Interfaces_Interface_Unnumbered* mutable_unnumbered();
  void set_allocated_unnumbered(::interfaces::Interfaces_Interface_Unnumbered* unnumbered);

  // .interfaces.Interfaces.Interface.RxModeSettings rx_mode_settings = 12;
  bool has_rx_mode_settings() const;
  void clear_rx_mode_settings();
  static const int kRxModeSettingsFieldNumber = 12;
  private:
  const ::interfaces::Interfaces_Interface_RxModeSettings& _internal_rx_mode_settings() const;
  public:
  const ::interfaces::Interfaces_Interface_RxModeSettings& rx_mode_settings() const;
  ::interfaces::Interfaces_Interface_RxModeSettings* release_rx_mode_settings();
  ::interfaces::Interfaces_Interface_RxModeSettings* mutable_rx_mode_settings();
  void set_allocated_rx_mode_settings(::interfaces::Interfaces_Interface_RxModeSettings* rx_mode_settings);

  // .interfaces.Interfaces.Interface.RxPlacementSettings rx_placement_settings = 13;
  bool has_rx_placement_settings() const;
  void clear_rx_placement_settings();
  static const int kRxPlacementSettingsFieldNumber = 13;
  private:
  const ::interfaces::Interfaces_Interface_RxPlacementSettings& _internal_rx_placement_settings() const;
  public:
  const ::interfaces::Interfaces_Interface_RxPlacementSettings& rx_placement_settings() const;
  ::interfaces::Interfaces_Interface_RxPlacementSettings* release_rx_placement_settings();
  ::interfaces::Interfaces_Interface_RxPlacementSettings* mutable_rx_placement_settings();
  void set_allocated_rx_placement_settings(::interfaces::Interfaces_Interface_RxPlacementSettings* rx_placement_settings);

  // .interfaces.Interfaces.Interface.Memif memif = 101;
  bool has_memif() const;
  void clear_memif();
  static const int kMemifFieldNumber = 101;
  private:
  const ::interfaces::Interfaces_Interface_Memif& _internal_memif() const;
  public:
  const ::interfaces::Interfaces_Interface_Memif& memif() const;
  ::interfaces::Interfaces_Interface_Memif* release_memif();
  ::interfaces::Interfaces_Interface_Memif* mutable_memif();
  void set_allocated_memif(::interfaces::Interfaces_Interface_Memif* memif);

  // .interfaces.Interfaces.Interface.Vxlan vxlan = 102;
  bool has_vxlan() const;
  void clear_vxlan();
  static const int kVxlanFieldNumber = 102;
  private:
  const ::interfaces::Interfaces_Interface_Vxlan& _internal_vxlan() const;
  public:
  const ::interfaces::Interfaces_Interface_Vxlan& vxlan() const;
  ::interfaces::Interfaces_Interface_Vxlan* release_vxlan();
  ::interfaces::Interfaces_Interface_Vxlan* mutable_vxlan();
  void set_allocated_vxlan(::interfaces::Interfaces_Interface_Vxlan* vxlan);

  // .interfaces.Interfaces.Interface.Afpacket afpacket = 103;
  bool has_afpacket() const;
  void clear_afpacket();
  static const int kAfpacketFieldNumber = 103;
  private:
  const ::interfaces::Interfaces_Interface_Afpacket& _internal_afpacket() const;
  public:
  const ::interfaces::Interfaces_Interface_Afpacket& afpacket() const;
  ::interfaces::Interfaces_Interface_Afpacket* release_afpacket();
  ::interfaces::Interfaces_Interface_Afpacket* mutable_afpacket();
  void set_allocated_afpacket(::interfaces::Interfaces_Interface_Afpacket* afpacket);

  // .interfaces.Interfaces.Interface.Tap tap = 104;
  bool has_tap() const;
  void clear_tap();
  static const int kTapFieldNumber = 104;
  private:
  const ::interfaces::Interfaces_Interface_Tap& _internal_tap() const;
  public:
  const ::interfaces::Interfaces_Interface_Tap& tap() const;
  ::interfaces::Interfaces_Interface_Tap* release_tap();
  ::interfaces::Interfaces_Interface_Tap* mutable_tap();
  void set_allocated_tap(::interfaces::Interfaces_Interface_Tap* tap);

  // .interfaces.Interfaces.Interface.VmxNet3 vmx_net3 = 105;
  bool has_vmx_net3() const;
  void clear_vmx_net3();
  static const int kVmxNet3FieldNumber = 105;
  private:
  const ::interfaces::Interfaces_Interface_VmxNet3& _internal_vmx_net3() const;
  public:
  const ::interfaces::Interfaces_Interface_VmxNet3& vmx_net3() const;
  ::interfaces::Interfaces_Interface_VmxNet3* release_vmx_net3();
  ::interfaces::Interfaces_Interface_VmxNet3* mutable_vmx_net3();
  void set_allocated_vmx_net3(::interfaces::Interfaces_Interface_VmxNet3* vmx_net3);

  // .interfaces.InterfaceType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::interfaces::InterfaceType type() const;
  void set_type(::interfaces::InterfaceType value);

  // uint32 mtu = 6;
  void clear_mtu();
  static const int kMtuFieldNumber = 6;
  ::google::protobuf::uint32 mtu() const;
  void set_mtu(::google::protobuf::uint32 value);

  // bool enabled = 4;
  void clear_enabled();
  static const int kEnabledFieldNumber = 4;
  bool enabled() const;
  void set_enabled(bool value);

  // bool set_dhcp_client = 9;
  void clear_set_dhcp_client();
  static const int kSetDhcpClientFieldNumber = 9;
  bool set_dhcp_client() const;
  void set_set_dhcp_client(bool value);

  // uint32 vrf = 7;
  void clear_vrf();
  static const int kVrfFieldNumber = 7;
  ::google::protobuf::uint32 vrf() const;
  void set_vrf(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ip_addresses_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr phys_address_;
  ::google::protobuf::internal::ArenaStringPtr container_ip_address_;
  ::interfaces::Interfaces_Interface_Unnumbered* unnumbered_;
  ::interfaces::Interfaces_Interface_RxModeSettings* rx_mode_settings_;
  ::interfaces::Interfaces_Interface_RxPlacementSettings* rx_placement_settings_;
  ::interfaces::Interfaces_Interface_Memif* memif_;
  ::interfaces::Interfaces_Interface_Vxlan* vxlan_;
  ::interfaces::Interfaces_Interface_Afpacket* afpacket_;
  ::interfaces::Interfaces_Interface_Tap* tap_;
  ::interfaces::Interfaces_Interface_VmxNet3* vmx_net3_;
  int type_;
  ::google::protobuf::uint32 mtu_;
  bool enabled_;
  bool set_dhcp_client_;
  ::google::protobuf::uint32 vrf_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.Interfaces) */ {
 public:
  Interfaces();
  virtual ~Interfaces();

  Interfaces(const Interfaces& from);

  inline Interfaces& operator=(const Interfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interfaces(Interfaces&& from) noexcept
    : Interfaces() {
    *this = ::std::move(from);
  }

  inline Interfaces& operator=(Interfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interfaces* internal_default_instance() {
    return reinterpret_cast<const Interfaces*>(
               &_Interfaces_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Interfaces* other);
  friend void swap(Interfaces& a, Interfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interfaces* New() const final {
    return CreateMaybeMessage<Interfaces>(NULL);
  }

  Interfaces* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interfaces>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interfaces& from);
  void MergeFrom(const Interfaces& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Interfaces_Interface Interface;

  // accessors -------------------------------------------------------

  // repeated .interfaces.Interfaces.Interface interfaces = 1;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 1;
  ::interfaces::Interfaces_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
      mutable_interfaces();
  const ::interfaces::Interfaces_Interface& interfaces(int index) const;
  ::interfaces::Interfaces_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
      interfaces() const;

  // @@protoc_insertion_point(class_scope:interfaces.Interfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface > interfaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfacesState_Interface_Statistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfacesState.Interface.Statistics) */ {
 public:
  InterfacesState_Interface_Statistics();
  virtual ~InterfacesState_Interface_Statistics();

  InterfacesState_Interface_Statistics(const InterfacesState_Interface_Statistics& from);

  inline InterfacesState_Interface_Statistics& operator=(const InterfacesState_Interface_Statistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfacesState_Interface_Statistics(InterfacesState_Interface_Statistics&& from) noexcept
    : InterfacesState_Interface_Statistics() {
    *this = ::std::move(from);
  }

  inline InterfacesState_Interface_Statistics& operator=(InterfacesState_Interface_Statistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfacesState_Interface_Statistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfacesState_Interface_Statistics* internal_default_instance() {
    return reinterpret_cast<const InterfacesState_Interface_Statistics*>(
               &_InterfacesState_Interface_Statistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(InterfacesState_Interface_Statistics* other);
  friend void swap(InterfacesState_Interface_Statistics& a, InterfacesState_Interface_Statistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfacesState_Interface_Statistics* New() const final {
    return CreateMaybeMessage<InterfacesState_Interface_Statistics>(NULL);
  }

  InterfacesState_Interface_Statistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfacesState_Interface_Statistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfacesState_Interface_Statistics& from);
  void MergeFrom(const InterfacesState_Interface_Statistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfacesState_Interface_Statistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 in_packets = 1;
  void clear_in_packets();
  static const int kInPacketsFieldNumber = 1;
  ::google::protobuf::uint64 in_packets() const;
  void set_in_packets(::google::protobuf::uint64 value);

  // uint64 in_bytes = 2;
  void clear_in_bytes();
  static const int kInBytesFieldNumber = 2;
  ::google::protobuf::uint64 in_bytes() const;
  void set_in_bytes(::google::protobuf::uint64 value);

  // uint64 out_packets = 3;
  void clear_out_packets();
  static const int kOutPacketsFieldNumber = 3;
  ::google::protobuf::uint64 out_packets() const;
  void set_out_packets(::google::protobuf::uint64 value);

  // uint64 out_bytes = 4;
  void clear_out_bytes();
  static const int kOutBytesFieldNumber = 4;
  ::google::protobuf::uint64 out_bytes() const;
  void set_out_bytes(::google::protobuf::uint64 value);

  // uint64 drop_packets = 5;
  void clear_drop_packets();
  static const int kDropPacketsFieldNumber = 5;
  ::google::protobuf::uint64 drop_packets() const;
  void set_drop_packets(::google::protobuf::uint64 value);

  // uint64 punt_packets = 6;
  void clear_punt_packets();
  static const int kPuntPacketsFieldNumber = 6;
  ::google::protobuf::uint64 punt_packets() const;
  void set_punt_packets(::google::protobuf::uint64 value);

  // uint64 ipv4_packets = 7;
  void clear_ipv4_packets();
  static const int kIpv4PacketsFieldNumber = 7;
  ::google::protobuf::uint64 ipv4_packets() const;
  void set_ipv4_packets(::google::protobuf::uint64 value);

  // uint64 ipv6_packets = 8;
  void clear_ipv6_packets();
  static const int kIpv6PacketsFieldNumber = 8;
  ::google::protobuf::uint64 ipv6_packets() const;
  void set_ipv6_packets(::google::protobuf::uint64 value);

  // uint64 in_nobuf_packets = 9;
  void clear_in_nobuf_packets();
  static const int kInNobufPacketsFieldNumber = 9;
  ::google::protobuf::uint64 in_nobuf_packets() const;
  void set_in_nobuf_packets(::google::protobuf::uint64 value);

  // uint64 in_miss_packets = 10;
  void clear_in_miss_packets();
  static const int kInMissPacketsFieldNumber = 10;
  ::google::protobuf::uint64 in_miss_packets() const;
  void set_in_miss_packets(::google::protobuf::uint64 value);

  // uint64 in_error_packets = 11;
  void clear_in_error_packets();
  static const int kInErrorPacketsFieldNumber = 11;
  ::google::protobuf::uint64 in_error_packets() const;
  void set_in_error_packets(::google::protobuf::uint64 value);

  // uint64 out_error_packets = 12;
  void clear_out_error_packets();
  static const int kOutErrorPacketsFieldNumber = 12;
  ::google::protobuf::uint64 out_error_packets() const;
  void set_out_error_packets(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:interfaces.InterfacesState.Interface.Statistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 in_packets_;
  ::google::protobuf::uint64 in_bytes_;
  ::google::protobuf::uint64 out_packets_;
  ::google::protobuf::uint64 out_bytes_;
  ::google::protobuf::uint64 drop_packets_;
  ::google::protobuf::uint64 punt_packets_;
  ::google::protobuf::uint64 ipv4_packets_;
  ::google::protobuf::uint64 ipv6_packets_;
  ::google::protobuf::uint64 in_nobuf_packets_;
  ::google::protobuf::uint64 in_miss_packets_;
  ::google::protobuf::uint64 in_error_packets_;
  ::google::protobuf::uint64 out_error_packets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfacesState_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfacesState.Interface) */ {
 public:
  InterfacesState_Interface();
  virtual ~InterfacesState_Interface();

  InterfacesState_Interface(const InterfacesState_Interface& from);

  inline InterfacesState_Interface& operator=(const InterfacesState_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfacesState_Interface(InterfacesState_Interface&& from) noexcept
    : InterfacesState_Interface() {
    *this = ::std::move(from);
  }

  inline InterfacesState_Interface& operator=(InterfacesState_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfacesState_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfacesState_Interface* internal_default_instance() {
    return reinterpret_cast<const InterfacesState_Interface*>(
               &_InterfacesState_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(InterfacesState_Interface* other);
  friend void swap(InterfacesState_Interface& a, InterfacesState_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfacesState_Interface* New() const final {
    return CreateMaybeMessage<InterfacesState_Interface>(NULL);
  }

  InterfacesState_Interface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfacesState_Interface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfacesState_Interface& from);
  void MergeFrom(const InterfacesState_Interface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfacesState_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InterfacesState_Interface_Statistics Statistics;

  typedef InterfacesState_Interface_Status Status;
  static const Status UNKNOWN_STATUS =
    InterfacesState_Interface_Status_UNKNOWN_STATUS;
  static const Status UP =
    InterfacesState_Interface_Status_UP;
  static const Status DOWN =
    InterfacesState_Interface_Status_DOWN;
  static const Status DELETED =
    InterfacesState_Interface_Status_DELETED;
  static inline bool Status_IsValid(int value) {
    return InterfacesState_Interface_Status_IsValid(value);
  }
  static const Status Status_MIN =
    InterfacesState_Interface_Status_Status_MIN;
  static const Status Status_MAX =
    InterfacesState_Interface_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    InterfacesState_Interface_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return InterfacesState_Interface_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return InterfacesState_Interface_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return InterfacesState_Interface_Status_Parse(name, value);
  }

  typedef InterfacesState_Interface_Duplex Duplex;
  static const Duplex UNKNOWN_DUPLEX =
    InterfacesState_Interface_Duplex_UNKNOWN_DUPLEX;
  static const Duplex HALF =
    InterfacesState_Interface_Duplex_HALF;
  static const Duplex FULL =
    InterfacesState_Interface_Duplex_FULL;
  static inline bool Duplex_IsValid(int value) {
    return InterfacesState_Interface_Duplex_IsValid(value);
  }
  static const Duplex Duplex_MIN =
    InterfacesState_Interface_Duplex_Duplex_MIN;
  static const Duplex Duplex_MAX =
    InterfacesState_Interface_Duplex_Duplex_MAX;
  static const int Duplex_ARRAYSIZE =
    InterfacesState_Interface_Duplex_Duplex_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Duplex_descriptor() {
    return InterfacesState_Interface_Duplex_descriptor();
  }
  static inline const ::std::string& Duplex_Name(Duplex value) {
    return InterfacesState_Interface_Duplex_Name(value);
  }
  static inline bool Duplex_Parse(const ::std::string& name,
      Duplex* value) {
    return InterfacesState_Interface_Duplex_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string internal_name = 2;
  void clear_internal_name();
  static const int kInternalNameFieldNumber = 2;
  const ::std::string& internal_name() const;
  void set_internal_name(const ::std::string& value);
  #if LANG_CXX11
  void set_internal_name(::std::string&& value);
  #endif
  void set_internal_name(const char* value);
  void set_internal_name(const char* value, size_t size);
  ::std::string* mutable_internal_name();
  ::std::string* release_internal_name();
  void set_allocated_internal_name(::std::string* internal_name);

  // string phys_address = 8;
  void clear_phys_address();
  static const int kPhysAddressFieldNumber = 8;
  const ::std::string& phys_address() const;
  void set_phys_address(const ::std::string& value);
  #if LANG_CXX11
  void set_phys_address(::std::string&& value);
  #endif
  void set_phys_address(const char* value);
  void set_phys_address(const char* value, size_t size);
  ::std::string* mutable_phys_address();
  ::std::string* release_phys_address();
  void set_allocated_phys_address(::std::string* phys_address);

  // .interfaces.InterfacesState.Interface.Statistics statistics = 100;
  bool has_statistics() const;
  void clear_statistics();
  static const int kStatisticsFieldNumber = 100;
  private:
  const ::interfaces::InterfacesState_Interface_Statistics& _internal_statistics() const;
  public:
  const ::interfaces::InterfacesState_Interface_Statistics& statistics() const;
  ::interfaces::InterfacesState_Interface_Statistics* release_statistics();
  ::interfaces::InterfacesState_Interface_Statistics* mutable_statistics();
  void set_allocated_statistics(::interfaces::InterfacesState_Interface_Statistics* statistics);

  // .interfaces.InterfaceType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::interfaces::InterfaceType type() const;
  void set_type(::interfaces::InterfaceType value);

  // uint32 if_index = 4;
  void clear_if_index();
  static const int kIfIndexFieldNumber = 4;
  ::google::protobuf::uint32 if_index() const;
  void set_if_index(::google::protobuf::uint32 value);

  // .interfaces.InterfacesState.Interface.Status admin_status = 5;
  void clear_admin_status();
  static const int kAdminStatusFieldNumber = 5;
  ::interfaces::InterfacesState_Interface_Status admin_status() const;
  void set_admin_status(::interfaces::InterfacesState_Interface_Status value);

  // .interfaces.InterfacesState.Interface.Status oper_status = 6;
  void clear_oper_status();
  static const int kOperStatusFieldNumber = 6;
  ::interfaces::InterfacesState_Interface_Status oper_status() const;
  void set_oper_status(::interfaces::InterfacesState_Interface_Status value);

  // int64 last_change = 7;
  void clear_last_change();
  static const int kLastChangeFieldNumber = 7;
  ::google::protobuf::int64 last_change() const;
  void set_last_change(::google::protobuf::int64 value);

  // uint64 speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  ::google::protobuf::uint64 speed() const;
  void set_speed(::google::protobuf::uint64 value);

  // uint32 mtu = 10;
  void clear_mtu();
  static const int kMtuFieldNumber = 10;
  ::google::protobuf::uint32 mtu() const;
  void set_mtu(::google::protobuf::uint32 value);

  // .interfaces.InterfacesState.Interface.Duplex duplex = 11;
  void clear_duplex();
  static const int kDuplexFieldNumber = 11;
  ::interfaces::InterfacesState_Interface_Duplex duplex() const;
  void set_duplex(::interfaces::InterfacesState_Interface_Duplex value);

  // @@protoc_insertion_point(class_scope:interfaces.InterfacesState.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr internal_name_;
  ::google::protobuf::internal::ArenaStringPtr phys_address_;
  ::interfaces::InterfacesState_Interface_Statistics* statistics_;
  int type_;
  ::google::protobuf::uint32 if_index_;
  int admin_status_;
  int oper_status_;
  ::google::protobuf::int64 last_change_;
  ::google::protobuf::uint64 speed_;
  ::google::protobuf::uint32 mtu_;
  int duplex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfacesState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfacesState) */ {
 public:
  InterfacesState();
  virtual ~InterfacesState();

  InterfacesState(const InterfacesState& from);

  inline InterfacesState& operator=(const InterfacesState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfacesState(InterfacesState&& from) noexcept
    : InterfacesState() {
    *this = ::std::move(from);
  }

  inline InterfacesState& operator=(InterfacesState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfacesState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfacesState* internal_default_instance() {
    return reinterpret_cast<const InterfacesState*>(
               &_InterfacesState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(InterfacesState* other);
  friend void swap(InterfacesState& a, InterfacesState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfacesState* New() const final {
    return CreateMaybeMessage<InterfacesState>(NULL);
  }

  InterfacesState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfacesState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfacesState& from);
  void MergeFrom(const InterfacesState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfacesState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InterfacesState_Interface Interface;

  // accessors -------------------------------------------------------

  // repeated .interfaces.InterfacesState.Interface interfaces = 1;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 1;
  ::interfaces::InterfacesState_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfacesState_Interface >*
      mutable_interfaces();
  const ::interfaces::InterfacesState_Interface& interfaces(int index) const;
  ::interfaces::InterfacesState_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfacesState_Interface >&
      interfaces() const;

  // @@protoc_insertion_point(class_scope:interfaces.InterfacesState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfacesState_Interface > interfaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfaceNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfaceNotification) */ {
 public:
  InterfaceNotification();
  virtual ~InterfaceNotification();

  InterfaceNotification(const InterfaceNotification& from);

  inline InterfaceNotification& operator=(const InterfaceNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfaceNotification(InterfaceNotification&& from) noexcept
    : InterfaceNotification() {
    *this = ::std::move(from);
  }

  inline InterfaceNotification& operator=(InterfaceNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceNotification* internal_default_instance() {
    return reinterpret_cast<const InterfaceNotification*>(
               &_InterfaceNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(InterfaceNotification* other);
  friend void swap(InterfaceNotification& a, InterfaceNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfaceNotification* New() const final {
    return CreateMaybeMessage<InterfaceNotification>(NULL);
  }

  InterfaceNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfaceNotification& from);
  void MergeFrom(const InterfaceNotification& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InterfaceNotification_NotifType NotifType;
  static const NotifType UNKNOWN =
    InterfaceNotification_NotifType_UNKNOWN;
  static const NotifType UPDOWN =
    InterfaceNotification_NotifType_UPDOWN;
  static const NotifType COUNTERS =
    InterfaceNotification_NotifType_COUNTERS;
  static inline bool NotifType_IsValid(int value) {
    return InterfaceNotification_NotifType_IsValid(value);
  }
  static const NotifType NotifType_MIN =
    InterfaceNotification_NotifType_NotifType_MIN;
  static const NotifType NotifType_MAX =
    InterfaceNotification_NotifType_NotifType_MAX;
  static const int NotifType_ARRAYSIZE =
    InterfaceNotification_NotifType_NotifType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NotifType_descriptor() {
    return InterfaceNotification_NotifType_descriptor();
  }
  static inline const ::std::string& NotifType_Name(NotifType value) {
    return InterfaceNotification_NotifType_Name(value);
  }
  static inline bool NotifType_Parse(const ::std::string& name,
      NotifType* value) {
    return InterfaceNotification_NotifType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .interfaces.InterfacesState.Interface state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::interfaces::InterfacesState_Interface& _internal_state() const;
  public:
  const ::interfaces::InterfacesState_Interface& state() const;
  ::interfaces::InterfacesState_Interface* release_state();
  ::interfaces::InterfacesState_Interface* mutable_state();
  void set_allocated_state(::interfaces::InterfacesState_Interface* state);

  // .interfaces.InterfaceNotification.NotifType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::interfaces::InterfaceNotification_NotifType type() const;
  void set_type(::interfaces::InterfaceNotification_NotifType value);

  // @@protoc_insertion_point(class_scope:interfaces.InterfaceNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::interfaces::InterfacesState_Interface* state_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfaceErrors_Interface_ErrorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfaceErrors.Interface.ErrorData) */ {
 public:
  InterfaceErrors_Interface_ErrorData();
  virtual ~InterfaceErrors_Interface_ErrorData();

  InterfaceErrors_Interface_ErrorData(const InterfaceErrors_Interface_ErrorData& from);

  inline InterfaceErrors_Interface_ErrorData& operator=(const InterfaceErrors_Interface_ErrorData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfaceErrors_Interface_ErrorData(InterfaceErrors_Interface_ErrorData&& from) noexcept
    : InterfaceErrors_Interface_ErrorData() {
    *this = ::std::move(from);
  }

  inline InterfaceErrors_Interface_ErrorData& operator=(InterfaceErrors_Interface_ErrorData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceErrors_Interface_ErrorData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceErrors_Interface_ErrorData* internal_default_instance() {
    return reinterpret_cast<const InterfaceErrors_Interface_ErrorData*>(
               &_InterfaceErrors_Interface_ErrorData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(InterfaceErrors_Interface_ErrorData* other);
  friend void swap(InterfaceErrors_Interface_ErrorData& a, InterfaceErrors_Interface_ErrorData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfaceErrors_Interface_ErrorData* New() const final {
    return CreateMaybeMessage<InterfaceErrors_Interface_ErrorData>(NULL);
  }

  InterfaceErrors_Interface_ErrorData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceErrors_Interface_ErrorData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfaceErrors_Interface_ErrorData& from);
  void MergeFrom(const InterfaceErrors_Interface_ErrorData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceErrors_Interface_ErrorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string change_type = 1;
  void clear_change_type();
  static const int kChangeTypeFieldNumber = 1;
  const ::std::string& change_type() const;
  void set_change_type(const ::std::string& value);
  #if LANG_CXX11
  void set_change_type(::std::string&& value);
  #endif
  void set_change_type(const char* value);
  void set_change_type(const char* value, size_t size);
  ::std::string* mutable_change_type();
  ::std::string* release_change_type();
  void set_allocated_change_type(::std::string* change_type);

  // string error_message = 2;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 2;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // int64 last_change = 3;
  void clear_last_change();
  static const int kLastChangeFieldNumber = 3;
  ::google::protobuf::int64 last_change() const;
  void set_last_change(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:interfaces.InterfaceErrors.Interface.ErrorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr change_type_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::int64 last_change_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfaceErrors_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfaceErrors.Interface) */ {
 public:
  InterfaceErrors_Interface();
  virtual ~InterfaceErrors_Interface();

  InterfaceErrors_Interface(const InterfaceErrors_Interface& from);

  inline InterfaceErrors_Interface& operator=(const InterfaceErrors_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfaceErrors_Interface(InterfaceErrors_Interface&& from) noexcept
    : InterfaceErrors_Interface() {
    *this = ::std::move(from);
  }

  inline InterfaceErrors_Interface& operator=(InterfaceErrors_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceErrors_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceErrors_Interface* internal_default_instance() {
    return reinterpret_cast<const InterfaceErrors_Interface*>(
               &_InterfaceErrors_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(InterfaceErrors_Interface* other);
  friend void swap(InterfaceErrors_Interface& a, InterfaceErrors_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfaceErrors_Interface* New() const final {
    return CreateMaybeMessage<InterfaceErrors_Interface>(NULL);
  }

  InterfaceErrors_Interface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceErrors_Interface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfaceErrors_Interface& from);
  void MergeFrom(const InterfaceErrors_Interface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceErrors_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InterfaceErrors_Interface_ErrorData ErrorData;

  // accessors -------------------------------------------------------

  // repeated .interfaces.InterfaceErrors.Interface.ErrorData error_data = 2;
  int error_data_size() const;
  void clear_error_data();
  static const int kErrorDataFieldNumber = 2;
  ::interfaces::InterfaceErrors_Interface_ErrorData* mutable_error_data(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface_ErrorData >*
      mutable_error_data();
  const ::interfaces::InterfaceErrors_Interface_ErrorData& error_data(int index) const;
  ::interfaces::InterfaceErrors_Interface_ErrorData* add_error_data();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface_ErrorData >&
      error_data() const;

  // string interface_name = 1;
  void clear_interface_name();
  static const int kInterfaceNameFieldNumber = 1;
  const ::std::string& interface_name() const;
  void set_interface_name(const ::std::string& value);
  #if LANG_CXX11
  void set_interface_name(::std::string&& value);
  #endif
  void set_interface_name(const char* value);
  void set_interface_name(const char* value, size_t size);
  ::std::string* mutable_interface_name();
  ::std::string* release_interface_name();
  void set_allocated_interface_name(::std::string* interface_name);

  // @@protoc_insertion_point(class_scope:interfaces.InterfaceErrors.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface_ErrorData > error_data_;
  ::google::protobuf::internal::ArenaStringPtr interface_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfaceErrors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:interfaces.InterfaceErrors) */ {
 public:
  InterfaceErrors();
  virtual ~InterfaceErrors();

  InterfaceErrors(const InterfaceErrors& from);

  inline InterfaceErrors& operator=(const InterfaceErrors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InterfaceErrors(InterfaceErrors&& from) noexcept
    : InterfaceErrors() {
    *this = ::std::move(from);
  }

  inline InterfaceErrors& operator=(InterfaceErrors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceErrors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InterfaceErrors* internal_default_instance() {
    return reinterpret_cast<const InterfaceErrors*>(
               &_InterfaceErrors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(InterfaceErrors* other);
  friend void swap(InterfaceErrors& a, InterfaceErrors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InterfaceErrors* New() const final {
    return CreateMaybeMessage<InterfaceErrors>(NULL);
  }

  InterfaceErrors* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InterfaceErrors>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InterfaceErrors& from);
  void MergeFrom(const InterfaceErrors& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterfaceErrors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InterfaceErrors_Interface Interface;

  // accessors -------------------------------------------------------

  // repeated .interfaces.InterfaceErrors.Interface interfaces = 1;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 1;
  ::interfaces::InterfaceErrors_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface >*
      mutable_interfaces();
  const ::interfaces::InterfaceErrors_Interface& interfaces(int index) const;
  ::interfaces::InterfaceErrors_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface >&
      interfaces() const;

  // @@protoc_insertion_point(class_scope:interfaces.InterfaceErrors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface > interfaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2finterfaces_2finterfaces_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Interfaces_Interface_Unnumbered

// bool is_unnumbered = 1;
inline void Interfaces_Interface_Unnumbered::clear_is_unnumbered() {
  is_unnumbered_ = false;
}
inline bool Interfaces_Interface_Unnumbered::is_unnumbered() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Unnumbered.is_unnumbered)
  return is_unnumbered_;
}
inline void Interfaces_Interface_Unnumbered::set_is_unnumbered(bool value) {
  
  is_unnumbered_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Unnumbered.is_unnumbered)
}

// string interface_with_ip = 2;
inline void Interfaces_Interface_Unnumbered::clear_interface_with_ip() {
  interface_with_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Unnumbered::interface_with_ip() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
  return interface_with_ip_.GetNoArena();
}
inline void Interfaces_Interface_Unnumbered::set_interface_with_ip(const ::std::string& value) {
  
  interface_with_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
}
#if LANG_CXX11
inline void Interfaces_Interface_Unnumbered::set_interface_with_ip(::std::string&& value) {
  
  interface_with_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
}
#endif
inline void Interfaces_Interface_Unnumbered::set_interface_with_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_with_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
}
inline void Interfaces_Interface_Unnumbered::set_interface_with_ip(const char* value, size_t size) {
  
  interface_with_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
}
inline ::std::string* Interfaces_Interface_Unnumbered::mutable_interface_with_ip() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
  return interface_with_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Unnumbered::release_interface_with_ip() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
  
  return interface_with_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Unnumbered::set_allocated_interface_with_ip(::std::string* interface_with_ip) {
  if (interface_with_ip != NULL) {
    
  } else {
    
  }
  interface_with_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_with_ip);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Unnumbered.interface_with_ip)
}

// -------------------------------------------------------------------

// Interfaces_Interface_RxModeSettings

// .interfaces.RxModeType rx_mode = 1;
inline void Interfaces_Interface_RxModeSettings::clear_rx_mode() {
  rx_mode_ = 0;
}
inline ::interfaces::RxModeType Interfaces_Interface_RxModeSettings::rx_mode() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxModeSettings.rx_mode)
  return static_cast< ::interfaces::RxModeType >(rx_mode_);
}
inline void Interfaces_Interface_RxModeSettings::set_rx_mode(::interfaces::RxModeType value) {
  
  rx_mode_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxModeSettings.rx_mode)
}

// uint32 queue_id = 2;
inline void Interfaces_Interface_RxModeSettings::clear_queue_id() {
  queue_id_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_RxModeSettings::queue_id() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxModeSettings.queue_id)
  return queue_id_;
}
inline void Interfaces_Interface_RxModeSettings::set_queue_id(::google::protobuf::uint32 value) {
  
  queue_id_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxModeSettings.queue_id)
}

// uint32 queue_id_valid = 3;
inline void Interfaces_Interface_RxModeSettings::clear_queue_id_valid() {
  queue_id_valid_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_RxModeSettings::queue_id_valid() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxModeSettings.queue_id_valid)
  return queue_id_valid_;
}
inline void Interfaces_Interface_RxModeSettings::set_queue_id_valid(::google::protobuf::uint32 value) {
  
  queue_id_valid_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxModeSettings.queue_id_valid)
}

// -------------------------------------------------------------------

// Interfaces_Interface_RxPlacementSettings

// uint32 queue = 1;
inline void Interfaces_Interface_RxPlacementSettings::clear_queue() {
  queue_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_RxPlacementSettings::queue() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxPlacementSettings.queue)
  return queue_;
}
inline void Interfaces_Interface_RxPlacementSettings::set_queue(::google::protobuf::uint32 value) {
  
  queue_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxPlacementSettings.queue)
}

// uint32 worker = 2;
inline void Interfaces_Interface_RxPlacementSettings::clear_worker() {
  worker_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_RxPlacementSettings::worker() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxPlacementSettings.worker)
  return worker_;
}
inline void Interfaces_Interface_RxPlacementSettings::set_worker(::google::protobuf::uint32 value) {
  
  worker_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxPlacementSettings.worker)
}

// bool is_main = 3;
inline void Interfaces_Interface_RxPlacementSettings::clear_is_main() {
  is_main_ = false;
}
inline bool Interfaces_Interface_RxPlacementSettings::is_main() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.RxPlacementSettings.is_main)
  return is_main_;
}
inline void Interfaces_Interface_RxPlacementSettings::set_is_main(bool value) {
  
  is_main_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.RxPlacementSettings.is_main)
}

// -------------------------------------------------------------------

// Interfaces_Interface_Memif

// bool master = 1;
inline void Interfaces_Interface_Memif::clear_master() {
  master_ = false;
}
inline bool Interfaces_Interface_Memif::master() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.master)
  return master_;
}
inline void Interfaces_Interface_Memif::set_master(bool value) {
  
  master_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.master)
}

// .interfaces.Interfaces.Interface.Memif.MemifMode mode = 2;
inline void Interfaces_Interface_Memif::clear_mode() {
  mode_ = 0;
}
inline ::interfaces::Interfaces_Interface_Memif_MemifMode Interfaces_Interface_Memif::mode() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.mode)
  return static_cast< ::interfaces::Interfaces_Interface_Memif_MemifMode >(mode_);
}
inline void Interfaces_Interface_Memif::set_mode(::interfaces::Interfaces_Interface_Memif_MemifMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.mode)
}

// uint32 id = 3;
inline void Interfaces_Interface_Memif::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Memif::id() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.id)
  return id_;
}
inline void Interfaces_Interface_Memif::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.id)
}

// string socket_filename = 4;
inline void Interfaces_Interface_Memif::clear_socket_filename() {
  socket_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Memif::socket_filename() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.socket_filename)
  return socket_filename_.GetNoArena();
}
inline void Interfaces_Interface_Memif::set_socket_filename(const ::std::string& value) {
  
  socket_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.socket_filename)
}
#if LANG_CXX11
inline void Interfaces_Interface_Memif::set_socket_filename(::std::string&& value) {
  
  socket_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Memif.socket_filename)
}
#endif
inline void Interfaces_Interface_Memif::set_socket_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  socket_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Memif.socket_filename)
}
inline void Interfaces_Interface_Memif::set_socket_filename(const char* value, size_t size) {
  
  socket_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Memif.socket_filename)
}
inline ::std::string* Interfaces_Interface_Memif::mutable_socket_filename() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Memif.socket_filename)
  return socket_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Memif::release_socket_filename() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Memif.socket_filename)
  
  return socket_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Memif::set_allocated_socket_filename(::std::string* socket_filename) {
  if (socket_filename != NULL) {
    
  } else {
    
  }
  socket_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), socket_filename);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Memif.socket_filename)
}

// string secret = 5;
inline void Interfaces_Interface_Memif::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Memif::secret() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.secret)
  return secret_.GetNoArena();
}
inline void Interfaces_Interface_Memif::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.secret)
}
#if LANG_CXX11
inline void Interfaces_Interface_Memif::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Memif.secret)
}
#endif
inline void Interfaces_Interface_Memif::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Memif.secret)
}
inline void Interfaces_Interface_Memif::set_secret(const char* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Memif.secret)
}
inline ::std::string* Interfaces_Interface_Memif::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Memif.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Memif::release_secret() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Memif.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Memif::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Memif.secret)
}

// uint32 ring_size = 6;
inline void Interfaces_Interface_Memif::clear_ring_size() {
  ring_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Memif::ring_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.ring_size)
  return ring_size_;
}
inline void Interfaces_Interface_Memif::set_ring_size(::google::protobuf::uint32 value) {
  
  ring_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.ring_size)
}

// uint32 buffer_size = 7;
inline void Interfaces_Interface_Memif::clear_buffer_size() {
  buffer_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Memif::buffer_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.buffer_size)
  return buffer_size_;
}
inline void Interfaces_Interface_Memif::set_buffer_size(::google::protobuf::uint32 value) {
  
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.buffer_size)
}

// uint32 rx_queues = 8;
inline void Interfaces_Interface_Memif::clear_rx_queues() {
  rx_queues_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Memif::rx_queues() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.rx_queues)
  return rx_queues_;
}
inline void Interfaces_Interface_Memif::set_rx_queues(::google::protobuf::uint32 value) {
  
  rx_queues_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.rx_queues)
}

// uint32 tx_queues = 9;
inline void Interfaces_Interface_Memif::clear_tx_queues() {
  tx_queues_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Memif::tx_queues() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Memif.tx_queues)
  return tx_queues_;
}
inline void Interfaces_Interface_Memif::set_tx_queues(::google::protobuf::uint32 value) {
  
  tx_queues_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Memif.tx_queues)
}

// -------------------------------------------------------------------

// Interfaces_Interface_Vxlan

// string src_address = 1;
inline void Interfaces_Interface_Vxlan::clear_src_address() {
  src_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Vxlan::src_address() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Vxlan.src_address)
  return src_address_.GetNoArena();
}
inline void Interfaces_Interface_Vxlan::set_src_address(const ::std::string& value) {
  
  src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Vxlan.src_address)
}
#if LANG_CXX11
inline void Interfaces_Interface_Vxlan::set_src_address(::std::string&& value) {
  
  src_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Vxlan.src_address)
}
#endif
inline void Interfaces_Interface_Vxlan::set_src_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Vxlan.src_address)
}
inline void Interfaces_Interface_Vxlan::set_src_address(const char* value, size_t size) {
  
  src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Vxlan.src_address)
}
inline ::std::string* Interfaces_Interface_Vxlan::mutable_src_address() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Vxlan.src_address)
  return src_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Vxlan::release_src_address() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Vxlan.src_address)
  
  return src_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Vxlan::set_allocated_src_address(::std::string* src_address) {
  if (src_address != NULL) {
    
  } else {
    
  }
  src_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_address);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Vxlan.src_address)
}

// string dst_address = 2;
inline void Interfaces_Interface_Vxlan::clear_dst_address() {
  dst_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Vxlan::dst_address() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Vxlan.dst_address)
  return dst_address_.GetNoArena();
}
inline void Interfaces_Interface_Vxlan::set_dst_address(const ::std::string& value) {
  
  dst_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Vxlan.dst_address)
}
#if LANG_CXX11
inline void Interfaces_Interface_Vxlan::set_dst_address(::std::string&& value) {
  
  dst_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Vxlan.dst_address)
}
#endif
inline void Interfaces_Interface_Vxlan::set_dst_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dst_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Vxlan.dst_address)
}
inline void Interfaces_Interface_Vxlan::set_dst_address(const char* value, size_t size) {
  
  dst_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Vxlan.dst_address)
}
inline ::std::string* Interfaces_Interface_Vxlan::mutable_dst_address() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Vxlan.dst_address)
  return dst_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Vxlan::release_dst_address() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Vxlan.dst_address)
  
  return dst_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Vxlan::set_allocated_dst_address(::std::string* dst_address) {
  if (dst_address != NULL) {
    
  } else {
    
  }
  dst_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_address);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Vxlan.dst_address)
}

// uint32 vni = 3;
inline void Interfaces_Interface_Vxlan::clear_vni() {
  vni_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Vxlan::vni() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Vxlan.vni)
  return vni_;
}
inline void Interfaces_Interface_Vxlan::set_vni(::google::protobuf::uint32 value) {
  
  vni_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Vxlan.vni)
}

// string multicast = 4;
inline void Interfaces_Interface_Vxlan::clear_multicast() {
  multicast_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Vxlan::multicast() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Vxlan.multicast)
  return multicast_.GetNoArena();
}
inline void Interfaces_Interface_Vxlan::set_multicast(const ::std::string& value) {
  
  multicast_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Vxlan.multicast)
}
#if LANG_CXX11
inline void Interfaces_Interface_Vxlan::set_multicast(::std::string&& value) {
  
  multicast_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Vxlan.multicast)
}
#endif
inline void Interfaces_Interface_Vxlan::set_multicast(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  multicast_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Vxlan.multicast)
}
inline void Interfaces_Interface_Vxlan::set_multicast(const char* value, size_t size) {
  
  multicast_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Vxlan.multicast)
}
inline ::std::string* Interfaces_Interface_Vxlan::mutable_multicast() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Vxlan.multicast)
  return multicast_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Vxlan::release_multicast() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Vxlan.multicast)
  
  return multicast_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Vxlan::set_allocated_multicast(::std::string* multicast) {
  if (multicast != NULL) {
    
  } else {
    
  }
  multicast_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), multicast);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Vxlan.multicast)
}

// -------------------------------------------------------------------

// Interfaces_Interface_Afpacket

// string host_if_name = 1;
inline void Interfaces_Interface_Afpacket::clear_host_if_name() {
  host_if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Afpacket::host_if_name() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Afpacket.host_if_name)
  return host_if_name_.GetNoArena();
}
inline void Interfaces_Interface_Afpacket::set_host_if_name(const ::std::string& value) {
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Afpacket.host_if_name)
}
#if LANG_CXX11
inline void Interfaces_Interface_Afpacket::set_host_if_name(::std::string&& value) {
  
  host_if_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Afpacket.host_if_name)
}
#endif
inline void Interfaces_Interface_Afpacket::set_host_if_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Afpacket.host_if_name)
}
inline void Interfaces_Interface_Afpacket::set_host_if_name(const char* value, size_t size) {
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Afpacket.host_if_name)
}
inline ::std::string* Interfaces_Interface_Afpacket::mutable_host_if_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Afpacket.host_if_name)
  return host_if_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Afpacket::release_host_if_name() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Afpacket.host_if_name)
  
  return host_if_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Afpacket::set_allocated_host_if_name(::std::string* host_if_name) {
  if (host_if_name != NULL) {
    
  } else {
    
  }
  host_if_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_if_name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Afpacket.host_if_name)
}

// -------------------------------------------------------------------

// Interfaces_Interface_Tap

// uint32 version = 1;
inline void Interfaces_Interface_Tap::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Tap::version() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Tap.version)
  return version_;
}
inline void Interfaces_Interface_Tap::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Tap.version)
}

// string host_if_name = 2;
inline void Interfaces_Interface_Tap::clear_host_if_name() {
  host_if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Tap::host_if_name() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Tap.host_if_name)
  return host_if_name_.GetNoArena();
}
inline void Interfaces_Interface_Tap::set_host_if_name(const ::std::string& value) {
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Tap.host_if_name)
}
#if LANG_CXX11
inline void Interfaces_Interface_Tap::set_host_if_name(::std::string&& value) {
  
  host_if_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Tap.host_if_name)
}
#endif
inline void Interfaces_Interface_Tap::set_host_if_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Tap.host_if_name)
}
inline void Interfaces_Interface_Tap::set_host_if_name(const char* value, size_t size) {
  
  host_if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Tap.host_if_name)
}
inline ::std::string* Interfaces_Interface_Tap::mutable_host_if_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Tap.host_if_name)
  return host_if_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Tap::release_host_if_name() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Tap.host_if_name)
  
  return host_if_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Tap::set_allocated_host_if_name(::std::string* host_if_name) {
  if (host_if_name != NULL) {
    
  } else {
    
  }
  host_if_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_if_name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Tap.host_if_name)
}

// string namespace = 3;
inline void Interfaces_Interface_Tap::clear_namespace_() {
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface_Tap::namespace_() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Tap.namespace)
  return namespace__.GetNoArena();
}
inline void Interfaces_Interface_Tap::set_namespace_(const ::std::string& value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Tap.namespace)
}
#if LANG_CXX11
inline void Interfaces_Interface_Tap::set_namespace_(::std::string&& value) {
  
  namespace__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.Tap.namespace)
}
#endif
inline void Interfaces_Interface_Tap::set_namespace_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.Tap.namespace)
}
inline void Interfaces_Interface_Tap::set_namespace_(const char* value, size_t size) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.Tap.namespace)
}
inline ::std::string* Interfaces_Interface_Tap::mutable_namespace_() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.Tap.namespace)
  return namespace__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface_Tap::release_namespace_() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.Tap.namespace)
  
  return namespace__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface_Tap::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace_ != NULL) {
    
  } else {
    
  }
  namespace__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.Tap.namespace)
}

// uint32 rx_ring_size = 4;
inline void Interfaces_Interface_Tap::clear_rx_ring_size() {
  rx_ring_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Tap::rx_ring_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Tap.rx_ring_size)
  return rx_ring_size_;
}
inline void Interfaces_Interface_Tap::set_rx_ring_size(::google::protobuf::uint32 value) {
  
  rx_ring_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Tap.rx_ring_size)
}

// uint32 tx_ring_size = 5;
inline void Interfaces_Interface_Tap::clear_tx_ring_size() {
  tx_ring_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_Tap::tx_ring_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.Tap.tx_ring_size)
  return tx_ring_size_;
}
inline void Interfaces_Interface_Tap::set_tx_ring_size(::google::protobuf::uint32 value) {
  
  tx_ring_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.Tap.tx_ring_size)
}

// -------------------------------------------------------------------

// Interfaces_Interface_VmxNet3

// bool enable_elog = 2;
inline void Interfaces_Interface_VmxNet3::clear_enable_elog() {
  enable_elog_ = false;
}
inline bool Interfaces_Interface_VmxNet3::enable_elog() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.VmxNet3.enable_elog)
  return enable_elog_;
}
inline void Interfaces_Interface_VmxNet3::set_enable_elog(bool value) {
  
  enable_elog_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.VmxNet3.enable_elog)
}

// uint32 rxq_size = 3;
inline void Interfaces_Interface_VmxNet3::clear_rxq_size() {
  rxq_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_VmxNet3::rxq_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.VmxNet3.rxq_size)
  return rxq_size_;
}
inline void Interfaces_Interface_VmxNet3::set_rxq_size(::google::protobuf::uint32 value) {
  
  rxq_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.VmxNet3.rxq_size)
}

// uint32 txq_size = 4;
inline void Interfaces_Interface_VmxNet3::clear_txq_size() {
  txq_size_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface_VmxNet3::txq_size() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.VmxNet3.txq_size)
  return txq_size_;
}
inline void Interfaces_Interface_VmxNet3::set_txq_size(::google::protobuf::uint32 value) {
  
  txq_size_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.VmxNet3.txq_size)
}

// -------------------------------------------------------------------

// Interfaces_Interface

// string name = 1;
inline void Interfaces_Interface::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface::name() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.name)
  return name_.GetNoArena();
}
inline void Interfaces_Interface::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.name)
}
#if LANG_CXX11
inline void Interfaces_Interface::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.name)
}
#endif
inline void Interfaces_Interface::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.name)
}
inline void Interfaces_Interface::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.name)
}
inline ::std::string* Interfaces_Interface::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface::release_name() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.name)
}

// string description = 2;
inline void Interfaces_Interface::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface::description() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.description)
  return description_.GetNoArena();
}
inline void Interfaces_Interface::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.description)
}
#if LANG_CXX11
inline void Interfaces_Interface::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.description)
}
#endif
inline void Interfaces_Interface::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.description)
}
inline void Interfaces_Interface::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.description)
}
inline ::std::string* Interfaces_Interface::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface::release_description() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.description)
}

// .interfaces.InterfaceType type = 3;
inline void Interfaces_Interface::clear_type() {
  type_ = 0;
}
inline ::interfaces::InterfaceType Interfaces_Interface::type() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.type)
  return static_cast< ::interfaces::InterfaceType >(type_);
}
inline void Interfaces_Interface::set_type(::interfaces::InterfaceType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.type)
}

// bool enabled = 4;
inline void Interfaces_Interface::clear_enabled() {
  enabled_ = false;
}
inline bool Interfaces_Interface::enabled() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.enabled)
  return enabled_;
}
inline void Interfaces_Interface::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.enabled)
}

// string phys_address = 5;
inline void Interfaces_Interface::clear_phys_address() {
  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface::phys_address() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.phys_address)
  return phys_address_.GetNoArena();
}
inline void Interfaces_Interface::set_phys_address(const ::std::string& value) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.phys_address)
}
#if LANG_CXX11
inline void Interfaces_Interface::set_phys_address(::std::string&& value) {
  
  phys_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.phys_address)
}
#endif
inline void Interfaces_Interface::set_phys_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.phys_address)
}
inline void Interfaces_Interface::set_phys_address(const char* value, size_t size) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.phys_address)
}
inline ::std::string* Interfaces_Interface::mutable_phys_address() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.phys_address)
  return phys_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface::release_phys_address() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.phys_address)
  
  return phys_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface::set_allocated_phys_address(::std::string* phys_address) {
  if (phys_address != NULL) {
    
  } else {
    
  }
  phys_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phys_address);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.phys_address)
}

// uint32 mtu = 6;
inline void Interfaces_Interface::clear_mtu() {
  mtu_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface::mtu() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.mtu)
  return mtu_;
}
inline void Interfaces_Interface::set_mtu(::google::protobuf::uint32 value) {
  
  mtu_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.mtu)
}

// uint32 vrf = 7;
inline void Interfaces_Interface::clear_vrf() {
  vrf_ = 0u;
}
inline ::google::protobuf::uint32 Interfaces_Interface::vrf() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.vrf)
  return vrf_;
}
inline void Interfaces_Interface::set_vrf(::google::protobuf::uint32 value) {
  
  vrf_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.vrf)
}

// string container_ip_address = 8;
inline void Interfaces_Interface::clear_container_ip_address() {
  container_ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interfaces_Interface::container_ip_address() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.container_ip_address)
  return container_ip_address_.GetNoArena();
}
inline void Interfaces_Interface::set_container_ip_address(const ::std::string& value) {
  
  container_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.container_ip_address)
}
#if LANG_CXX11
inline void Interfaces_Interface::set_container_ip_address(::std::string&& value) {
  
  container_ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.Interfaces.Interface.container_ip_address)
}
#endif
inline void Interfaces_Interface::set_container_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  container_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.container_ip_address)
}
inline void Interfaces_Interface::set_container_ip_address(const char* value, size_t size) {
  
  container_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.container_ip_address)
}
inline ::std::string* Interfaces_Interface::mutable_container_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.container_ip_address)
  return container_ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interfaces_Interface::release_container_ip_address() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.container_ip_address)
  
  return container_ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interfaces_Interface::set_allocated_container_ip_address(::std::string* container_ip_address) {
  if (container_ip_address != NULL) {
    
  } else {
    
  }
  container_ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container_ip_address);
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.container_ip_address)
}

// bool set_dhcp_client = 9;
inline void Interfaces_Interface::clear_set_dhcp_client() {
  set_dhcp_client_ = false;
}
inline bool Interfaces_Interface::set_dhcp_client() const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.set_dhcp_client)
  return set_dhcp_client_;
}
inline void Interfaces_Interface::set_set_dhcp_client(bool value) {
  
  set_dhcp_client_ = value;
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.set_dhcp_client)
}

// repeated string ip_addresses = 10;
inline int Interfaces_Interface::ip_addresses_size() const {
  return ip_addresses_.size();
}
inline void Interfaces_Interface::clear_ip_addresses() {
  ip_addresses_.Clear();
}
inline const ::std::string& Interfaces_Interface::ip_addresses(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.ip_addresses)
  return ip_addresses_.Get(index);
}
inline ::std::string* Interfaces_Interface::mutable_ip_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.ip_addresses)
  return ip_addresses_.Mutable(index);
}
inline void Interfaces_Interface::set_ip_addresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.ip_addresses)
  ip_addresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interfaces_Interface::set_ip_addresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:interfaces.Interfaces.Interface.ip_addresses)
  ip_addresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interfaces_Interface::set_ip_addresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip_addresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:interfaces.Interfaces.Interface.ip_addresses)
}
inline void Interfaces_Interface::set_ip_addresses(int index, const char* value, size_t size) {
  ip_addresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:interfaces.Interfaces.Interface.ip_addresses)
}
inline ::std::string* Interfaces_Interface::add_ip_addresses() {
  // @@protoc_insertion_point(field_add_mutable:interfaces.Interfaces.Interface.ip_addresses)
  return ip_addresses_.Add();
}
inline void Interfaces_Interface::add_ip_addresses(const ::std::string& value) {
  ip_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:interfaces.Interfaces.Interface.ip_addresses)
}
#if LANG_CXX11
inline void Interfaces_Interface::add_ip_addresses(::std::string&& value) {
  ip_addresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:interfaces.Interfaces.Interface.ip_addresses)
}
#endif
inline void Interfaces_Interface::add_ip_addresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:interfaces.Interfaces.Interface.ip_addresses)
}
inline void Interfaces_Interface::add_ip_addresses(const char* value, size_t size) {
  ip_addresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:interfaces.Interfaces.Interface.ip_addresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interfaces_Interface::ip_addresses() const {
  // @@protoc_insertion_point(field_list:interfaces.Interfaces.Interface.ip_addresses)
  return ip_addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interfaces_Interface::mutable_ip_addresses() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.Interfaces.Interface.ip_addresses)
  return &ip_addresses_;
}

// .interfaces.Interfaces.Interface.Unnumbered unnumbered = 11;
inline bool Interfaces_Interface::has_unnumbered() const {
  return this != internal_default_instance() && unnumbered_ != NULL;
}
inline void Interfaces_Interface::clear_unnumbered() {
  if (GetArenaNoVirtual() == NULL && unnumbered_ != NULL) {
    delete unnumbered_;
  }
  unnumbered_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_Unnumbered& Interfaces_Interface::_internal_unnumbered() const {
  return *unnumbered_;
}
inline const ::interfaces::Interfaces_Interface_Unnumbered& Interfaces_Interface::unnumbered() const {
  const ::interfaces::Interfaces_Interface_Unnumbered* p = unnumbered_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.unnumbered)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_Unnumbered*>(
      &::interfaces::_Interfaces_Interface_Unnumbered_default_instance_);
}
inline ::interfaces::Interfaces_Interface_Unnumbered* Interfaces_Interface::release_unnumbered() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.unnumbered)
  
  ::interfaces::Interfaces_Interface_Unnumbered* temp = unnumbered_;
  unnumbered_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_Unnumbered* Interfaces_Interface::mutable_unnumbered() {
  
  if (unnumbered_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_Unnumbered>(GetArenaNoVirtual());
    unnumbered_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.unnumbered)
  return unnumbered_;
}
inline void Interfaces_Interface::set_allocated_unnumbered(::interfaces::Interfaces_Interface_Unnumbered* unnumbered) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete unnumbered_;
  }
  if (unnumbered) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unnumbered = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unnumbered, submessage_arena);
    }
    
  } else {
    
  }
  unnumbered_ = unnumbered;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.unnumbered)
}

// .interfaces.Interfaces.Interface.RxModeSettings rx_mode_settings = 12;
inline bool Interfaces_Interface::has_rx_mode_settings() const {
  return this != internal_default_instance() && rx_mode_settings_ != NULL;
}
inline void Interfaces_Interface::clear_rx_mode_settings() {
  if (GetArenaNoVirtual() == NULL && rx_mode_settings_ != NULL) {
    delete rx_mode_settings_;
  }
  rx_mode_settings_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_RxModeSettings& Interfaces_Interface::_internal_rx_mode_settings() const {
  return *rx_mode_settings_;
}
inline const ::interfaces::Interfaces_Interface_RxModeSettings& Interfaces_Interface::rx_mode_settings() const {
  const ::interfaces::Interfaces_Interface_RxModeSettings* p = rx_mode_settings_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.rx_mode_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_RxModeSettings*>(
      &::interfaces::_Interfaces_Interface_RxModeSettings_default_instance_);
}
inline ::interfaces::Interfaces_Interface_RxModeSettings* Interfaces_Interface::release_rx_mode_settings() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.rx_mode_settings)
  
  ::interfaces::Interfaces_Interface_RxModeSettings* temp = rx_mode_settings_;
  rx_mode_settings_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_RxModeSettings* Interfaces_Interface::mutable_rx_mode_settings() {
  
  if (rx_mode_settings_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_RxModeSettings>(GetArenaNoVirtual());
    rx_mode_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.rx_mode_settings)
  return rx_mode_settings_;
}
inline void Interfaces_Interface::set_allocated_rx_mode_settings(::interfaces::Interfaces_Interface_RxModeSettings* rx_mode_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rx_mode_settings_;
  }
  if (rx_mode_settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_mode_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_mode_settings, submessage_arena);
    }
    
  } else {
    
  }
  rx_mode_settings_ = rx_mode_settings;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.rx_mode_settings)
}

// .interfaces.Interfaces.Interface.RxPlacementSettings rx_placement_settings = 13;
inline bool Interfaces_Interface::has_rx_placement_settings() const {
  return this != internal_default_instance() && rx_placement_settings_ != NULL;
}
inline void Interfaces_Interface::clear_rx_placement_settings() {
  if (GetArenaNoVirtual() == NULL && rx_placement_settings_ != NULL) {
    delete rx_placement_settings_;
  }
  rx_placement_settings_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_RxPlacementSettings& Interfaces_Interface::_internal_rx_placement_settings() const {
  return *rx_placement_settings_;
}
inline const ::interfaces::Interfaces_Interface_RxPlacementSettings& Interfaces_Interface::rx_placement_settings() const {
  const ::interfaces::Interfaces_Interface_RxPlacementSettings* p = rx_placement_settings_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.rx_placement_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_RxPlacementSettings*>(
      &::interfaces::_Interfaces_Interface_RxPlacementSettings_default_instance_);
}
inline ::interfaces::Interfaces_Interface_RxPlacementSettings* Interfaces_Interface::release_rx_placement_settings() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.rx_placement_settings)
  
  ::interfaces::Interfaces_Interface_RxPlacementSettings* temp = rx_placement_settings_;
  rx_placement_settings_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_RxPlacementSettings* Interfaces_Interface::mutable_rx_placement_settings() {
  
  if (rx_placement_settings_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_RxPlacementSettings>(GetArenaNoVirtual());
    rx_placement_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.rx_placement_settings)
  return rx_placement_settings_;
}
inline void Interfaces_Interface::set_allocated_rx_placement_settings(::interfaces::Interfaces_Interface_RxPlacementSettings* rx_placement_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rx_placement_settings_;
  }
  if (rx_placement_settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_placement_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_placement_settings, submessage_arena);
    }
    
  } else {
    
  }
  rx_placement_settings_ = rx_placement_settings;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.rx_placement_settings)
}

// .interfaces.Interfaces.Interface.Memif memif = 101;
inline bool Interfaces_Interface::has_memif() const {
  return this != internal_default_instance() && memif_ != NULL;
}
inline void Interfaces_Interface::clear_memif() {
  if (GetArenaNoVirtual() == NULL && memif_ != NULL) {
    delete memif_;
  }
  memif_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_Memif& Interfaces_Interface::_internal_memif() const {
  return *memif_;
}
inline const ::interfaces::Interfaces_Interface_Memif& Interfaces_Interface::memif() const {
  const ::interfaces::Interfaces_Interface_Memif* p = memif_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.memif)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_Memif*>(
      &::interfaces::_Interfaces_Interface_Memif_default_instance_);
}
inline ::interfaces::Interfaces_Interface_Memif* Interfaces_Interface::release_memif() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.memif)
  
  ::interfaces::Interfaces_Interface_Memif* temp = memif_;
  memif_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_Memif* Interfaces_Interface::mutable_memif() {
  
  if (memif_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_Memif>(GetArenaNoVirtual());
    memif_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.memif)
  return memif_;
}
inline void Interfaces_Interface::set_allocated_memif(::interfaces::Interfaces_Interface_Memif* memif) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete memif_;
  }
  if (memif) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memif = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memif, submessage_arena);
    }
    
  } else {
    
  }
  memif_ = memif;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.memif)
}

// .interfaces.Interfaces.Interface.Vxlan vxlan = 102;
inline bool Interfaces_Interface::has_vxlan() const {
  return this != internal_default_instance() && vxlan_ != NULL;
}
inline void Interfaces_Interface::clear_vxlan() {
  if (GetArenaNoVirtual() == NULL && vxlan_ != NULL) {
    delete vxlan_;
  }
  vxlan_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_Vxlan& Interfaces_Interface::_internal_vxlan() const {
  return *vxlan_;
}
inline const ::interfaces::Interfaces_Interface_Vxlan& Interfaces_Interface::vxlan() const {
  const ::interfaces::Interfaces_Interface_Vxlan* p = vxlan_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.vxlan)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_Vxlan*>(
      &::interfaces::_Interfaces_Interface_Vxlan_default_instance_);
}
inline ::interfaces::Interfaces_Interface_Vxlan* Interfaces_Interface::release_vxlan() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.vxlan)
  
  ::interfaces::Interfaces_Interface_Vxlan* temp = vxlan_;
  vxlan_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_Vxlan* Interfaces_Interface::mutable_vxlan() {
  
  if (vxlan_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_Vxlan>(GetArenaNoVirtual());
    vxlan_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.vxlan)
  return vxlan_;
}
inline void Interfaces_Interface::set_allocated_vxlan(::interfaces::Interfaces_Interface_Vxlan* vxlan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vxlan_;
  }
  if (vxlan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vxlan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vxlan, submessage_arena);
    }
    
  } else {
    
  }
  vxlan_ = vxlan;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.vxlan)
}

// .interfaces.Interfaces.Interface.Afpacket afpacket = 103;
inline bool Interfaces_Interface::has_afpacket() const {
  return this != internal_default_instance() && afpacket_ != NULL;
}
inline void Interfaces_Interface::clear_afpacket() {
  if (GetArenaNoVirtual() == NULL && afpacket_ != NULL) {
    delete afpacket_;
  }
  afpacket_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_Afpacket& Interfaces_Interface::_internal_afpacket() const {
  return *afpacket_;
}
inline const ::interfaces::Interfaces_Interface_Afpacket& Interfaces_Interface::afpacket() const {
  const ::interfaces::Interfaces_Interface_Afpacket* p = afpacket_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.afpacket)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_Afpacket*>(
      &::interfaces::_Interfaces_Interface_Afpacket_default_instance_);
}
inline ::interfaces::Interfaces_Interface_Afpacket* Interfaces_Interface::release_afpacket() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.afpacket)
  
  ::interfaces::Interfaces_Interface_Afpacket* temp = afpacket_;
  afpacket_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_Afpacket* Interfaces_Interface::mutable_afpacket() {
  
  if (afpacket_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_Afpacket>(GetArenaNoVirtual());
    afpacket_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.afpacket)
  return afpacket_;
}
inline void Interfaces_Interface::set_allocated_afpacket(::interfaces::Interfaces_Interface_Afpacket* afpacket) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete afpacket_;
  }
  if (afpacket) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      afpacket = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, afpacket, submessage_arena);
    }
    
  } else {
    
  }
  afpacket_ = afpacket;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.afpacket)
}

// .interfaces.Interfaces.Interface.Tap tap = 104;
inline bool Interfaces_Interface::has_tap() const {
  return this != internal_default_instance() && tap_ != NULL;
}
inline void Interfaces_Interface::clear_tap() {
  if (GetArenaNoVirtual() == NULL && tap_ != NULL) {
    delete tap_;
  }
  tap_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_Tap& Interfaces_Interface::_internal_tap() const {
  return *tap_;
}
inline const ::interfaces::Interfaces_Interface_Tap& Interfaces_Interface::tap() const {
  const ::interfaces::Interfaces_Interface_Tap* p = tap_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.tap)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_Tap*>(
      &::interfaces::_Interfaces_Interface_Tap_default_instance_);
}
inline ::interfaces::Interfaces_Interface_Tap* Interfaces_Interface::release_tap() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.tap)
  
  ::interfaces::Interfaces_Interface_Tap* temp = tap_;
  tap_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_Tap* Interfaces_Interface::mutable_tap() {
  
  if (tap_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_Tap>(GetArenaNoVirtual());
    tap_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.tap)
  return tap_;
}
inline void Interfaces_Interface::set_allocated_tap(::interfaces::Interfaces_Interface_Tap* tap) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tap_;
  }
  if (tap) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tap = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tap, submessage_arena);
    }
    
  } else {
    
  }
  tap_ = tap;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.tap)
}

// .interfaces.Interfaces.Interface.VmxNet3 vmx_net3 = 105;
inline bool Interfaces_Interface::has_vmx_net3() const {
  return this != internal_default_instance() && vmx_net3_ != NULL;
}
inline void Interfaces_Interface::clear_vmx_net3() {
  if (GetArenaNoVirtual() == NULL && vmx_net3_ != NULL) {
    delete vmx_net3_;
  }
  vmx_net3_ = NULL;
}
inline const ::interfaces::Interfaces_Interface_VmxNet3& Interfaces_Interface::_internal_vmx_net3() const {
  return *vmx_net3_;
}
inline const ::interfaces::Interfaces_Interface_VmxNet3& Interfaces_Interface::vmx_net3() const {
  const ::interfaces::Interfaces_Interface_VmxNet3* p = vmx_net3_;
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.Interface.vmx_net3)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::Interfaces_Interface_VmxNet3*>(
      &::interfaces::_Interfaces_Interface_VmxNet3_default_instance_);
}
inline ::interfaces::Interfaces_Interface_VmxNet3* Interfaces_Interface::release_vmx_net3() {
  // @@protoc_insertion_point(field_release:interfaces.Interfaces.Interface.vmx_net3)
  
  ::interfaces::Interfaces_Interface_VmxNet3* temp = vmx_net3_;
  vmx_net3_ = NULL;
  return temp;
}
inline ::interfaces::Interfaces_Interface_VmxNet3* Interfaces_Interface::mutable_vmx_net3() {
  
  if (vmx_net3_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::Interfaces_Interface_VmxNet3>(GetArenaNoVirtual());
    vmx_net3_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.Interface.vmx_net3)
  return vmx_net3_;
}
inline void Interfaces_Interface::set_allocated_vmx_net3(::interfaces::Interfaces_Interface_VmxNet3* vmx_net3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vmx_net3_;
  }
  if (vmx_net3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vmx_net3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vmx_net3, submessage_arena);
    }
    
  } else {
    
  }
  vmx_net3_ = vmx_net3;
  // @@protoc_insertion_point(field_set_allocated:interfaces.Interfaces.Interface.vmx_net3)
}

// -------------------------------------------------------------------

// Interfaces

// repeated .interfaces.Interfaces.Interface interfaces = 1;
inline int Interfaces::interfaces_size() const {
  return interfaces_.size();
}
inline void Interfaces::clear_interfaces() {
  interfaces_.Clear();
}
inline ::interfaces::Interfaces_Interface* Interfaces::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.Interfaces.interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >*
Interfaces::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.Interfaces.interfaces)
  return &interfaces_;
}
inline const ::interfaces::Interfaces_Interface& Interfaces::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.Interfaces.interfaces)
  return interfaces_.Get(index);
}
inline ::interfaces::Interfaces_Interface* Interfaces::add_interfaces() {
  // @@protoc_insertion_point(field_add:interfaces.Interfaces.interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::Interfaces_Interface >&
Interfaces::interfaces() const {
  // @@protoc_insertion_point(field_list:interfaces.Interfaces.interfaces)
  return interfaces_;
}

// -------------------------------------------------------------------

// InterfacesState_Interface_Statistics

// uint64 in_packets = 1;
inline void InterfacesState_Interface_Statistics::clear_in_packets() {
  in_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::in_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.in_packets)
  return in_packets_;
}
inline void InterfacesState_Interface_Statistics::set_in_packets(::google::protobuf::uint64 value) {
  
  in_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.in_packets)
}

// uint64 in_bytes = 2;
inline void InterfacesState_Interface_Statistics::clear_in_bytes() {
  in_bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::in_bytes() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.in_bytes)
  return in_bytes_;
}
inline void InterfacesState_Interface_Statistics::set_in_bytes(::google::protobuf::uint64 value) {
  
  in_bytes_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.in_bytes)
}

// uint64 out_packets = 3;
inline void InterfacesState_Interface_Statistics::clear_out_packets() {
  out_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::out_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.out_packets)
  return out_packets_;
}
inline void InterfacesState_Interface_Statistics::set_out_packets(::google::protobuf::uint64 value) {
  
  out_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.out_packets)
}

// uint64 out_bytes = 4;
inline void InterfacesState_Interface_Statistics::clear_out_bytes() {
  out_bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::out_bytes() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.out_bytes)
  return out_bytes_;
}
inline void InterfacesState_Interface_Statistics::set_out_bytes(::google::protobuf::uint64 value) {
  
  out_bytes_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.out_bytes)
}

// uint64 drop_packets = 5;
inline void InterfacesState_Interface_Statistics::clear_drop_packets() {
  drop_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::drop_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.drop_packets)
  return drop_packets_;
}
inline void InterfacesState_Interface_Statistics::set_drop_packets(::google::protobuf::uint64 value) {
  
  drop_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.drop_packets)
}

// uint64 punt_packets = 6;
inline void InterfacesState_Interface_Statistics::clear_punt_packets() {
  punt_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::punt_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.punt_packets)
  return punt_packets_;
}
inline void InterfacesState_Interface_Statistics::set_punt_packets(::google::protobuf::uint64 value) {
  
  punt_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.punt_packets)
}

// uint64 ipv4_packets = 7;
inline void InterfacesState_Interface_Statistics::clear_ipv4_packets() {
  ipv4_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::ipv4_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.ipv4_packets)
  return ipv4_packets_;
}
inline void InterfacesState_Interface_Statistics::set_ipv4_packets(::google::protobuf::uint64 value) {
  
  ipv4_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.ipv4_packets)
}

// uint64 ipv6_packets = 8;
inline void InterfacesState_Interface_Statistics::clear_ipv6_packets() {
  ipv6_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::ipv6_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.ipv6_packets)
  return ipv6_packets_;
}
inline void InterfacesState_Interface_Statistics::set_ipv6_packets(::google::protobuf::uint64 value) {
  
  ipv6_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.ipv6_packets)
}

// uint64 in_nobuf_packets = 9;
inline void InterfacesState_Interface_Statistics::clear_in_nobuf_packets() {
  in_nobuf_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::in_nobuf_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.in_nobuf_packets)
  return in_nobuf_packets_;
}
inline void InterfacesState_Interface_Statistics::set_in_nobuf_packets(::google::protobuf::uint64 value) {
  
  in_nobuf_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.in_nobuf_packets)
}

// uint64 in_miss_packets = 10;
inline void InterfacesState_Interface_Statistics::clear_in_miss_packets() {
  in_miss_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::in_miss_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.in_miss_packets)
  return in_miss_packets_;
}
inline void InterfacesState_Interface_Statistics::set_in_miss_packets(::google::protobuf::uint64 value) {
  
  in_miss_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.in_miss_packets)
}

// uint64 in_error_packets = 11;
inline void InterfacesState_Interface_Statistics::clear_in_error_packets() {
  in_error_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::in_error_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.in_error_packets)
  return in_error_packets_;
}
inline void InterfacesState_Interface_Statistics::set_in_error_packets(::google::protobuf::uint64 value) {
  
  in_error_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.in_error_packets)
}

// uint64 out_error_packets = 12;
inline void InterfacesState_Interface_Statistics::clear_out_error_packets() {
  out_error_packets_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface_Statistics::out_error_packets() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.Statistics.out_error_packets)
  return out_error_packets_;
}
inline void InterfacesState_Interface_Statistics::set_out_error_packets(::google::protobuf::uint64 value) {
  
  out_error_packets_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.Statistics.out_error_packets)
}

// -------------------------------------------------------------------

// InterfacesState_Interface

// string name = 1;
inline void InterfacesState_Interface::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfacesState_Interface::name() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.name)
  return name_.GetNoArena();
}
inline void InterfacesState_Interface::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.name)
}
#if LANG_CXX11
inline void InterfacesState_Interface::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfacesState.Interface.name)
}
#endif
inline void InterfacesState_Interface::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfacesState.Interface.name)
}
inline void InterfacesState_Interface::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfacesState.Interface.name)
}
inline ::std::string* InterfacesState_Interface::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfacesState.Interface.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfacesState_Interface::release_name() {
  // @@protoc_insertion_point(field_release:interfaces.InterfacesState.Interface.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfacesState_Interface::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfacesState.Interface.name)
}

// string internal_name = 2;
inline void InterfacesState_Interface::clear_internal_name() {
  internal_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfacesState_Interface::internal_name() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.internal_name)
  return internal_name_.GetNoArena();
}
inline void InterfacesState_Interface::set_internal_name(const ::std::string& value) {
  
  internal_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.internal_name)
}
#if LANG_CXX11
inline void InterfacesState_Interface::set_internal_name(::std::string&& value) {
  
  internal_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfacesState.Interface.internal_name)
}
#endif
inline void InterfacesState_Interface::set_internal_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  internal_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfacesState.Interface.internal_name)
}
inline void InterfacesState_Interface::set_internal_name(const char* value, size_t size) {
  
  internal_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfacesState.Interface.internal_name)
}
inline ::std::string* InterfacesState_Interface::mutable_internal_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfacesState.Interface.internal_name)
  return internal_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfacesState_Interface::release_internal_name() {
  // @@protoc_insertion_point(field_release:interfaces.InterfacesState.Interface.internal_name)
  
  return internal_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfacesState_Interface::set_allocated_internal_name(::std::string* internal_name) {
  if (internal_name != NULL) {
    
  } else {
    
  }
  internal_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfacesState.Interface.internal_name)
}

// .interfaces.InterfaceType type = 3;
inline void InterfacesState_Interface::clear_type() {
  type_ = 0;
}
inline ::interfaces::InterfaceType InterfacesState_Interface::type() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.type)
  return static_cast< ::interfaces::InterfaceType >(type_);
}
inline void InterfacesState_Interface::set_type(::interfaces::InterfaceType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.type)
}

// uint32 if_index = 4;
inline void InterfacesState_Interface::clear_if_index() {
  if_index_ = 0u;
}
inline ::google::protobuf::uint32 InterfacesState_Interface::if_index() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.if_index)
  return if_index_;
}
inline void InterfacesState_Interface::set_if_index(::google::protobuf::uint32 value) {
  
  if_index_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.if_index)
}

// .interfaces.InterfacesState.Interface.Status admin_status = 5;
inline void InterfacesState_Interface::clear_admin_status() {
  admin_status_ = 0;
}
inline ::interfaces::InterfacesState_Interface_Status InterfacesState_Interface::admin_status() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.admin_status)
  return static_cast< ::interfaces::InterfacesState_Interface_Status >(admin_status_);
}
inline void InterfacesState_Interface::set_admin_status(::interfaces::InterfacesState_Interface_Status value) {
  
  admin_status_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.admin_status)
}

// .interfaces.InterfacesState.Interface.Status oper_status = 6;
inline void InterfacesState_Interface::clear_oper_status() {
  oper_status_ = 0;
}
inline ::interfaces::InterfacesState_Interface_Status InterfacesState_Interface::oper_status() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.oper_status)
  return static_cast< ::interfaces::InterfacesState_Interface_Status >(oper_status_);
}
inline void InterfacesState_Interface::set_oper_status(::interfaces::InterfacesState_Interface_Status value) {
  
  oper_status_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.oper_status)
}

// int64 last_change = 7;
inline void InterfacesState_Interface::clear_last_change() {
  last_change_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InterfacesState_Interface::last_change() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.last_change)
  return last_change_;
}
inline void InterfacesState_Interface::set_last_change(::google::protobuf::int64 value) {
  
  last_change_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.last_change)
}

// string phys_address = 8;
inline void InterfacesState_Interface::clear_phys_address() {
  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfacesState_Interface::phys_address() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.phys_address)
  return phys_address_.GetNoArena();
}
inline void InterfacesState_Interface::set_phys_address(const ::std::string& value) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.phys_address)
}
#if LANG_CXX11
inline void InterfacesState_Interface::set_phys_address(::std::string&& value) {
  
  phys_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfacesState.Interface.phys_address)
}
#endif
inline void InterfacesState_Interface::set_phys_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfacesState.Interface.phys_address)
}
inline void InterfacesState_Interface::set_phys_address(const char* value, size_t size) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfacesState.Interface.phys_address)
}
inline ::std::string* InterfacesState_Interface::mutable_phys_address() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfacesState.Interface.phys_address)
  return phys_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfacesState_Interface::release_phys_address() {
  // @@protoc_insertion_point(field_release:interfaces.InterfacesState.Interface.phys_address)
  
  return phys_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfacesState_Interface::set_allocated_phys_address(::std::string* phys_address) {
  if (phys_address != NULL) {
    
  } else {
    
  }
  phys_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phys_address);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfacesState.Interface.phys_address)
}

// uint64 speed = 9;
inline void InterfacesState_Interface::clear_speed() {
  speed_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InterfacesState_Interface::speed() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.speed)
  return speed_;
}
inline void InterfacesState_Interface::set_speed(::google::protobuf::uint64 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.speed)
}

// uint32 mtu = 10;
inline void InterfacesState_Interface::clear_mtu() {
  mtu_ = 0u;
}
inline ::google::protobuf::uint32 InterfacesState_Interface::mtu() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.mtu)
  return mtu_;
}
inline void InterfacesState_Interface::set_mtu(::google::protobuf::uint32 value) {
  
  mtu_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.mtu)
}

// .interfaces.InterfacesState.Interface.Duplex duplex = 11;
inline void InterfacesState_Interface::clear_duplex() {
  duplex_ = 0;
}
inline ::interfaces::InterfacesState_Interface_Duplex InterfacesState_Interface::duplex() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.duplex)
  return static_cast< ::interfaces::InterfacesState_Interface_Duplex >(duplex_);
}
inline void InterfacesState_Interface::set_duplex(::interfaces::InterfacesState_Interface_Duplex value) {
  
  duplex_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfacesState.Interface.duplex)
}

// .interfaces.InterfacesState.Interface.Statistics statistics = 100;
inline bool InterfacesState_Interface::has_statistics() const {
  return this != internal_default_instance() && statistics_ != NULL;
}
inline void InterfacesState_Interface::clear_statistics() {
  if (GetArenaNoVirtual() == NULL && statistics_ != NULL) {
    delete statistics_;
  }
  statistics_ = NULL;
}
inline const ::interfaces::InterfacesState_Interface_Statistics& InterfacesState_Interface::_internal_statistics() const {
  return *statistics_;
}
inline const ::interfaces::InterfacesState_Interface_Statistics& InterfacesState_Interface::statistics() const {
  const ::interfaces::InterfacesState_Interface_Statistics* p = statistics_;
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.Interface.statistics)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::InterfacesState_Interface_Statistics*>(
      &::interfaces::_InterfacesState_Interface_Statistics_default_instance_);
}
inline ::interfaces::InterfacesState_Interface_Statistics* InterfacesState_Interface::release_statistics() {
  // @@protoc_insertion_point(field_release:interfaces.InterfacesState.Interface.statistics)
  
  ::interfaces::InterfacesState_Interface_Statistics* temp = statistics_;
  statistics_ = NULL;
  return temp;
}
inline ::interfaces::InterfacesState_Interface_Statistics* InterfacesState_Interface::mutable_statistics() {
  
  if (statistics_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::InterfacesState_Interface_Statistics>(GetArenaNoVirtual());
    statistics_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.InterfacesState.Interface.statistics)
  return statistics_;
}
inline void InterfacesState_Interface::set_allocated_statistics(::interfaces::InterfacesState_Interface_Statistics* statistics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete statistics_;
  }
  if (statistics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      statistics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statistics, submessage_arena);
    }
    
  } else {
    
  }
  statistics_ = statistics;
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfacesState.Interface.statistics)
}

// -------------------------------------------------------------------

// InterfacesState

// repeated .interfaces.InterfacesState.Interface interfaces = 1;
inline int InterfacesState::interfaces_size() const {
  return interfaces_.size();
}
inline void InterfacesState::clear_interfaces() {
  interfaces_.Clear();
}
inline ::interfaces::InterfacesState_Interface* InterfacesState::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.InterfacesState.interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::InterfacesState_Interface >*
InterfacesState::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.InterfacesState.interfaces)
  return &interfaces_;
}
inline const ::interfaces::InterfacesState_Interface& InterfacesState::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.InterfacesState.interfaces)
  return interfaces_.Get(index);
}
inline ::interfaces::InterfacesState_Interface* InterfacesState::add_interfaces() {
  // @@protoc_insertion_point(field_add:interfaces.InterfacesState.interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfacesState_Interface >&
InterfacesState::interfaces() const {
  // @@protoc_insertion_point(field_list:interfaces.InterfacesState.interfaces)
  return interfaces_;
}

// -------------------------------------------------------------------

// InterfaceNotification

// .interfaces.InterfaceNotification.NotifType Type = 1;
inline void InterfaceNotification::clear_type() {
  type_ = 0;
}
inline ::interfaces::InterfaceNotification_NotifType InterfaceNotification::type() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceNotification.Type)
  return static_cast< ::interfaces::InterfaceNotification_NotifType >(type_);
}
inline void InterfaceNotification::set_type(::interfaces::InterfaceNotification_NotifType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfaceNotification.Type)
}

// .interfaces.InterfacesState.Interface state = 2;
inline bool InterfaceNotification::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void InterfaceNotification::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::interfaces::InterfacesState_Interface& InterfaceNotification::_internal_state() const {
  return *state_;
}
inline const ::interfaces::InterfacesState_Interface& InterfaceNotification::state() const {
  const ::interfaces::InterfacesState_Interface* p = state_;
  // @@protoc_insertion_point(field_get:interfaces.InterfaceNotification.state)
  return p != NULL ? *p : *reinterpret_cast<const ::interfaces::InterfacesState_Interface*>(
      &::interfaces::_InterfacesState_Interface_default_instance_);
}
inline ::interfaces::InterfacesState_Interface* InterfaceNotification::release_state() {
  // @@protoc_insertion_point(field_release:interfaces.InterfaceNotification.state)
  
  ::interfaces::InterfacesState_Interface* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::interfaces::InterfacesState_Interface* InterfaceNotification::mutable_state() {
  
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::interfaces::InterfacesState_Interface>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceNotification.state)
  return state_;
}
inline void InterfaceNotification::set_allocated_state(::interfaces::InterfacesState_Interface* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfaceNotification.state)
}

// -------------------------------------------------------------------

// InterfaceErrors_Interface_ErrorData

// string change_type = 1;
inline void InterfaceErrors_Interface_ErrorData::clear_change_type() {
  change_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfaceErrors_Interface_ErrorData::change_type() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
  return change_type_.GetNoArena();
}
inline void InterfaceErrors_Interface_ErrorData::set_change_type(const ::std::string& value) {
  
  change_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
}
#if LANG_CXX11
inline void InterfaceErrors_Interface_ErrorData::set_change_type(::std::string&& value) {
  
  change_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
}
#endif
inline void InterfaceErrors_Interface_ErrorData::set_change_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  change_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
}
inline void InterfaceErrors_Interface_ErrorData::set_change_type(const char* value, size_t size) {
  
  change_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
}
inline ::std::string* InterfaceErrors_Interface_ErrorData::mutable_change_type() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
  return change_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfaceErrors_Interface_ErrorData::release_change_type() {
  // @@protoc_insertion_point(field_release:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
  
  return change_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfaceErrors_Interface_ErrorData::set_allocated_change_type(::std::string* change_type) {
  if (change_type != NULL) {
    
  } else {
    
  }
  change_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), change_type);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfaceErrors.Interface.ErrorData.change_type)
}

// string error_message = 2;
inline void InterfaceErrors_Interface_ErrorData::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfaceErrors_Interface_ErrorData::error_message() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
  return error_message_.GetNoArena();
}
inline void InterfaceErrors_Interface_ErrorData::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
}
#if LANG_CXX11
inline void InterfaceErrors_Interface_ErrorData::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
}
#endif
inline void InterfaceErrors_Interface_ErrorData::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
}
inline void InterfaceErrors_Interface_ErrorData::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
}
inline ::std::string* InterfaceErrors_Interface_ErrorData::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfaceErrors_Interface_ErrorData::release_error_message() {
  // @@protoc_insertion_point(field_release:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfaceErrors_Interface_ErrorData::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfaceErrors.Interface.ErrorData.error_message)
}

// int64 last_change = 3;
inline void InterfaceErrors_Interface_ErrorData::clear_last_change() {
  last_change_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InterfaceErrors_Interface_ErrorData::last_change() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.Interface.ErrorData.last_change)
  return last_change_;
}
inline void InterfaceErrors_Interface_ErrorData::set_last_change(::google::protobuf::int64 value) {
  
  last_change_ = value;
  // @@protoc_insertion_point(field_set:interfaces.InterfaceErrors.Interface.ErrorData.last_change)
}

// -------------------------------------------------------------------

// InterfaceErrors_Interface

// string interface_name = 1;
inline void InterfaceErrors_Interface::clear_interface_name() {
  interface_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfaceErrors_Interface::interface_name() const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.Interface.interface_name)
  return interface_name_.GetNoArena();
}
inline void InterfaceErrors_Interface::set_interface_name(const ::std::string& value) {
  
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:interfaces.InterfaceErrors.Interface.interface_name)
}
#if LANG_CXX11
inline void InterfaceErrors_Interface::set_interface_name(::std::string&& value) {
  
  interface_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:interfaces.InterfaceErrors.Interface.interface_name)
}
#endif
inline void InterfaceErrors_Interface::set_interface_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:interfaces.InterfaceErrors.Interface.interface_name)
}
inline void InterfaceErrors_Interface::set_interface_name(const char* value, size_t size) {
  
  interface_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:interfaces.InterfaceErrors.Interface.interface_name)
}
inline ::std::string* InterfaceErrors_Interface::mutable_interface_name() {
  
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceErrors.Interface.interface_name)
  return interface_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfaceErrors_Interface::release_interface_name() {
  // @@protoc_insertion_point(field_release:interfaces.InterfaceErrors.Interface.interface_name)
  
  return interface_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfaceErrors_Interface::set_allocated_interface_name(::std::string* interface_name) {
  if (interface_name != NULL) {
    
  } else {
    
  }
  interface_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface_name);
  // @@protoc_insertion_point(field_set_allocated:interfaces.InterfaceErrors.Interface.interface_name)
}

// repeated .interfaces.InterfaceErrors.Interface.ErrorData error_data = 2;
inline int InterfaceErrors_Interface::error_data_size() const {
  return error_data_.size();
}
inline void InterfaceErrors_Interface::clear_error_data() {
  error_data_.Clear();
}
inline ::interfaces::InterfaceErrors_Interface_ErrorData* InterfaceErrors_Interface::mutable_error_data(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceErrors.Interface.error_data)
  return error_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface_ErrorData >*
InterfaceErrors_Interface::mutable_error_data() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.InterfaceErrors.Interface.error_data)
  return &error_data_;
}
inline const ::interfaces::InterfaceErrors_Interface_ErrorData& InterfaceErrors_Interface::error_data(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.Interface.error_data)
  return error_data_.Get(index);
}
inline ::interfaces::InterfaceErrors_Interface_ErrorData* InterfaceErrors_Interface::add_error_data() {
  // @@protoc_insertion_point(field_add:interfaces.InterfaceErrors.Interface.error_data)
  return error_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface_ErrorData >&
InterfaceErrors_Interface::error_data() const {
  // @@protoc_insertion_point(field_list:interfaces.InterfaceErrors.Interface.error_data)
  return error_data_;
}

// -------------------------------------------------------------------

// InterfaceErrors

// repeated .interfaces.InterfaceErrors.Interface interfaces = 1;
inline int InterfaceErrors::interfaces_size() const {
  return interfaces_.size();
}
inline void InterfaceErrors::clear_interfaces() {
  interfaces_.Clear();
}
inline ::interfaces::InterfaceErrors_Interface* InterfaceErrors::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:interfaces.InterfaceErrors.interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface >*
InterfaceErrors::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:interfaces.InterfaceErrors.interfaces)
  return &interfaces_;
}
inline const ::interfaces::InterfaceErrors_Interface& InterfaceErrors::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:interfaces.InterfaceErrors.interfaces)
  return interfaces_.Get(index);
}
inline ::interfaces::InterfaceErrors_Interface* InterfaceErrors::add_interfaces() {
  // @@protoc_insertion_point(field_add:interfaces.InterfaceErrors.interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::interfaces::InterfaceErrors_Interface >&
InterfaceErrors::interfaces() const {
  // @@protoc_insertion_point(field_list:interfaces.InterfaceErrors.interfaces)
  return interfaces_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace interfaces

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::interfaces::Interfaces_Interface_Memif_MemifMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::Interfaces_Interface_Memif_MemifMode>() {
  return ::interfaces::Interfaces_Interface_Memif_MemifMode_descriptor();
}
template <> struct is_proto_enum< ::interfaces::InterfacesState_Interface_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::InterfacesState_Interface_Status>() {
  return ::interfaces::InterfacesState_Interface_Status_descriptor();
}
template <> struct is_proto_enum< ::interfaces::InterfacesState_Interface_Duplex> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::InterfacesState_Interface_Duplex>() {
  return ::interfaces::InterfacesState_Interface_Duplex_descriptor();
}
template <> struct is_proto_enum< ::interfaces::InterfaceNotification_NotifType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::InterfaceNotification_NotifType>() {
  return ::interfaces::InterfaceNotification_NotifType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::InterfaceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::InterfaceType>() {
  return ::interfaces::InterfaceType_descriptor();
}
template <> struct is_proto_enum< ::interfaces::RxModeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::interfaces::RxModeType>() {
  return ::interfaces::RxModeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_vpp_2fmodel_2finterfaces_2finterfaces_2eproto
