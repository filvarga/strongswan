// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/stn/stn.proto

#include "vpp/model/stn/stn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fstn_2fstn_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fstn_2fstn_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STN_Rule;
}  // namespace protobuf_vpp_2fmodel_2fstn_2fstn_2eproto
namespace stn {
class STN_RuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STN_Rule>
      _instance;
} _STN_Rule_default_instance_;
class STNDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STN>
      _instance;
} _STN_default_instance_;
}  // namespace stn
namespace protobuf_vpp_2fmodel_2fstn_2fstn_2eproto {
static void InitDefaultsSTN_Rule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stn::_STN_Rule_default_instance_;
    new (ptr) ::stn::STN_Rule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stn::STN_Rule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STN_Rule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTN_Rule}, {}};

static void InitDefaultsSTN() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stn::_STN_default_instance_;
    new (ptr) ::stn::STN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stn::STN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_STN =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSTN}, {
      &protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::scc_info_STN_Rule.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_STN_Rule.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STN.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN_Rule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN_Rule, rule_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN_Rule, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN_Rule, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stn::STN, rules_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::stn::STN_Rule)},
  { 8, -1, sizeof(::stn::STN)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::stn::_STN_Rule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::stn::_STN_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/stn/stn.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027vpp/model/stn/stn.proto\022\003stn\"e\n\003STN\022\034\n"
      "\005rules\030\001 \003(\0132\r.stn.STN.Rule\032@\n\004Rule\022\021\n\tr"
      "ule_name\030\003 \001(\t\022\022\n\nip_address\030\001 \001(\t\022\021\n\tin"
      "terface\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 141);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/stn/stn.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fstn_2fstn_2eproto
namespace stn {

// ===================================================================

void STN_Rule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STN_Rule::kRuleNameFieldNumber;
const int STN_Rule::kIpAddressFieldNumber;
const int STN_Rule::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STN_Rule::STN_Rule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::scc_info_STN_Rule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stn.STN.Rule)
}
STN_Rule::STN_Rule(const STN_Rule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  rule_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rule_name().size() > 0) {
    rule_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_name_);
  }
  // @@protoc_insertion_point(copy_constructor:stn.STN.Rule)
}

void STN_Rule::SharedCtor() {
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

STN_Rule::~STN_Rule() {
  // @@protoc_insertion_point(destructor:stn.STN.Rule)
  SharedDtor();
}

void STN_Rule::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void STN_Rule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STN_Rule::descriptor() {
  ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STN_Rule& STN_Rule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::scc_info_STN_Rule.base);
  return *internal_default_instance();
}


void STN_Rule::Clear() {
// @@protoc_insertion_point(message_clear_start:stn.STN.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool STN_Rule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stn.STN.Rule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "stn.STN.Rule.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "stn.STN.Rule.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rule_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rule_name().data(), static_cast<int>(this->rule_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "stn.STN.Rule.rule_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stn.STN.Rule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stn.STN.Rule)
  return false;
#undef DO_
}

void STN_Rule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stn.STN.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_address(), output);
  }

  // string interface = 2;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->interface(), output);
  }

  // string rule_name = 3;
  if (this->rule_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_name().data(), static_cast<int>(this->rule_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.rule_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rule_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stn.STN.Rule)
}

::google::protobuf::uint8* STN_Rule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stn.STN.Rule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_address(), target);
  }

  // string interface = 2;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->interface(), target);
  }

  // string rule_name = 3;
  if (this->rule_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_name().data(), static_cast<int>(this->rule_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "stn.STN.Rule.rule_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rule_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stn.STN.Rule)
  return target;
}

size_t STN_Rule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stn.STN.Rule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_address = 1;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // string interface = 2;
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // string rule_name = 3;
  if (this->rule_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rule_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STN_Rule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stn.STN.Rule)
  GOOGLE_DCHECK_NE(&from, this);
  const STN_Rule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STN_Rule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stn.STN.Rule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stn.STN.Rule)
    MergeFrom(*source);
  }
}

void STN_Rule::MergeFrom(const STN_Rule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stn.STN.Rule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.rule_name().size() > 0) {

    rule_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_name_);
  }
}

void STN_Rule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stn.STN.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STN_Rule::CopyFrom(const STN_Rule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stn.STN.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STN_Rule::IsInitialized() const {
  return true;
}

void STN_Rule::Swap(STN_Rule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STN_Rule::InternalSwap(STN_Rule* other) {
  using std::swap;
  ip_address_.Swap(&other->ip_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  interface_.Swap(&other->interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rule_name_.Swap(&other->rule_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STN_Rule::GetMetadata() const {
  protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STN::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STN::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STN::STN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::scc_info_STN.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stn.STN)
}
STN::STN(const STN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:stn.STN)
}

void STN::SharedCtor() {
}

STN::~STN() {
  // @@protoc_insertion_point(destructor:stn.STN)
  SharedDtor();
}

void STN::SharedDtor() {
}

void STN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STN::descriptor() {
  ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STN& STN::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::scc_info_STN.base);
  return *internal_default_instance();
}


void STN::Clear() {
// @@protoc_insertion_point(message_clear_start:stn.STN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  _internal_metadata_.Clear();
}

bool STN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stn.STN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stn.STN.Rule rules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stn.STN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stn.STN)
  return false;
#undef DO_
}

void STN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stn.STN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stn.STN.Rule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rules(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:stn.STN)
}

::google::protobuf::uint8* STN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stn.STN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stn.STN.Rule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stn.STN)
  return target;
}

size_t STN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stn.STN)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .stn.STN.Rule rules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stn.STN)
  GOOGLE_DCHECK_NE(&from, this);
  const STN* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stn.STN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stn.STN)
    MergeFrom(*source);
  }
}

void STN::MergeFrom(const STN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stn.STN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
}

void STN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stn.STN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STN::CopyFrom(const STN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stn.STN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STN::IsInitialized() const {
  return true;
}

void STN::Swap(STN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STN::InternalSwap(STN* other) {
  using std::swap;
  CastToBase(&rules_)->InternalSwap(CastToBase(&other->rules_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STN::GetMetadata() const {
  protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fstn_2fstn_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace stn
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stn::STN_Rule* Arena::CreateMaybeMessage< ::stn::STN_Rule >(Arena* arena) {
  return Arena::CreateInternal< ::stn::STN_Rule >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stn::STN* Arena::CreateMaybeMessage< ::stn::STN >(Arena* arena) {
  return Arena::CreateInternal< ::stn::STN >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
