// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/l3/l3.proto

#ifndef PROTOBUF_INCLUDED_vpp_2fmodel_2fl3_2fl3_2eproto
#define PROTOBUF_INCLUDED_vpp_2fmodel_2fl3_2fl3_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl3_2fl3_2eproto 

namespace protobuf_vpp_2fmodel_2fl3_2fl3_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_vpp_2fmodel_2fl3_2fl3_2eproto
namespace l3 {
class ArpTable;
class ArpTableDefaultTypeInternal;
extern ArpTableDefaultTypeInternal _ArpTable_default_instance_;
class ArpTable_ArpEntry;
class ArpTable_ArpEntryDefaultTypeInternal;
extern ArpTable_ArpEntryDefaultTypeInternal _ArpTable_ArpEntry_default_instance_;
class IPScanNeighbor;
class IPScanNeighborDefaultTypeInternal;
extern IPScanNeighborDefaultTypeInternal _IPScanNeighbor_default_instance_;
class ProxyArpInterfaces;
class ProxyArpInterfacesDefaultTypeInternal;
extern ProxyArpInterfacesDefaultTypeInternal _ProxyArpInterfaces_default_instance_;
class ProxyArpInterfaces_InterfaceList;
class ProxyArpInterfaces_InterfaceListDefaultTypeInternal;
extern ProxyArpInterfaces_InterfaceListDefaultTypeInternal _ProxyArpInterfaces_InterfaceList_default_instance_;
class ProxyArpInterfaces_InterfaceList_Interface;
class ProxyArpInterfaces_InterfaceList_InterfaceDefaultTypeInternal;
extern ProxyArpInterfaces_InterfaceList_InterfaceDefaultTypeInternal _ProxyArpInterfaces_InterfaceList_Interface_default_instance_;
class ProxyArpRanges;
class ProxyArpRangesDefaultTypeInternal;
extern ProxyArpRangesDefaultTypeInternal _ProxyArpRanges_default_instance_;
class ProxyArpRanges_RangeList;
class ProxyArpRanges_RangeListDefaultTypeInternal;
extern ProxyArpRanges_RangeListDefaultTypeInternal _ProxyArpRanges_RangeList_default_instance_;
class ProxyArpRanges_RangeList_Range;
class ProxyArpRanges_RangeList_RangeDefaultTypeInternal;
extern ProxyArpRanges_RangeList_RangeDefaultTypeInternal _ProxyArpRanges_RangeList_Range_default_instance_;
class STNTable;
class STNTableDefaultTypeInternal;
extern STNTableDefaultTypeInternal _STNTable_default_instance_;
class STNTable_STNTableEntry;
class STNTable_STNTableEntryDefaultTypeInternal;
extern STNTable_STNTableEntryDefaultTypeInternal _STNTable_STNTableEntry_default_instance_;
class StaticRoutes;
class StaticRoutesDefaultTypeInternal;
extern StaticRoutesDefaultTypeInternal _StaticRoutes_default_instance_;
class StaticRoutes_Route;
class StaticRoutes_RouteDefaultTypeInternal;
extern StaticRoutes_RouteDefaultTypeInternal _StaticRoutes_Route_default_instance_;
}  // namespace l3
namespace google {
namespace protobuf {
template<> ::l3::ArpTable* Arena::CreateMaybeMessage<::l3::ArpTable>(Arena*);
template<> ::l3::ArpTable_ArpEntry* Arena::CreateMaybeMessage<::l3::ArpTable_ArpEntry>(Arena*);
template<> ::l3::IPScanNeighbor* Arena::CreateMaybeMessage<::l3::IPScanNeighbor>(Arena*);
template<> ::l3::ProxyArpInterfaces* Arena::CreateMaybeMessage<::l3::ProxyArpInterfaces>(Arena*);
template<> ::l3::ProxyArpInterfaces_InterfaceList* Arena::CreateMaybeMessage<::l3::ProxyArpInterfaces_InterfaceList>(Arena*);
template<> ::l3::ProxyArpInterfaces_InterfaceList_Interface* Arena::CreateMaybeMessage<::l3::ProxyArpInterfaces_InterfaceList_Interface>(Arena*);
template<> ::l3::ProxyArpRanges* Arena::CreateMaybeMessage<::l3::ProxyArpRanges>(Arena*);
template<> ::l3::ProxyArpRanges_RangeList* Arena::CreateMaybeMessage<::l3::ProxyArpRanges_RangeList>(Arena*);
template<> ::l3::ProxyArpRanges_RangeList_Range* Arena::CreateMaybeMessage<::l3::ProxyArpRanges_RangeList_Range>(Arena*);
template<> ::l3::STNTable* Arena::CreateMaybeMessage<::l3::STNTable>(Arena*);
template<> ::l3::STNTable_STNTableEntry* Arena::CreateMaybeMessage<::l3::STNTable_STNTableEntry>(Arena*);
template<> ::l3::StaticRoutes* Arena::CreateMaybeMessage<::l3::StaticRoutes>(Arena*);
template<> ::l3::StaticRoutes_Route* Arena::CreateMaybeMessage<::l3::StaticRoutes_Route>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace l3 {

enum StaticRoutes_Route_RouteType {
  StaticRoutes_Route_RouteType_INTRA_VRF = 0,
  StaticRoutes_Route_RouteType_INTER_VRF = 1,
  StaticRoutes_Route_RouteType_DROP = 2,
  StaticRoutes_Route_RouteType_StaticRoutes_Route_RouteType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StaticRoutes_Route_RouteType_StaticRoutes_Route_RouteType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StaticRoutes_Route_RouteType_IsValid(int value);
const StaticRoutes_Route_RouteType StaticRoutes_Route_RouteType_RouteType_MIN = StaticRoutes_Route_RouteType_INTRA_VRF;
const StaticRoutes_Route_RouteType StaticRoutes_Route_RouteType_RouteType_MAX = StaticRoutes_Route_RouteType_DROP;
const int StaticRoutes_Route_RouteType_RouteType_ARRAYSIZE = StaticRoutes_Route_RouteType_RouteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StaticRoutes_Route_RouteType_descriptor();
inline const ::std::string& StaticRoutes_Route_RouteType_Name(StaticRoutes_Route_RouteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StaticRoutes_Route_RouteType_descriptor(), value);
}
inline bool StaticRoutes_Route_RouteType_Parse(
    const ::std::string& name, StaticRoutes_Route_RouteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StaticRoutes_Route_RouteType>(
    StaticRoutes_Route_RouteType_descriptor(), name, value);
}
enum IPScanNeighbor_Mode {
  IPScanNeighbor_Mode_DISABLED = 0,
  IPScanNeighbor_Mode_IPv4 = 1,
  IPScanNeighbor_Mode_IPv6 = 2,
  IPScanNeighbor_Mode_BOTH = 3,
  IPScanNeighbor_Mode_IPScanNeighbor_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IPScanNeighbor_Mode_IPScanNeighbor_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IPScanNeighbor_Mode_IsValid(int value);
const IPScanNeighbor_Mode IPScanNeighbor_Mode_Mode_MIN = IPScanNeighbor_Mode_DISABLED;
const IPScanNeighbor_Mode IPScanNeighbor_Mode_Mode_MAX = IPScanNeighbor_Mode_BOTH;
const int IPScanNeighbor_Mode_Mode_ARRAYSIZE = IPScanNeighbor_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* IPScanNeighbor_Mode_descriptor();
inline const ::std::string& IPScanNeighbor_Mode_Name(IPScanNeighbor_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    IPScanNeighbor_Mode_descriptor(), value);
}
inline bool IPScanNeighbor_Mode_Parse(
    const ::std::string& name, IPScanNeighbor_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IPScanNeighbor_Mode>(
    IPScanNeighbor_Mode_descriptor(), name, value);
}
// ===================================================================

class StaticRoutes_Route : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.StaticRoutes.Route) */ {
 public:
  StaticRoutes_Route();
  virtual ~StaticRoutes_Route();

  StaticRoutes_Route(const StaticRoutes_Route& from);

  inline StaticRoutes_Route& operator=(const StaticRoutes_Route& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StaticRoutes_Route(StaticRoutes_Route&& from) noexcept
    : StaticRoutes_Route() {
    *this = ::std::move(from);
  }

  inline StaticRoutes_Route& operator=(StaticRoutes_Route&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StaticRoutes_Route& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StaticRoutes_Route* internal_default_instance() {
    return reinterpret_cast<const StaticRoutes_Route*>(
               &_StaticRoutes_Route_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StaticRoutes_Route* other);
  friend void swap(StaticRoutes_Route& a, StaticRoutes_Route& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StaticRoutes_Route* New() const final {
    return CreateMaybeMessage<StaticRoutes_Route>(NULL);
  }

  StaticRoutes_Route* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StaticRoutes_Route>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StaticRoutes_Route& from);
  void MergeFrom(const StaticRoutes_Route& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StaticRoutes_Route* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StaticRoutes_Route_RouteType RouteType;
  static const RouteType INTRA_VRF =
    StaticRoutes_Route_RouteType_INTRA_VRF;
  static const RouteType INTER_VRF =
    StaticRoutes_Route_RouteType_INTER_VRF;
  static const RouteType DROP =
    StaticRoutes_Route_RouteType_DROP;
  static inline bool RouteType_IsValid(int value) {
    return StaticRoutes_Route_RouteType_IsValid(value);
  }
  static const RouteType RouteType_MIN =
    StaticRoutes_Route_RouteType_RouteType_MIN;
  static const RouteType RouteType_MAX =
    StaticRoutes_Route_RouteType_RouteType_MAX;
  static const int RouteType_ARRAYSIZE =
    StaticRoutes_Route_RouteType_RouteType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RouteType_descriptor() {
    return StaticRoutes_Route_RouteType_descriptor();
  }
  static inline const ::std::string& RouteType_Name(RouteType value) {
    return StaticRoutes_Route_RouteType_Name(value);
  }
  static inline bool RouteType_Parse(const ::std::string& name,
      RouteType* value) {
    return StaticRoutes_Route_RouteType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string dst_ip_addr = 3;
  void clear_dst_ip_addr();
  static const int kDstIpAddrFieldNumber = 3;
  const ::std::string& dst_ip_addr() const;
  void set_dst_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_ip_addr(::std::string&& value);
  #endif
  void set_dst_ip_addr(const char* value);
  void set_dst_ip_addr(const char* value, size_t size);
  ::std::string* mutable_dst_ip_addr();
  ::std::string* release_dst_ip_addr();
  void set_allocated_dst_ip_addr(::std::string* dst_ip_addr);

  // string next_hop_addr = 4;
  void clear_next_hop_addr();
  static const int kNextHopAddrFieldNumber = 4;
  const ::std::string& next_hop_addr() const;
  void set_next_hop_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_next_hop_addr(::std::string&& value);
  #endif
  void set_next_hop_addr(const char* value);
  void set_next_hop_addr(const char* value, size_t size);
  ::std::string* mutable_next_hop_addr();
  ::std::string* release_next_hop_addr();
  void set_allocated_next_hop_addr(::std::string* next_hop_addr);

  // string outgoing_interface = 5;
  void clear_outgoing_interface();
  static const int kOutgoingInterfaceFieldNumber = 5;
  const ::std::string& outgoing_interface() const;
  void set_outgoing_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_outgoing_interface(::std::string&& value);
  #endif
  void set_outgoing_interface(const char* value);
  void set_outgoing_interface(const char* value, size_t size);
  ::std::string* mutable_outgoing_interface();
  ::std::string* release_outgoing_interface();
  void set_allocated_outgoing_interface(::std::string* outgoing_interface);

  // uint32 vrf_id = 1;
  void clear_vrf_id();
  static const int kVrfIdFieldNumber = 1;
  ::google::protobuf::uint32 vrf_id() const;
  void set_vrf_id(::google::protobuf::uint32 value);

  // uint32 weight = 6;
  void clear_weight();
  static const int kWeightFieldNumber = 6;
  ::google::protobuf::uint32 weight() const;
  void set_weight(::google::protobuf::uint32 value);

  // uint32 preference = 7;
  void clear_preference();
  static const int kPreferenceFieldNumber = 7;
  ::google::protobuf::uint32 preference() const;
  void set_preference(::google::protobuf::uint32 value);

  // uint32 via_vrf_id = 8;
  void clear_via_vrf_id();
  static const int kViaVrfIdFieldNumber = 8;
  ::google::protobuf::uint32 via_vrf_id() const;
  void set_via_vrf_id(::google::protobuf::uint32 value);

  // .l3.StaticRoutes.Route.RouteType type = 10;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  ::l3::StaticRoutes_Route_RouteType type() const;
  void set_type(::l3::StaticRoutes_Route_RouteType value);

  // @@protoc_insertion_point(class_scope:l3.StaticRoutes.Route)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr dst_ip_addr_;
  ::google::protobuf::internal::ArenaStringPtr next_hop_addr_;
  ::google::protobuf::internal::ArenaStringPtr outgoing_interface_;
  ::google::protobuf::uint32 vrf_id_;
  ::google::protobuf::uint32 weight_;
  ::google::protobuf::uint32 preference_;
  ::google::protobuf::uint32 via_vrf_id_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StaticRoutes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.StaticRoutes) */ {
 public:
  StaticRoutes();
  virtual ~StaticRoutes();

  StaticRoutes(const StaticRoutes& from);

  inline StaticRoutes& operator=(const StaticRoutes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StaticRoutes(StaticRoutes&& from) noexcept
    : StaticRoutes() {
    *this = ::std::move(from);
  }

  inline StaticRoutes& operator=(StaticRoutes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StaticRoutes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StaticRoutes* internal_default_instance() {
    return reinterpret_cast<const StaticRoutes*>(
               &_StaticRoutes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StaticRoutes* other);
  friend void swap(StaticRoutes& a, StaticRoutes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StaticRoutes* New() const final {
    return CreateMaybeMessage<StaticRoutes>(NULL);
  }

  StaticRoutes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StaticRoutes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StaticRoutes& from);
  void MergeFrom(const StaticRoutes& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StaticRoutes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StaticRoutes_Route Route;

  // accessors -------------------------------------------------------

  // repeated .l3.StaticRoutes.Route routes = 1;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 1;
  ::l3::StaticRoutes_Route* mutable_routes(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
      mutable_routes();
  const ::l3::StaticRoutes_Route& routes(int index) const;
  ::l3::StaticRoutes_Route* add_routes();
  const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
      routes() const;

  // @@protoc_insertion_point(class_scope:l3.StaticRoutes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route > routes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArpTable_ArpEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ArpTable.ArpEntry) */ {
 public:
  ArpTable_ArpEntry();
  virtual ~ArpTable_ArpEntry();

  ArpTable_ArpEntry(const ArpTable_ArpEntry& from);

  inline ArpTable_ArpEntry& operator=(const ArpTable_ArpEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArpTable_ArpEntry(ArpTable_ArpEntry&& from) noexcept
    : ArpTable_ArpEntry() {
    *this = ::std::move(from);
  }

  inline ArpTable_ArpEntry& operator=(ArpTable_ArpEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArpTable_ArpEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArpTable_ArpEntry* internal_default_instance() {
    return reinterpret_cast<const ArpTable_ArpEntry*>(
               &_ArpTable_ArpEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ArpTable_ArpEntry* other);
  friend void swap(ArpTable_ArpEntry& a, ArpTable_ArpEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArpTable_ArpEntry* New() const final {
    return CreateMaybeMessage<ArpTable_ArpEntry>(NULL);
  }

  ArpTable_ArpEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArpTable_ArpEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArpTable_ArpEntry& from);
  void MergeFrom(const ArpTable_ArpEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArpTable_ArpEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string interface = 1;
  void clear_interface();
  static const int kInterfaceFieldNumber = 1;
  const ::std::string& interface() const;
  void set_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_interface(::std::string&& value);
  #endif
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  ::std::string* mutable_interface();
  ::std::string* release_interface();
  void set_allocated_interface(::std::string* interface);

  // string ip_address = 2;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 2;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_address(::std::string&& value);
  #endif
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // string phys_address = 3;
  void clear_phys_address();
  static const int kPhysAddressFieldNumber = 3;
  const ::std::string& phys_address() const;
  void set_phys_address(const ::std::string& value);
  #if LANG_CXX11
  void set_phys_address(::std::string&& value);
  #endif
  void set_phys_address(const char* value);
  void set_phys_address(const char* value, size_t size);
  ::std::string* mutable_phys_address();
  ::std::string* release_phys_address();
  void set_allocated_phys_address(::std::string* phys_address);

  // bool static = 4;
  void clear_static_();
  static const int kStaticFieldNumber = 4;
  bool static_() const;
  void set_static_(bool value);

  // @@protoc_insertion_point(class_scope:l3.ArpTable.ArpEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr interface_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  ::google::protobuf::internal::ArenaStringPtr phys_address_;
  bool static__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ArpTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ArpTable) */ {
 public:
  ArpTable();
  virtual ~ArpTable();

  ArpTable(const ArpTable& from);

  inline ArpTable& operator=(const ArpTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArpTable(ArpTable&& from) noexcept
    : ArpTable() {
    *this = ::std::move(from);
  }

  inline ArpTable& operator=(ArpTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArpTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArpTable* internal_default_instance() {
    return reinterpret_cast<const ArpTable*>(
               &_ArpTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ArpTable* other);
  friend void swap(ArpTable& a, ArpTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArpTable* New() const final {
    return CreateMaybeMessage<ArpTable>(NULL);
  }

  ArpTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArpTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArpTable& from);
  void MergeFrom(const ArpTable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArpTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ArpTable_ArpEntry ArpEntry;

  // accessors -------------------------------------------------------

  // repeated .l3.ArpTable.ArpEntry arp_entries = 1;
  int arp_entries_size() const;
  void clear_arp_entries();
  static const int kArpEntriesFieldNumber = 1;
  ::l3::ArpTable_ArpEntry* mutable_arp_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
      mutable_arp_entries();
  const ::l3::ArpTable_ArpEntry& arp_entries(int index) const;
  ::l3::ArpTable_ArpEntry* add_arp_entries();
  const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
      arp_entries() const;

  // @@protoc_insertion_point(class_scope:l3.ArpTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry > arp_entries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpRanges_RangeList_Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpRanges.RangeList.Range) */ {
 public:
  ProxyArpRanges_RangeList_Range();
  virtual ~ProxyArpRanges_RangeList_Range();

  ProxyArpRanges_RangeList_Range(const ProxyArpRanges_RangeList_Range& from);

  inline ProxyArpRanges_RangeList_Range& operator=(const ProxyArpRanges_RangeList_Range& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpRanges_RangeList_Range(ProxyArpRanges_RangeList_Range&& from) noexcept
    : ProxyArpRanges_RangeList_Range() {
    *this = ::std::move(from);
  }

  inline ProxyArpRanges_RangeList_Range& operator=(ProxyArpRanges_RangeList_Range&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpRanges_RangeList_Range& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpRanges_RangeList_Range* internal_default_instance() {
    return reinterpret_cast<const ProxyArpRanges_RangeList_Range*>(
               &_ProxyArpRanges_RangeList_Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ProxyArpRanges_RangeList_Range* other);
  friend void swap(ProxyArpRanges_RangeList_Range& a, ProxyArpRanges_RangeList_Range& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpRanges_RangeList_Range* New() const final {
    return CreateMaybeMessage<ProxyArpRanges_RangeList_Range>(NULL);
  }

  ProxyArpRanges_RangeList_Range* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpRanges_RangeList_Range>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpRanges_RangeList_Range& from);
  void MergeFrom(const ProxyArpRanges_RangeList_Range& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpRanges_RangeList_Range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string first_ip = 1;
  void clear_first_ip();
  static const int kFirstIpFieldNumber = 1;
  const ::std::string& first_ip() const;
  void set_first_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_first_ip(::std::string&& value);
  #endif
  void set_first_ip(const char* value);
  void set_first_ip(const char* value, size_t size);
  ::std::string* mutable_first_ip();
  ::std::string* release_first_ip();
  void set_allocated_first_ip(::std::string* first_ip);

  // string last_ip = 2;
  void clear_last_ip();
  static const int kLastIpFieldNumber = 2;
  const ::std::string& last_ip() const;
  void set_last_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_last_ip(::std::string&& value);
  #endif
  void set_last_ip(const char* value);
  void set_last_ip(const char* value, size_t size);
  ::std::string* mutable_last_ip();
  ::std::string* release_last_ip();
  void set_allocated_last_ip(::std::string* last_ip);

  // @@protoc_insertion_point(class_scope:l3.ProxyArpRanges.RangeList.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr first_ip_;
  ::google::protobuf::internal::ArenaStringPtr last_ip_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpRanges_RangeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpRanges.RangeList) */ {
 public:
  ProxyArpRanges_RangeList();
  virtual ~ProxyArpRanges_RangeList();

  ProxyArpRanges_RangeList(const ProxyArpRanges_RangeList& from);

  inline ProxyArpRanges_RangeList& operator=(const ProxyArpRanges_RangeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpRanges_RangeList(ProxyArpRanges_RangeList&& from) noexcept
    : ProxyArpRanges_RangeList() {
    *this = ::std::move(from);
  }

  inline ProxyArpRanges_RangeList& operator=(ProxyArpRanges_RangeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpRanges_RangeList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpRanges_RangeList* internal_default_instance() {
    return reinterpret_cast<const ProxyArpRanges_RangeList*>(
               &_ProxyArpRanges_RangeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ProxyArpRanges_RangeList* other);
  friend void swap(ProxyArpRanges_RangeList& a, ProxyArpRanges_RangeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpRanges_RangeList* New() const final {
    return CreateMaybeMessage<ProxyArpRanges_RangeList>(NULL);
  }

  ProxyArpRanges_RangeList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpRanges_RangeList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpRanges_RangeList& from);
  void MergeFrom(const ProxyArpRanges_RangeList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpRanges_RangeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProxyArpRanges_RangeList_Range Range;

  // accessors -------------------------------------------------------

  // repeated .l3.ProxyArpRanges.RangeList.Range ranges = 2;
  int ranges_size() const;
  void clear_ranges();
  static const int kRangesFieldNumber = 2;
  ::l3::ProxyArpRanges_RangeList_Range* mutable_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList_Range >*
      mutable_ranges();
  const ::l3::ProxyArpRanges_RangeList_Range& ranges(int index) const;
  ::l3::ProxyArpRanges_RangeList_Range* add_ranges();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList_Range >&
      ranges() const;

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // @@protoc_insertion_point(class_scope:l3.ProxyArpRanges.RangeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList_Range > ranges_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpRanges : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpRanges) */ {
 public:
  ProxyArpRanges();
  virtual ~ProxyArpRanges();

  ProxyArpRanges(const ProxyArpRanges& from);

  inline ProxyArpRanges& operator=(const ProxyArpRanges& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpRanges(ProxyArpRanges&& from) noexcept
    : ProxyArpRanges() {
    *this = ::std::move(from);
  }

  inline ProxyArpRanges& operator=(ProxyArpRanges&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpRanges& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpRanges* internal_default_instance() {
    return reinterpret_cast<const ProxyArpRanges*>(
               &_ProxyArpRanges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ProxyArpRanges* other);
  friend void swap(ProxyArpRanges& a, ProxyArpRanges& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpRanges* New() const final {
    return CreateMaybeMessage<ProxyArpRanges>(NULL);
  }

  ProxyArpRanges* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpRanges>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpRanges& from);
  void MergeFrom(const ProxyArpRanges& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpRanges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProxyArpRanges_RangeList RangeList;

  // accessors -------------------------------------------------------

  // repeated .l3.ProxyArpRanges.RangeList range_lists = 1;
  int range_lists_size() const;
  void clear_range_lists();
  static const int kRangeListsFieldNumber = 1;
  ::l3::ProxyArpRanges_RangeList* mutable_range_lists(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >*
      mutable_range_lists();
  const ::l3::ProxyArpRanges_RangeList& range_lists(int index) const;
  ::l3::ProxyArpRanges_RangeList* add_range_lists();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >&
      range_lists() const;

  // @@protoc_insertion_point(class_scope:l3.ProxyArpRanges)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList > range_lists_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpInterfaces_InterfaceList_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpInterfaces.InterfaceList.Interface) */ {
 public:
  ProxyArpInterfaces_InterfaceList_Interface();
  virtual ~ProxyArpInterfaces_InterfaceList_Interface();

  ProxyArpInterfaces_InterfaceList_Interface(const ProxyArpInterfaces_InterfaceList_Interface& from);

  inline ProxyArpInterfaces_InterfaceList_Interface& operator=(const ProxyArpInterfaces_InterfaceList_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpInterfaces_InterfaceList_Interface(ProxyArpInterfaces_InterfaceList_Interface&& from) noexcept
    : ProxyArpInterfaces_InterfaceList_Interface() {
    *this = ::std::move(from);
  }

  inline ProxyArpInterfaces_InterfaceList_Interface& operator=(ProxyArpInterfaces_InterfaceList_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpInterfaces_InterfaceList_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpInterfaces_InterfaceList_Interface* internal_default_instance() {
    return reinterpret_cast<const ProxyArpInterfaces_InterfaceList_Interface*>(
               &_ProxyArpInterfaces_InterfaceList_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ProxyArpInterfaces_InterfaceList_Interface* other);
  friend void swap(ProxyArpInterfaces_InterfaceList_Interface& a, ProxyArpInterfaces_InterfaceList_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpInterfaces_InterfaceList_Interface* New() const final {
    return CreateMaybeMessage<ProxyArpInterfaces_InterfaceList_Interface>(NULL);
  }

  ProxyArpInterfaces_InterfaceList_Interface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpInterfaces_InterfaceList_Interface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpInterfaces_InterfaceList_Interface& from);
  void MergeFrom(const ProxyArpInterfaces_InterfaceList_Interface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpInterfaces_InterfaceList_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:l3.ProxyArpInterfaces.InterfaceList.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpInterfaces_InterfaceList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpInterfaces.InterfaceList) */ {
 public:
  ProxyArpInterfaces_InterfaceList();
  virtual ~ProxyArpInterfaces_InterfaceList();

  ProxyArpInterfaces_InterfaceList(const ProxyArpInterfaces_InterfaceList& from);

  inline ProxyArpInterfaces_InterfaceList& operator=(const ProxyArpInterfaces_InterfaceList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpInterfaces_InterfaceList(ProxyArpInterfaces_InterfaceList&& from) noexcept
    : ProxyArpInterfaces_InterfaceList() {
    *this = ::std::move(from);
  }

  inline ProxyArpInterfaces_InterfaceList& operator=(ProxyArpInterfaces_InterfaceList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpInterfaces_InterfaceList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpInterfaces_InterfaceList* internal_default_instance() {
    return reinterpret_cast<const ProxyArpInterfaces_InterfaceList*>(
               &_ProxyArpInterfaces_InterfaceList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ProxyArpInterfaces_InterfaceList* other);
  friend void swap(ProxyArpInterfaces_InterfaceList& a, ProxyArpInterfaces_InterfaceList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpInterfaces_InterfaceList* New() const final {
    return CreateMaybeMessage<ProxyArpInterfaces_InterfaceList>(NULL);
  }

  ProxyArpInterfaces_InterfaceList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpInterfaces_InterfaceList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpInterfaces_InterfaceList& from);
  void MergeFrom(const ProxyArpInterfaces_InterfaceList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpInterfaces_InterfaceList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProxyArpInterfaces_InterfaceList_Interface Interface;

  // accessors -------------------------------------------------------

  // repeated .l3.ProxyArpInterfaces.InterfaceList.Interface interfaces = 2;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 2;
  ::l3::ProxyArpInterfaces_InterfaceList_Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList_Interface >*
      mutable_interfaces();
  const ::l3::ProxyArpInterfaces_InterfaceList_Interface& interfaces(int index) const;
  ::l3::ProxyArpInterfaces_InterfaceList_Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList_Interface >&
      interfaces() const;

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // @@protoc_insertion_point(class_scope:l3.ProxyArpInterfaces.InterfaceList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList_Interface > interfaces_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyArpInterfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.ProxyArpInterfaces) */ {
 public:
  ProxyArpInterfaces();
  virtual ~ProxyArpInterfaces();

  ProxyArpInterfaces(const ProxyArpInterfaces& from);

  inline ProxyArpInterfaces& operator=(const ProxyArpInterfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyArpInterfaces(ProxyArpInterfaces&& from) noexcept
    : ProxyArpInterfaces() {
    *this = ::std::move(from);
  }

  inline ProxyArpInterfaces& operator=(ProxyArpInterfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyArpInterfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyArpInterfaces* internal_default_instance() {
    return reinterpret_cast<const ProxyArpInterfaces*>(
               &_ProxyArpInterfaces_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ProxyArpInterfaces* other);
  friend void swap(ProxyArpInterfaces& a, ProxyArpInterfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyArpInterfaces* New() const final {
    return CreateMaybeMessage<ProxyArpInterfaces>(NULL);
  }

  ProxyArpInterfaces* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProxyArpInterfaces>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProxyArpInterfaces& from);
  void MergeFrom(const ProxyArpInterfaces& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProxyArpInterfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ProxyArpInterfaces_InterfaceList InterfaceList;

  // accessors -------------------------------------------------------

  // repeated .l3.ProxyArpInterfaces.InterfaceList interface_lists = 1;
  int interface_lists_size() const;
  void clear_interface_lists();
  static const int kInterfaceListsFieldNumber = 1;
  ::l3::ProxyArpInterfaces_InterfaceList* mutable_interface_lists(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >*
      mutable_interface_lists();
  const ::l3::ProxyArpInterfaces_InterfaceList& interface_lists(int index) const;
  ::l3::ProxyArpInterfaces_InterfaceList* add_interface_lists();
  const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >&
      interface_lists() const;

  // @@protoc_insertion_point(class_scope:l3.ProxyArpInterfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList > interface_lists_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class STNTable_STNTableEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.STNTable.STNTableEntry) */ {
 public:
  STNTable_STNTableEntry();
  virtual ~STNTable_STNTableEntry();

  STNTable_STNTableEntry(const STNTable_STNTableEntry& from);

  inline STNTable_STNTableEntry& operator=(const STNTable_STNTableEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  STNTable_STNTableEntry(STNTable_STNTableEntry&& from) noexcept
    : STNTable_STNTableEntry() {
    *this = ::std::move(from);
  }

  inline STNTable_STNTableEntry& operator=(STNTable_STNTableEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const STNTable_STNTableEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const STNTable_STNTableEntry* internal_default_instance() {
    return reinterpret_cast<const STNTable_STNTableEntry*>(
               &_STNTable_STNTableEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(STNTable_STNTableEntry* other);
  friend void swap(STNTable_STNTableEntry& a, STNTable_STNTableEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline STNTable_STNTableEntry* New() const final {
    return CreateMaybeMessage<STNTable_STNTableEntry>(NULL);
  }

  STNTable_STNTableEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<STNTable_STNTableEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const STNTable_STNTableEntry& from);
  void MergeFrom(const STNTable_STNTableEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(STNTable_STNTableEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip_address = 1;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 1;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_address(::std::string&& value);
  #endif
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // string interface = 2;
  void clear_interface();
  static const int kInterfaceFieldNumber = 2;
  const ::std::string& interface() const;
  void set_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_interface(::std::string&& value);
  #endif
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  ::std::string* mutable_interface();
  ::std::string* release_interface();
  void set_allocated_interface(::std::string* interface);

  // @@protoc_insertion_point(class_scope:l3.STNTable.STNTableEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  ::google::protobuf::internal::ArenaStringPtr interface_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class STNTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.STNTable) */ {
 public:
  STNTable();
  virtual ~STNTable();

  STNTable(const STNTable& from);

  inline STNTable& operator=(const STNTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  STNTable(STNTable&& from) noexcept
    : STNTable() {
    *this = ::std::move(from);
  }

  inline STNTable& operator=(STNTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const STNTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const STNTable* internal_default_instance() {
    return reinterpret_cast<const STNTable*>(
               &_STNTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(STNTable* other);
  friend void swap(STNTable& a, STNTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline STNTable* New() const final {
    return CreateMaybeMessage<STNTable>(NULL);
  }

  STNTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<STNTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const STNTable& from);
  void MergeFrom(const STNTable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(STNTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef STNTable_STNTableEntry STNTableEntry;

  // accessors -------------------------------------------------------

  // repeated .l3.STNTable.STNTableEntry stn_entries = 1;
  int stn_entries_size() const;
  void clear_stn_entries();
  static const int kStnEntriesFieldNumber = 1;
  ::l3::STNTable_STNTableEntry* mutable_stn_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::l3::STNTable_STNTableEntry >*
      mutable_stn_entries();
  const ::l3::STNTable_STNTableEntry& stn_entries(int index) const;
  ::l3::STNTable_STNTableEntry* add_stn_entries();
  const ::google::protobuf::RepeatedPtrField< ::l3::STNTable_STNTableEntry >&
      stn_entries() const;

  // @@protoc_insertion_point(class_scope:l3.STNTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l3::STNTable_STNTableEntry > stn_entries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IPScanNeighbor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l3.IPScanNeighbor) */ {
 public:
  IPScanNeighbor();
  virtual ~IPScanNeighbor();

  IPScanNeighbor(const IPScanNeighbor& from);

  inline IPScanNeighbor& operator=(const IPScanNeighbor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPScanNeighbor(IPScanNeighbor&& from) noexcept
    : IPScanNeighbor() {
    *this = ::std::move(from);
  }

  inline IPScanNeighbor& operator=(IPScanNeighbor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPScanNeighbor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPScanNeighbor* internal_default_instance() {
    return reinterpret_cast<const IPScanNeighbor*>(
               &_IPScanNeighbor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(IPScanNeighbor* other);
  friend void swap(IPScanNeighbor& a, IPScanNeighbor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPScanNeighbor* New() const final {
    return CreateMaybeMessage<IPScanNeighbor>(NULL);
  }

  IPScanNeighbor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPScanNeighbor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPScanNeighbor& from);
  void MergeFrom(const IPScanNeighbor& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPScanNeighbor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IPScanNeighbor_Mode Mode;
  static const Mode DISABLED =
    IPScanNeighbor_Mode_DISABLED;
  static const Mode IPv4 =
    IPScanNeighbor_Mode_IPv4;
  static const Mode IPv6 =
    IPScanNeighbor_Mode_IPv6;
  static const Mode BOTH =
    IPScanNeighbor_Mode_BOTH;
  static inline bool Mode_IsValid(int value) {
    return IPScanNeighbor_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    IPScanNeighbor_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    IPScanNeighbor_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    IPScanNeighbor_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return IPScanNeighbor_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return IPScanNeighbor_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return IPScanNeighbor_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .l3.IPScanNeighbor.Mode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::l3::IPScanNeighbor_Mode mode() const;
  void set_mode(::l3::IPScanNeighbor_Mode value);

  // uint32 scan_interval = 2;
  void clear_scan_interval();
  static const int kScanIntervalFieldNumber = 2;
  ::google::protobuf::uint32 scan_interval() const;
  void set_scan_interval(::google::protobuf::uint32 value);

  // uint32 max_proc_time = 3;
  void clear_max_proc_time();
  static const int kMaxProcTimeFieldNumber = 3;
  ::google::protobuf::uint32 max_proc_time() const;
  void set_max_proc_time(::google::protobuf::uint32 value);

  // uint32 max_update = 4;
  void clear_max_update();
  static const int kMaxUpdateFieldNumber = 4;
  ::google::protobuf::uint32 max_update() const;
  void set_max_update(::google::protobuf::uint32 value);

  // uint32 scan_int_delay = 5;
  void clear_scan_int_delay();
  static const int kScanIntDelayFieldNumber = 5;
  ::google::protobuf::uint32 scan_int_delay() const;
  void set_scan_int_delay(::google::protobuf::uint32 value);

  // uint32 stale_threshold = 6;
  void clear_stale_threshold();
  static const int kStaleThresholdFieldNumber = 6;
  ::google::protobuf::uint32 stale_threshold() const;
  void set_stale_threshold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:l3.IPScanNeighbor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  ::google::protobuf::uint32 scan_interval_;
  ::google::protobuf::uint32 max_proc_time_;
  ::google::protobuf::uint32 max_update_;
  ::google::protobuf::uint32 scan_int_delay_;
  ::google::protobuf::uint32 stale_threshold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl3_2fl3_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StaticRoutes_Route

// .l3.StaticRoutes.Route.RouteType type = 10;
inline void StaticRoutes_Route::clear_type() {
  type_ = 0;
}
inline ::l3::StaticRoutes_Route_RouteType StaticRoutes_Route::type() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.type)
  return static_cast< ::l3::StaticRoutes_Route_RouteType >(type_);
}
inline void StaticRoutes_Route::set_type(::l3::StaticRoutes_Route_RouteType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.type)
}

// uint32 vrf_id = 1;
inline void StaticRoutes_Route::clear_vrf_id() {
  vrf_id_ = 0u;
}
inline ::google::protobuf::uint32 StaticRoutes_Route::vrf_id() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.vrf_id)
  return vrf_id_;
}
inline void StaticRoutes_Route::set_vrf_id(::google::protobuf::uint32 value) {
  
  vrf_id_ = value;
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.vrf_id)
}

// string description = 2;
inline void StaticRoutes_Route::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticRoutes_Route::description() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.description)
  return description_.GetNoArena();
}
inline void StaticRoutes_Route::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.description)
}
#if LANG_CXX11
inline void StaticRoutes_Route::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.StaticRoutes.Route.description)
}
#endif
inline void StaticRoutes_Route::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.StaticRoutes.Route.description)
}
inline void StaticRoutes_Route::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.StaticRoutes.Route.description)
}
inline ::std::string* StaticRoutes_Route::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:l3.StaticRoutes.Route.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticRoutes_Route::release_description() {
  // @@protoc_insertion_point(field_release:l3.StaticRoutes.Route.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticRoutes_Route::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:l3.StaticRoutes.Route.description)
}

// string dst_ip_addr = 3;
inline void StaticRoutes_Route::clear_dst_ip_addr() {
  dst_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticRoutes_Route::dst_ip_addr() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.dst_ip_addr)
  return dst_ip_addr_.GetNoArena();
}
inline void StaticRoutes_Route::set_dst_ip_addr(const ::std::string& value) {
  
  dst_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.dst_ip_addr)
}
#if LANG_CXX11
inline void StaticRoutes_Route::set_dst_ip_addr(::std::string&& value) {
  
  dst_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.StaticRoutes.Route.dst_ip_addr)
}
#endif
inline void StaticRoutes_Route::set_dst_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dst_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.StaticRoutes.Route.dst_ip_addr)
}
inline void StaticRoutes_Route::set_dst_ip_addr(const char* value, size_t size) {
  
  dst_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.StaticRoutes.Route.dst_ip_addr)
}
inline ::std::string* StaticRoutes_Route::mutable_dst_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:l3.StaticRoutes.Route.dst_ip_addr)
  return dst_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticRoutes_Route::release_dst_ip_addr() {
  // @@protoc_insertion_point(field_release:l3.StaticRoutes.Route.dst_ip_addr)
  
  return dst_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticRoutes_Route::set_allocated_dst_ip_addr(::std::string* dst_ip_addr) {
  if (dst_ip_addr != NULL) {
    
  } else {
    
  }
  dst_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:l3.StaticRoutes.Route.dst_ip_addr)
}

// string next_hop_addr = 4;
inline void StaticRoutes_Route::clear_next_hop_addr() {
  next_hop_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticRoutes_Route::next_hop_addr() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.next_hop_addr)
  return next_hop_addr_.GetNoArena();
}
inline void StaticRoutes_Route::set_next_hop_addr(const ::std::string& value) {
  
  next_hop_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.next_hop_addr)
}
#if LANG_CXX11
inline void StaticRoutes_Route::set_next_hop_addr(::std::string&& value) {
  
  next_hop_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.StaticRoutes.Route.next_hop_addr)
}
#endif
inline void StaticRoutes_Route::set_next_hop_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_hop_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.StaticRoutes.Route.next_hop_addr)
}
inline void StaticRoutes_Route::set_next_hop_addr(const char* value, size_t size) {
  
  next_hop_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.StaticRoutes.Route.next_hop_addr)
}
inline ::std::string* StaticRoutes_Route::mutable_next_hop_addr() {
  
  // @@protoc_insertion_point(field_mutable:l3.StaticRoutes.Route.next_hop_addr)
  return next_hop_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticRoutes_Route::release_next_hop_addr() {
  // @@protoc_insertion_point(field_release:l3.StaticRoutes.Route.next_hop_addr)
  
  return next_hop_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticRoutes_Route::set_allocated_next_hop_addr(::std::string* next_hop_addr) {
  if (next_hop_addr != NULL) {
    
  } else {
    
  }
  next_hop_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_hop_addr);
  // @@protoc_insertion_point(field_set_allocated:l3.StaticRoutes.Route.next_hop_addr)
}

// string outgoing_interface = 5;
inline void StaticRoutes_Route::clear_outgoing_interface() {
  outgoing_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StaticRoutes_Route::outgoing_interface() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.outgoing_interface)
  return outgoing_interface_.GetNoArena();
}
inline void StaticRoutes_Route::set_outgoing_interface(const ::std::string& value) {
  
  outgoing_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.outgoing_interface)
}
#if LANG_CXX11
inline void StaticRoutes_Route::set_outgoing_interface(::std::string&& value) {
  
  outgoing_interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.StaticRoutes.Route.outgoing_interface)
}
#endif
inline void StaticRoutes_Route::set_outgoing_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  outgoing_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.StaticRoutes.Route.outgoing_interface)
}
inline void StaticRoutes_Route::set_outgoing_interface(const char* value, size_t size) {
  
  outgoing_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.StaticRoutes.Route.outgoing_interface)
}
inline ::std::string* StaticRoutes_Route::mutable_outgoing_interface() {
  
  // @@protoc_insertion_point(field_mutable:l3.StaticRoutes.Route.outgoing_interface)
  return outgoing_interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StaticRoutes_Route::release_outgoing_interface() {
  // @@protoc_insertion_point(field_release:l3.StaticRoutes.Route.outgoing_interface)
  
  return outgoing_interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StaticRoutes_Route::set_allocated_outgoing_interface(::std::string* outgoing_interface) {
  if (outgoing_interface != NULL) {
    
  } else {
    
  }
  outgoing_interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outgoing_interface);
  // @@protoc_insertion_point(field_set_allocated:l3.StaticRoutes.Route.outgoing_interface)
}

// uint32 weight = 6;
inline void StaticRoutes_Route::clear_weight() {
  weight_ = 0u;
}
inline ::google::protobuf::uint32 StaticRoutes_Route::weight() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.weight)
  return weight_;
}
inline void StaticRoutes_Route::set_weight(::google::protobuf::uint32 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.weight)
}

// uint32 preference = 7;
inline void StaticRoutes_Route::clear_preference() {
  preference_ = 0u;
}
inline ::google::protobuf::uint32 StaticRoutes_Route::preference() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.preference)
  return preference_;
}
inline void StaticRoutes_Route::set_preference(::google::protobuf::uint32 value) {
  
  preference_ = value;
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.preference)
}

// uint32 via_vrf_id = 8;
inline void StaticRoutes_Route::clear_via_vrf_id() {
  via_vrf_id_ = 0u;
}
inline ::google::protobuf::uint32 StaticRoutes_Route::via_vrf_id() const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.Route.via_vrf_id)
  return via_vrf_id_;
}
inline void StaticRoutes_Route::set_via_vrf_id(::google::protobuf::uint32 value) {
  
  via_vrf_id_ = value;
  // @@protoc_insertion_point(field_set:l3.StaticRoutes.Route.via_vrf_id)
}

// -------------------------------------------------------------------

// StaticRoutes

// repeated .l3.StaticRoutes.Route routes = 1;
inline int StaticRoutes::routes_size() const {
  return routes_.size();
}
inline void StaticRoutes::clear_routes() {
  routes_.Clear();
}
inline ::l3::StaticRoutes_Route* StaticRoutes::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:l3.StaticRoutes.routes)
  return routes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >*
StaticRoutes::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:l3.StaticRoutes.routes)
  return &routes_;
}
inline const ::l3::StaticRoutes_Route& StaticRoutes::routes(int index) const {
  // @@protoc_insertion_point(field_get:l3.StaticRoutes.routes)
  return routes_.Get(index);
}
inline ::l3::StaticRoutes_Route* StaticRoutes::add_routes() {
  // @@protoc_insertion_point(field_add:l3.StaticRoutes.routes)
  return routes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::StaticRoutes_Route >&
StaticRoutes::routes() const {
  // @@protoc_insertion_point(field_list:l3.StaticRoutes.routes)
  return routes_;
}

// -------------------------------------------------------------------

// ArpTable_ArpEntry

// string interface = 1;
inline void ArpTable_ArpEntry::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArpTable_ArpEntry::interface() const {
  // @@protoc_insertion_point(field_get:l3.ArpTable.ArpEntry.interface)
  return interface_.GetNoArena();
}
inline void ArpTable_ArpEntry::set_interface(const ::std::string& value) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ArpTable.ArpEntry.interface)
}
#if LANG_CXX11
inline void ArpTable_ArpEntry::set_interface(::std::string&& value) {
  
  interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ArpTable.ArpEntry.interface)
}
#endif
inline void ArpTable_ArpEntry::set_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ArpTable.ArpEntry.interface)
}
inline void ArpTable_ArpEntry::set_interface(const char* value, size_t size) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ArpTable.ArpEntry.interface)
}
inline ::std::string* ArpTable_ArpEntry::mutable_interface() {
  
  // @@protoc_insertion_point(field_mutable:l3.ArpTable.ArpEntry.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArpTable_ArpEntry::release_interface() {
  // @@protoc_insertion_point(field_release:l3.ArpTable.ArpEntry.interface)
  
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArpTable_ArpEntry::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    
  } else {
    
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:l3.ArpTable.ArpEntry.interface)
}

// string ip_address = 2;
inline void ArpTable_ArpEntry::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArpTable_ArpEntry::ip_address() const {
  // @@protoc_insertion_point(field_get:l3.ArpTable.ArpEntry.ip_address)
  return ip_address_.GetNoArena();
}
inline void ArpTable_ArpEntry::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ArpTable.ArpEntry.ip_address)
}
#if LANG_CXX11
inline void ArpTable_ArpEntry::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ArpTable.ArpEntry.ip_address)
}
#endif
inline void ArpTable_ArpEntry::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ArpTable.ArpEntry.ip_address)
}
inline void ArpTable_ArpEntry::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ArpTable.ArpEntry.ip_address)
}
inline ::std::string* ArpTable_ArpEntry::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:l3.ArpTable.ArpEntry.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArpTable_ArpEntry::release_ip_address() {
  // @@protoc_insertion_point(field_release:l3.ArpTable.ArpEntry.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArpTable_ArpEntry::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:l3.ArpTable.ArpEntry.ip_address)
}

// string phys_address = 3;
inline void ArpTable_ArpEntry::clear_phys_address() {
  phys_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArpTable_ArpEntry::phys_address() const {
  // @@protoc_insertion_point(field_get:l3.ArpTable.ArpEntry.phys_address)
  return phys_address_.GetNoArena();
}
inline void ArpTable_ArpEntry::set_phys_address(const ::std::string& value) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ArpTable.ArpEntry.phys_address)
}
#if LANG_CXX11
inline void ArpTable_ArpEntry::set_phys_address(::std::string&& value) {
  
  phys_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ArpTable.ArpEntry.phys_address)
}
#endif
inline void ArpTable_ArpEntry::set_phys_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ArpTable.ArpEntry.phys_address)
}
inline void ArpTable_ArpEntry::set_phys_address(const char* value, size_t size) {
  
  phys_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ArpTable.ArpEntry.phys_address)
}
inline ::std::string* ArpTable_ArpEntry::mutable_phys_address() {
  
  // @@protoc_insertion_point(field_mutable:l3.ArpTable.ArpEntry.phys_address)
  return phys_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArpTable_ArpEntry::release_phys_address() {
  // @@protoc_insertion_point(field_release:l3.ArpTable.ArpEntry.phys_address)
  
  return phys_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArpTable_ArpEntry::set_allocated_phys_address(::std::string* phys_address) {
  if (phys_address != NULL) {
    
  } else {
    
  }
  phys_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phys_address);
  // @@protoc_insertion_point(field_set_allocated:l3.ArpTable.ArpEntry.phys_address)
}

// bool static = 4;
inline void ArpTable_ArpEntry::clear_static_() {
  static__ = false;
}
inline bool ArpTable_ArpEntry::static_() const {
  // @@protoc_insertion_point(field_get:l3.ArpTable.ArpEntry.static)
  return static__;
}
inline void ArpTable_ArpEntry::set_static_(bool value) {
  
  static__ = value;
  // @@protoc_insertion_point(field_set:l3.ArpTable.ArpEntry.static)
}

// -------------------------------------------------------------------

// ArpTable

// repeated .l3.ArpTable.ArpEntry arp_entries = 1;
inline int ArpTable::arp_entries_size() const {
  return arp_entries_.size();
}
inline void ArpTable::clear_arp_entries() {
  arp_entries_.Clear();
}
inline ::l3::ArpTable_ArpEntry* ArpTable::mutable_arp_entries(int index) {
  // @@protoc_insertion_point(field_mutable:l3.ArpTable.arp_entries)
  return arp_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >*
ArpTable::mutable_arp_entries() {
  // @@protoc_insertion_point(field_mutable_list:l3.ArpTable.arp_entries)
  return &arp_entries_;
}
inline const ::l3::ArpTable_ArpEntry& ArpTable::arp_entries(int index) const {
  // @@protoc_insertion_point(field_get:l3.ArpTable.arp_entries)
  return arp_entries_.Get(index);
}
inline ::l3::ArpTable_ArpEntry* ArpTable::add_arp_entries() {
  // @@protoc_insertion_point(field_add:l3.ArpTable.arp_entries)
  return arp_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ArpTable_ArpEntry >&
ArpTable::arp_entries() const {
  // @@protoc_insertion_point(field_list:l3.ArpTable.arp_entries)
  return arp_entries_;
}

// -------------------------------------------------------------------

// ProxyArpRanges_RangeList_Range

// string first_ip = 1;
inline void ProxyArpRanges_RangeList_Range::clear_first_ip() {
  first_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyArpRanges_RangeList_Range::first_ip() const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpRanges.RangeList.Range.first_ip)
  return first_ip_.GetNoArena();
}
inline void ProxyArpRanges_RangeList_Range::set_first_ip(const ::std::string& value) {
  
  first_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ProxyArpRanges.RangeList.Range.first_ip)
}
#if LANG_CXX11
inline void ProxyArpRanges_RangeList_Range::set_first_ip(::std::string&& value) {
  
  first_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ProxyArpRanges.RangeList.Range.first_ip)
}
#endif
inline void ProxyArpRanges_RangeList_Range::set_first_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ProxyArpRanges.RangeList.Range.first_ip)
}
inline void ProxyArpRanges_RangeList_Range::set_first_ip(const char* value, size_t size) {
  
  first_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ProxyArpRanges.RangeList.Range.first_ip)
}
inline ::std::string* ProxyArpRanges_RangeList_Range::mutable_first_ip() {
  
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpRanges.RangeList.Range.first_ip)
  return first_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyArpRanges_RangeList_Range::release_first_ip() {
  // @@protoc_insertion_point(field_release:l3.ProxyArpRanges.RangeList.Range.first_ip)
  
  return first_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyArpRanges_RangeList_Range::set_allocated_first_ip(::std::string* first_ip) {
  if (first_ip != NULL) {
    
  } else {
    
  }
  first_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_ip);
  // @@protoc_insertion_point(field_set_allocated:l3.ProxyArpRanges.RangeList.Range.first_ip)
}

// string last_ip = 2;
inline void ProxyArpRanges_RangeList_Range::clear_last_ip() {
  last_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyArpRanges_RangeList_Range::last_ip() const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpRanges.RangeList.Range.last_ip)
  return last_ip_.GetNoArena();
}
inline void ProxyArpRanges_RangeList_Range::set_last_ip(const ::std::string& value) {
  
  last_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ProxyArpRanges.RangeList.Range.last_ip)
}
#if LANG_CXX11
inline void ProxyArpRanges_RangeList_Range::set_last_ip(::std::string&& value) {
  
  last_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ProxyArpRanges.RangeList.Range.last_ip)
}
#endif
inline void ProxyArpRanges_RangeList_Range::set_last_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ProxyArpRanges.RangeList.Range.last_ip)
}
inline void ProxyArpRanges_RangeList_Range::set_last_ip(const char* value, size_t size) {
  
  last_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ProxyArpRanges.RangeList.Range.last_ip)
}
inline ::std::string* ProxyArpRanges_RangeList_Range::mutable_last_ip() {
  
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpRanges.RangeList.Range.last_ip)
  return last_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyArpRanges_RangeList_Range::release_last_ip() {
  // @@protoc_insertion_point(field_release:l3.ProxyArpRanges.RangeList.Range.last_ip)
  
  return last_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyArpRanges_RangeList_Range::set_allocated_last_ip(::std::string* last_ip) {
  if (last_ip != NULL) {
    
  } else {
    
  }
  last_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_ip);
  // @@protoc_insertion_point(field_set_allocated:l3.ProxyArpRanges.RangeList.Range.last_ip)
}

// -------------------------------------------------------------------

// ProxyArpRanges_RangeList

// string label = 1;
inline void ProxyArpRanges_RangeList::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyArpRanges_RangeList::label() const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpRanges.RangeList.label)
  return label_.GetNoArena();
}
inline void ProxyArpRanges_RangeList::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ProxyArpRanges.RangeList.label)
}
#if LANG_CXX11
inline void ProxyArpRanges_RangeList::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ProxyArpRanges.RangeList.label)
}
#endif
inline void ProxyArpRanges_RangeList::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ProxyArpRanges.RangeList.label)
}
inline void ProxyArpRanges_RangeList::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ProxyArpRanges.RangeList.label)
}
inline ::std::string* ProxyArpRanges_RangeList::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpRanges.RangeList.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyArpRanges_RangeList::release_label() {
  // @@protoc_insertion_point(field_release:l3.ProxyArpRanges.RangeList.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyArpRanges_RangeList::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:l3.ProxyArpRanges.RangeList.label)
}

// repeated .l3.ProxyArpRanges.RangeList.Range ranges = 2;
inline int ProxyArpRanges_RangeList::ranges_size() const {
  return ranges_.size();
}
inline void ProxyArpRanges_RangeList::clear_ranges() {
  ranges_.Clear();
}
inline ::l3::ProxyArpRanges_RangeList_Range* ProxyArpRanges_RangeList::mutable_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpRanges.RangeList.ranges)
  return ranges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList_Range >*
ProxyArpRanges_RangeList::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:l3.ProxyArpRanges.RangeList.ranges)
  return &ranges_;
}
inline const ::l3::ProxyArpRanges_RangeList_Range& ProxyArpRanges_RangeList::ranges(int index) const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpRanges.RangeList.ranges)
  return ranges_.Get(index);
}
inline ::l3::ProxyArpRanges_RangeList_Range* ProxyArpRanges_RangeList::add_ranges() {
  // @@protoc_insertion_point(field_add:l3.ProxyArpRanges.RangeList.ranges)
  return ranges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList_Range >&
ProxyArpRanges_RangeList::ranges() const {
  // @@protoc_insertion_point(field_list:l3.ProxyArpRanges.RangeList.ranges)
  return ranges_;
}

// -------------------------------------------------------------------

// ProxyArpRanges

// repeated .l3.ProxyArpRanges.RangeList range_lists = 1;
inline int ProxyArpRanges::range_lists_size() const {
  return range_lists_.size();
}
inline void ProxyArpRanges::clear_range_lists() {
  range_lists_.Clear();
}
inline ::l3::ProxyArpRanges_RangeList* ProxyArpRanges::mutable_range_lists(int index) {
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpRanges.range_lists)
  return range_lists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >*
ProxyArpRanges::mutable_range_lists() {
  // @@protoc_insertion_point(field_mutable_list:l3.ProxyArpRanges.range_lists)
  return &range_lists_;
}
inline const ::l3::ProxyArpRanges_RangeList& ProxyArpRanges::range_lists(int index) const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpRanges.range_lists)
  return range_lists_.Get(index);
}
inline ::l3::ProxyArpRanges_RangeList* ProxyArpRanges::add_range_lists() {
  // @@protoc_insertion_point(field_add:l3.ProxyArpRanges.range_lists)
  return range_lists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpRanges_RangeList >&
ProxyArpRanges::range_lists() const {
  // @@protoc_insertion_point(field_list:l3.ProxyArpRanges.range_lists)
  return range_lists_;
}

// -------------------------------------------------------------------

// ProxyArpInterfaces_InterfaceList_Interface

// string name = 1;
inline void ProxyArpInterfaces_InterfaceList_Interface::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyArpInterfaces_InterfaceList_Interface::name() const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
  return name_.GetNoArena();
}
inline void ProxyArpInterfaces_InterfaceList_Interface::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
}
#if LANG_CXX11
inline void ProxyArpInterfaces_InterfaceList_Interface::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
}
#endif
inline void ProxyArpInterfaces_InterfaceList_Interface::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
}
inline void ProxyArpInterfaces_InterfaceList_Interface::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
}
inline ::std::string* ProxyArpInterfaces_InterfaceList_Interface::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyArpInterfaces_InterfaceList_Interface::release_name() {
  // @@protoc_insertion_point(field_release:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyArpInterfaces_InterfaceList_Interface::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:l3.ProxyArpInterfaces.InterfaceList.Interface.name)
}

// -------------------------------------------------------------------

// ProxyArpInterfaces_InterfaceList

// string label = 1;
inline void ProxyArpInterfaces_InterfaceList::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyArpInterfaces_InterfaceList::label() const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpInterfaces.InterfaceList.label)
  return label_.GetNoArena();
}
inline void ProxyArpInterfaces_InterfaceList::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.ProxyArpInterfaces.InterfaceList.label)
}
#if LANG_CXX11
inline void ProxyArpInterfaces_InterfaceList::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.ProxyArpInterfaces.InterfaceList.label)
}
#endif
inline void ProxyArpInterfaces_InterfaceList::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.ProxyArpInterfaces.InterfaceList.label)
}
inline void ProxyArpInterfaces_InterfaceList::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.ProxyArpInterfaces.InterfaceList.label)
}
inline ::std::string* ProxyArpInterfaces_InterfaceList::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpInterfaces.InterfaceList.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyArpInterfaces_InterfaceList::release_label() {
  // @@protoc_insertion_point(field_release:l3.ProxyArpInterfaces.InterfaceList.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyArpInterfaces_InterfaceList::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:l3.ProxyArpInterfaces.InterfaceList.label)
}

// repeated .l3.ProxyArpInterfaces.InterfaceList.Interface interfaces = 2;
inline int ProxyArpInterfaces_InterfaceList::interfaces_size() const {
  return interfaces_.size();
}
inline void ProxyArpInterfaces_InterfaceList::clear_interfaces() {
  interfaces_.Clear();
}
inline ::l3::ProxyArpInterfaces_InterfaceList_Interface* ProxyArpInterfaces_InterfaceList::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpInterfaces.InterfaceList.interfaces)
  return interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList_Interface >*
ProxyArpInterfaces_InterfaceList::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:l3.ProxyArpInterfaces.InterfaceList.interfaces)
  return &interfaces_;
}
inline const ::l3::ProxyArpInterfaces_InterfaceList_Interface& ProxyArpInterfaces_InterfaceList::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpInterfaces.InterfaceList.interfaces)
  return interfaces_.Get(index);
}
inline ::l3::ProxyArpInterfaces_InterfaceList_Interface* ProxyArpInterfaces_InterfaceList::add_interfaces() {
  // @@protoc_insertion_point(field_add:l3.ProxyArpInterfaces.InterfaceList.interfaces)
  return interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList_Interface >&
ProxyArpInterfaces_InterfaceList::interfaces() const {
  // @@protoc_insertion_point(field_list:l3.ProxyArpInterfaces.InterfaceList.interfaces)
  return interfaces_;
}

// -------------------------------------------------------------------

// ProxyArpInterfaces

// repeated .l3.ProxyArpInterfaces.InterfaceList interface_lists = 1;
inline int ProxyArpInterfaces::interface_lists_size() const {
  return interface_lists_.size();
}
inline void ProxyArpInterfaces::clear_interface_lists() {
  interface_lists_.Clear();
}
inline ::l3::ProxyArpInterfaces_InterfaceList* ProxyArpInterfaces::mutable_interface_lists(int index) {
  // @@protoc_insertion_point(field_mutable:l3.ProxyArpInterfaces.interface_lists)
  return interface_lists_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >*
ProxyArpInterfaces::mutable_interface_lists() {
  // @@protoc_insertion_point(field_mutable_list:l3.ProxyArpInterfaces.interface_lists)
  return &interface_lists_;
}
inline const ::l3::ProxyArpInterfaces_InterfaceList& ProxyArpInterfaces::interface_lists(int index) const {
  // @@protoc_insertion_point(field_get:l3.ProxyArpInterfaces.interface_lists)
  return interface_lists_.Get(index);
}
inline ::l3::ProxyArpInterfaces_InterfaceList* ProxyArpInterfaces::add_interface_lists() {
  // @@protoc_insertion_point(field_add:l3.ProxyArpInterfaces.interface_lists)
  return interface_lists_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::ProxyArpInterfaces_InterfaceList >&
ProxyArpInterfaces::interface_lists() const {
  // @@protoc_insertion_point(field_list:l3.ProxyArpInterfaces.interface_lists)
  return interface_lists_;
}

// -------------------------------------------------------------------

// STNTable_STNTableEntry

// string ip_address = 1;
inline void STNTable_STNTableEntry::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& STNTable_STNTableEntry::ip_address() const {
  // @@protoc_insertion_point(field_get:l3.STNTable.STNTableEntry.ip_address)
  return ip_address_.GetNoArena();
}
inline void STNTable_STNTableEntry::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.STNTable.STNTableEntry.ip_address)
}
#if LANG_CXX11
inline void STNTable_STNTableEntry::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.STNTable.STNTableEntry.ip_address)
}
#endif
inline void STNTable_STNTableEntry::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.STNTable.STNTableEntry.ip_address)
}
inline void STNTable_STNTableEntry::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.STNTable.STNTableEntry.ip_address)
}
inline ::std::string* STNTable_STNTableEntry::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:l3.STNTable.STNTableEntry.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* STNTable_STNTableEntry::release_ip_address() {
  // @@protoc_insertion_point(field_release:l3.STNTable.STNTableEntry.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void STNTable_STNTableEntry::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:l3.STNTable.STNTableEntry.ip_address)
}

// string interface = 2;
inline void STNTable_STNTableEntry::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& STNTable_STNTableEntry::interface() const {
  // @@protoc_insertion_point(field_get:l3.STNTable.STNTableEntry.interface)
  return interface_.GetNoArena();
}
inline void STNTable_STNTableEntry::set_interface(const ::std::string& value) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l3.STNTable.STNTableEntry.interface)
}
#if LANG_CXX11
inline void STNTable_STNTableEntry::set_interface(::std::string&& value) {
  
  interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l3.STNTable.STNTableEntry.interface)
}
#endif
inline void STNTable_STNTableEntry::set_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l3.STNTable.STNTableEntry.interface)
}
inline void STNTable_STNTableEntry::set_interface(const char* value, size_t size) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l3.STNTable.STNTableEntry.interface)
}
inline ::std::string* STNTable_STNTableEntry::mutable_interface() {
  
  // @@protoc_insertion_point(field_mutable:l3.STNTable.STNTableEntry.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* STNTable_STNTableEntry::release_interface() {
  // @@protoc_insertion_point(field_release:l3.STNTable.STNTableEntry.interface)
  
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void STNTable_STNTableEntry::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    
  } else {
    
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:l3.STNTable.STNTableEntry.interface)
}

// -------------------------------------------------------------------

// STNTable

// repeated .l3.STNTable.STNTableEntry stn_entries = 1;
inline int STNTable::stn_entries_size() const {
  return stn_entries_.size();
}
inline void STNTable::clear_stn_entries() {
  stn_entries_.Clear();
}
inline ::l3::STNTable_STNTableEntry* STNTable::mutable_stn_entries(int index) {
  // @@protoc_insertion_point(field_mutable:l3.STNTable.stn_entries)
  return stn_entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l3::STNTable_STNTableEntry >*
STNTable::mutable_stn_entries() {
  // @@protoc_insertion_point(field_mutable_list:l3.STNTable.stn_entries)
  return &stn_entries_;
}
inline const ::l3::STNTable_STNTableEntry& STNTable::stn_entries(int index) const {
  // @@protoc_insertion_point(field_get:l3.STNTable.stn_entries)
  return stn_entries_.Get(index);
}
inline ::l3::STNTable_STNTableEntry* STNTable::add_stn_entries() {
  // @@protoc_insertion_point(field_add:l3.STNTable.stn_entries)
  return stn_entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l3::STNTable_STNTableEntry >&
STNTable::stn_entries() const {
  // @@protoc_insertion_point(field_list:l3.STNTable.stn_entries)
  return stn_entries_;
}

// -------------------------------------------------------------------

// IPScanNeighbor

// .l3.IPScanNeighbor.Mode mode = 1;
inline void IPScanNeighbor::clear_mode() {
  mode_ = 0;
}
inline ::l3::IPScanNeighbor_Mode IPScanNeighbor::mode() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.mode)
  return static_cast< ::l3::IPScanNeighbor_Mode >(mode_);
}
inline void IPScanNeighbor::set_mode(::l3::IPScanNeighbor_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.mode)
}

// uint32 scan_interval = 2;
inline void IPScanNeighbor::clear_scan_interval() {
  scan_interval_ = 0u;
}
inline ::google::protobuf::uint32 IPScanNeighbor::scan_interval() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.scan_interval)
  return scan_interval_;
}
inline void IPScanNeighbor::set_scan_interval(::google::protobuf::uint32 value) {
  
  scan_interval_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.scan_interval)
}

// uint32 max_proc_time = 3;
inline void IPScanNeighbor::clear_max_proc_time() {
  max_proc_time_ = 0u;
}
inline ::google::protobuf::uint32 IPScanNeighbor::max_proc_time() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.max_proc_time)
  return max_proc_time_;
}
inline void IPScanNeighbor::set_max_proc_time(::google::protobuf::uint32 value) {
  
  max_proc_time_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.max_proc_time)
}

// uint32 max_update = 4;
inline void IPScanNeighbor::clear_max_update() {
  max_update_ = 0u;
}
inline ::google::protobuf::uint32 IPScanNeighbor::max_update() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.max_update)
  return max_update_;
}
inline void IPScanNeighbor::set_max_update(::google::protobuf::uint32 value) {
  
  max_update_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.max_update)
}

// uint32 scan_int_delay = 5;
inline void IPScanNeighbor::clear_scan_int_delay() {
  scan_int_delay_ = 0u;
}
inline ::google::protobuf::uint32 IPScanNeighbor::scan_int_delay() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.scan_int_delay)
  return scan_int_delay_;
}
inline void IPScanNeighbor::set_scan_int_delay(::google::protobuf::uint32 value) {
  
  scan_int_delay_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.scan_int_delay)
}

// uint32 stale_threshold = 6;
inline void IPScanNeighbor::clear_stale_threshold() {
  stale_threshold_ = 0u;
}
inline ::google::protobuf::uint32 IPScanNeighbor::stale_threshold() const {
  // @@protoc_insertion_point(field_get:l3.IPScanNeighbor.stale_threshold)
  return stale_threshold_;
}
inline void IPScanNeighbor::set_stale_threshold(::google::protobuf::uint32 value) {
  
  stale_threshold_ = value;
  // @@protoc_insertion_point(field_set:l3.IPScanNeighbor.stale_threshold)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace l3

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::l3::StaticRoutes_Route_RouteType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::l3::StaticRoutes_Route_RouteType>() {
  return ::l3::StaticRoutes_Route_RouteType_descriptor();
}
template <> struct is_proto_enum< ::l3::IPScanNeighbor_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::l3::IPScanNeighbor_Mode>() {
  return ::l3::IPScanNeighbor_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_vpp_2fmodel_2fl3_2fl3_2eproto
