// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/bfd/bfd.proto

#include "vpp/model/bfd/bfd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_EchoFunction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_Key;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_Session_Authentication;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SingleHopBFD_Session;
}  // namespace protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto
namespace bfd {
class SingleHopBFD_Session_AuthenticationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleHopBFD_Session_Authentication>
      _instance;
} _SingleHopBFD_Session_Authentication_default_instance_;
class SingleHopBFD_SessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleHopBFD_Session>
      _instance;
} _SingleHopBFD_Session_default_instance_;
class SingleHopBFD_KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleHopBFD_Key>
      _instance;
} _SingleHopBFD_Key_default_instance_;
class SingleHopBFD_EchoFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleHopBFD_EchoFunction>
      _instance;
} _SingleHopBFD_EchoFunction_default_instance_;
class SingleHopBFDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleHopBFD>
      _instance;
} _SingleHopBFD_default_instance_;
}  // namespace bfd
namespace protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto {
static void InitDefaultsSingleHopBFD_Session_Authentication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bfd::_SingleHopBFD_Session_Authentication_default_instance_;
    new (ptr) ::bfd::SingleHopBFD_Session_Authentication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bfd::SingleHopBFD_Session_Authentication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_Session_Authentication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleHopBFD_Session_Authentication}, {}};

static void InitDefaultsSingleHopBFD_Session() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bfd::_SingleHopBFD_Session_default_instance_;
    new (ptr) ::bfd::SingleHopBFD_Session();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bfd::SingleHopBFD_Session::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SingleHopBFD_Session =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSingleHopBFD_Session}, {
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session_Authentication.base,}};

static void InitDefaultsSingleHopBFD_Key() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bfd::_SingleHopBFD_Key_default_instance_;
    new (ptr) ::bfd::SingleHopBFD_Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bfd::SingleHopBFD_Key::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_Key =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleHopBFD_Key}, {}};

static void InitDefaultsSingleHopBFD_EchoFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bfd::_SingleHopBFD_EchoFunction_default_instance_;
    new (ptr) ::bfd::SingleHopBFD_EchoFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bfd::SingleHopBFD_EchoFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleHopBFD_EchoFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleHopBFD_EchoFunction}, {}};

static void InitDefaultsSingleHopBFD() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bfd::_SingleHopBFD_default_instance_;
    new (ptr) ::bfd::SingleHopBFD();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bfd::SingleHopBFD::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SingleHopBFD =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSingleHopBFD}, {
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session.base,
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Key.base,
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_EchoFunction.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SingleHopBFD_Session_Authentication.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleHopBFD_Session.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleHopBFD_Key.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleHopBFD_EchoFunction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleHopBFD.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session_Authentication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session_Authentication, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session_Authentication, advertised_key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, destination_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, desired_min_tx_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, required_min_rx_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, detect_multiplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Session, authentication_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, auth_key_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, authentication_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_Key, secret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_EchoFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_EchoFunction, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD_EchoFunction, echo_source_interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD, sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bfd::SingleHopBFD, echo_function_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bfd::SingleHopBFD_Session_Authentication)},
  { 7, -1, sizeof(::bfd::SingleHopBFD_Session)},
  { 20, -1, sizeof(::bfd::SingleHopBFD_Key)},
  { 30, -1, sizeof(::bfd::SingleHopBFD_EchoFunction)},
  { 37, -1, sizeof(::bfd::SingleHopBFD)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bfd::_SingleHopBFD_Session_Authentication_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bfd::_SingleHopBFD_Session_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bfd::_SingleHopBFD_Key_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bfd::_SingleHopBFD_EchoFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bfd::_SingleHopBFD_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/bfd/bfd.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027vpp/model/bfd/bfd.proto\022\003bfd\"\350\005\n\014Singl"
      "eHopBFD\022+\n\010sessions\030\001 \003(\0132\031.bfd.SingleHo"
      "pBFD.Session\022#\n\004keys\030\002 \003(\0132\025.bfd.SingleH"
      "opBFD.Key\0225\n\recho_function\030\003 \001(\0132\036.bfd.S"
      "ingleHopBFD.EchoFunction\032\277\002\n\007Session\022\021\n\t"
      "interface\030\003 \001(\t\022\033\n\023destination_address\030\004"
      " \001(\t\022\026\n\016source_address\030\005 \001(\t\022\017\n\007enabled\030"
      "\007 \001(\010\022\037\n\027desired_min_tx_interval\030\010 \001(\r\022 "
      "\n\030required_min_rx_interval\030\t \001(\r\022\031\n\021dete"
      "ct_multiplier\030\n \001(\r\022@\n\016authentication\030\013 "
      "\001(\0132(.bfd.SingleHopBFD.Session.Authentic"
      "ation\032;\n\016Authentication\022\016\n\006key_id\030\001 \001(\r\022"
      "\031\n\021advertised_key_id\030\002 \001(\r\032\317\001\n\003Key\022\014\n\004na"
      "me\030\001 \001(\t\022\026\n\016auth_key_index\030\002 \001(\r\022\n\n\002id\030\003"
      " \001(\r\022E\n\023authentication_type\030\004 \001(\0162(.bfd."
      "SingleHopBFD.Key.AuthenticationType\022\016\n\006s"
      "ecret\030\005 \001(\t\"\?\n\022AuthenticationType\022\016\n\nKEY"
      "ED_SHA1\020\000\022\031\n\025METICULOUS_KEYED_SHA1\020\001\032;\n\014"
      "EchoFunction\022\014\n\004name\030\001 \001(\t\022\035\n\025echo_sourc"
      "e_interface\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 785);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/bfd/bfd.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto
namespace bfd {
const ::google::protobuf::EnumDescriptor* SingleHopBFD_Key_AuthenticationType_descriptor() {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_enum_descriptors[0];
}
bool SingleHopBFD_Key_AuthenticationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SingleHopBFD_Key_AuthenticationType SingleHopBFD_Key::KEYED_SHA1;
const SingleHopBFD_Key_AuthenticationType SingleHopBFD_Key::METICULOUS_KEYED_SHA1;
const SingleHopBFD_Key_AuthenticationType SingleHopBFD_Key::AuthenticationType_MIN;
const SingleHopBFD_Key_AuthenticationType SingleHopBFD_Key::AuthenticationType_MAX;
const int SingleHopBFD_Key::AuthenticationType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SingleHopBFD_Session_Authentication::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleHopBFD_Session_Authentication::kKeyIdFieldNumber;
const int SingleHopBFD_Session_Authentication::kAdvertisedKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleHopBFD_Session_Authentication::SingleHopBFD_Session_Authentication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session_Authentication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bfd.SingleHopBFD.Session.Authentication)
}
SingleHopBFD_Session_Authentication::SingleHopBFD_Session_Authentication(const SingleHopBFD_Session_Authentication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_id_, &from.key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&advertised_key_id_) -
    reinterpret_cast<char*>(&key_id_)) + sizeof(advertised_key_id_));
  // @@protoc_insertion_point(copy_constructor:bfd.SingleHopBFD.Session.Authentication)
}

void SingleHopBFD_Session_Authentication::SharedCtor() {
  ::memset(&key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advertised_key_id_) -
      reinterpret_cast<char*>(&key_id_)) + sizeof(advertised_key_id_));
}

SingleHopBFD_Session_Authentication::~SingleHopBFD_Session_Authentication() {
  // @@protoc_insertion_point(destructor:bfd.SingleHopBFD.Session.Authentication)
  SharedDtor();
}

void SingleHopBFD_Session_Authentication::SharedDtor() {
}

void SingleHopBFD_Session_Authentication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleHopBFD_Session_Authentication::descriptor() {
  ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleHopBFD_Session_Authentication& SingleHopBFD_Session_Authentication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session_Authentication.base);
  return *internal_default_instance();
}


void SingleHopBFD_Session_Authentication::Clear() {
// @@protoc_insertion_point(message_clear_start:bfd.SingleHopBFD.Session.Authentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advertised_key_id_) -
      reinterpret_cast<char*>(&key_id_)) + sizeof(advertised_key_id_));
  _internal_metadata_.Clear();
}

bool SingleHopBFD_Session_Authentication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bfd.SingleHopBFD.Session.Authentication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 advertised_key_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &advertised_key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bfd.SingleHopBFD.Session.Authentication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bfd.SingleHopBFD.Session.Authentication)
  return false;
#undef DO_
}

void SingleHopBFD_Session_Authentication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bfd.SingleHopBFD.Session.Authentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key_id = 1;
  if (this->key_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->key_id(), output);
  }

  // uint32 advertised_key_id = 2;
  if (this->advertised_key_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->advertised_key_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bfd.SingleHopBFD.Session.Authentication)
}

::google::protobuf::uint8* SingleHopBFD_Session_Authentication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bfd.SingleHopBFD.Session.Authentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 key_id = 1;
  if (this->key_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->key_id(), target);
  }

  // uint32 advertised_key_id = 2;
  if (this->advertised_key_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->advertised_key_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bfd.SingleHopBFD.Session.Authentication)
  return target;
}

size_t SingleHopBFD_Session_Authentication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bfd.SingleHopBFD.Session.Authentication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 key_id = 1;
  if (this->key_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->key_id());
  }

  // uint32 advertised_key_id = 2;
  if (this->advertised_key_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->advertised_key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleHopBFD_Session_Authentication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bfd.SingleHopBFD.Session.Authentication)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleHopBFD_Session_Authentication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleHopBFD_Session_Authentication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bfd.SingleHopBFD.Session.Authentication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bfd.SingleHopBFD.Session.Authentication)
    MergeFrom(*source);
  }
}

void SingleHopBFD_Session_Authentication::MergeFrom(const SingleHopBFD_Session_Authentication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bfd.SingleHopBFD.Session.Authentication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key_id() != 0) {
    set_key_id(from.key_id());
  }
  if (from.advertised_key_id() != 0) {
    set_advertised_key_id(from.advertised_key_id());
  }
}

void SingleHopBFD_Session_Authentication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bfd.SingleHopBFD.Session.Authentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleHopBFD_Session_Authentication::CopyFrom(const SingleHopBFD_Session_Authentication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bfd.SingleHopBFD.Session.Authentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleHopBFD_Session_Authentication::IsInitialized() const {
  return true;
}

void SingleHopBFD_Session_Authentication::Swap(SingleHopBFD_Session_Authentication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleHopBFD_Session_Authentication::InternalSwap(SingleHopBFD_Session_Authentication* other) {
  using std::swap;
  swap(key_id_, other->key_id_);
  swap(advertised_key_id_, other->advertised_key_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleHopBFD_Session_Authentication::GetMetadata() const {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleHopBFD_Session::InitAsDefaultInstance() {
  ::bfd::_SingleHopBFD_Session_default_instance_._instance.get_mutable()->authentication_ = const_cast< ::bfd::SingleHopBFD_Session_Authentication*>(
      ::bfd::SingleHopBFD_Session_Authentication::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleHopBFD_Session::kInterfaceFieldNumber;
const int SingleHopBFD_Session::kDestinationAddressFieldNumber;
const int SingleHopBFD_Session::kSourceAddressFieldNumber;
const int SingleHopBFD_Session::kEnabledFieldNumber;
const int SingleHopBFD_Session::kDesiredMinTxIntervalFieldNumber;
const int SingleHopBFD_Session::kRequiredMinRxIntervalFieldNumber;
const int SingleHopBFD_Session::kDetectMultiplierFieldNumber;
const int SingleHopBFD_Session::kAuthenticationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleHopBFD_Session::SingleHopBFD_Session()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bfd.SingleHopBFD.Session)
}
SingleHopBFD_Session::SingleHopBFD_Session(const SingleHopBFD_Session& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  destination_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination_address().size() > 0) {
    destination_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_address_);
  }
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_address().size() > 0) {
    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  if (from.has_authentication()) {
    authentication_ = new ::bfd::SingleHopBFD_Session_Authentication(*from.authentication_);
  } else {
    authentication_ = NULL;
  }
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&detect_multiplier_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(detect_multiplier_));
  // @@protoc_insertion_point(copy_constructor:bfd.SingleHopBFD.Session)
}

void SingleHopBFD_Session::SharedCtor() {
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&authentication_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detect_multiplier_) -
      reinterpret_cast<char*>(&authentication_)) + sizeof(detect_multiplier_));
}

SingleHopBFD_Session::~SingleHopBFD_Session() {
  // @@protoc_insertion_point(destructor:bfd.SingleHopBFD.Session)
  SharedDtor();
}

void SingleHopBFD_Session::SharedDtor() {
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete authentication_;
}

void SingleHopBFD_Session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleHopBFD_Session::descriptor() {
  ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleHopBFD_Session& SingleHopBFD_Session::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Session.base);
  return *internal_default_instance();
}


void SingleHopBFD_Session::Clear() {
// @@protoc_insertion_point(message_clear_start:bfd.SingleHopBFD.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detect_multiplier_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(detect_multiplier_));
  _internal_metadata_.Clear();
}

bool SingleHopBFD_Session::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bfd.SingleHopBFD.Session)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string interface = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.Session.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_address().data(), static_cast<int>(this->destination_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.Session.destination_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_address().data(), static_cast<int>(this->source_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.Session.source_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 desired_min_tx_interval = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desired_min_tx_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 required_min_rx_interval = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &required_min_rx_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 detect_multiplier = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detect_multiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bfd.SingleHopBFD.Session.Authentication authentication = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authentication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bfd.SingleHopBFD.Session)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bfd.SingleHopBFD.Session)
  return false;
#undef DO_
}

void SingleHopBFD_Session::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bfd.SingleHopBFD.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->interface(), output);
  }

  // string destination_address = 4;
  if (this->destination_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_address().data(), static_cast<int>(this->destination_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.destination_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->destination_address(), output);
  }

  // string source_address = 5;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.source_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->source_address(), output);
  }

  // bool enabled = 7;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->enabled(), output);
  }

  // uint32 desired_min_tx_interval = 8;
  if (this->desired_min_tx_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->desired_min_tx_interval(), output);
  }

  // uint32 required_min_rx_interval = 9;
  if (this->required_min_rx_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->required_min_rx_interval(), output);
  }

  // uint32 detect_multiplier = 10;
  if (this->detect_multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->detect_multiplier(), output);
  }

  // .bfd.SingleHopBFD.Session.Authentication authentication = 11;
  if (this->has_authentication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_authentication(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bfd.SingleHopBFD.Session)
}

::google::protobuf::uint8* SingleHopBFD_Session::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bfd.SingleHopBFD.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->interface(), target);
  }

  // string destination_address = 4;
  if (this->destination_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_address().data(), static_cast<int>(this->destination_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.destination_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->destination_address(), target);
  }

  // string source_address = 5;
  if (this->source_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_address().data(), static_cast<int>(this->source_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Session.source_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->source_address(), target);
  }

  // bool enabled = 7;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->enabled(), target);
  }

  // uint32 desired_min_tx_interval = 8;
  if (this->desired_min_tx_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->desired_min_tx_interval(), target);
  }

  // uint32 required_min_rx_interval = 9;
  if (this->required_min_rx_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->required_min_rx_interval(), target);
  }

  // uint32 detect_multiplier = 10;
  if (this->detect_multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->detect_multiplier(), target);
  }

  // .bfd.SingleHopBFD.Session.Authentication authentication = 11;
  if (this->has_authentication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_authentication(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bfd.SingleHopBFD.Session)
  return target;
}

size_t SingleHopBFD_Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bfd.SingleHopBFD.Session)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string interface = 3;
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // string destination_address = 4;
  if (this->destination_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_address());
  }

  // string source_address = 5;
  if (this->source_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_address());
  }

  // .bfd.SingleHopBFD.Session.Authentication authentication = 11;
  if (this->has_authentication()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *authentication_);
  }

  // bool enabled = 7;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // uint32 desired_min_tx_interval = 8;
  if (this->desired_min_tx_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desired_min_tx_interval());
  }

  // uint32 required_min_rx_interval = 9;
  if (this->required_min_rx_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->required_min_rx_interval());
  }

  // uint32 detect_multiplier = 10;
  if (this->detect_multiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->detect_multiplier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleHopBFD_Session::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bfd.SingleHopBFD.Session)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleHopBFD_Session* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleHopBFD_Session>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bfd.SingleHopBFD.Session)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bfd.SingleHopBFD.Session)
    MergeFrom(*source);
  }
}

void SingleHopBFD_Session::MergeFrom(const SingleHopBFD_Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bfd.SingleHopBFD.Session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.destination_address().size() > 0) {

    destination_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_address_);
  }
  if (from.source_address().size() > 0) {

    source_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_address_);
  }
  if (from.has_authentication()) {
    mutable_authentication()->::bfd::SingleHopBFD_Session_Authentication::MergeFrom(from.authentication());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.desired_min_tx_interval() != 0) {
    set_desired_min_tx_interval(from.desired_min_tx_interval());
  }
  if (from.required_min_rx_interval() != 0) {
    set_required_min_rx_interval(from.required_min_rx_interval());
  }
  if (from.detect_multiplier() != 0) {
    set_detect_multiplier(from.detect_multiplier());
  }
}

void SingleHopBFD_Session::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bfd.SingleHopBFD.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleHopBFD_Session::CopyFrom(const SingleHopBFD_Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bfd.SingleHopBFD.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleHopBFD_Session::IsInitialized() const {
  return true;
}

void SingleHopBFD_Session::Swap(SingleHopBFD_Session* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleHopBFD_Session::InternalSwap(SingleHopBFD_Session* other) {
  using std::swap;
  interface_.Swap(&other->interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_address_.Swap(&other->destination_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_address_.Swap(&other->source_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(authentication_, other->authentication_);
  swap(enabled_, other->enabled_);
  swap(desired_min_tx_interval_, other->desired_min_tx_interval_);
  swap(required_min_rx_interval_, other->required_min_rx_interval_);
  swap(detect_multiplier_, other->detect_multiplier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleHopBFD_Session::GetMetadata() const {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleHopBFD_Key::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleHopBFD_Key::kNameFieldNumber;
const int SingleHopBFD_Key::kAuthKeyIndexFieldNumber;
const int SingleHopBFD_Key::kIdFieldNumber;
const int SingleHopBFD_Key::kAuthenticationTypeFieldNumber;
const int SingleHopBFD_Key::kSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleHopBFD_Key::SingleHopBFD_Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Key.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bfd.SingleHopBFD.Key)
}
SingleHopBFD_Key::SingleHopBFD_Key(const SingleHopBFD_Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  ::memcpy(&auth_key_index_, &from.auth_key_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&authentication_type_) -
    reinterpret_cast<char*>(&auth_key_index_)) + sizeof(authentication_type_));
  // @@protoc_insertion_point(copy_constructor:bfd.SingleHopBFD.Key)
}

void SingleHopBFD_Key::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_key_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authentication_type_) -
      reinterpret_cast<char*>(&auth_key_index_)) + sizeof(authentication_type_));
}

SingleHopBFD_Key::~SingleHopBFD_Key() {
  // @@protoc_insertion_point(destructor:bfd.SingleHopBFD.Key)
  SharedDtor();
}

void SingleHopBFD_Key::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SingleHopBFD_Key::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleHopBFD_Key::descriptor() {
  ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleHopBFD_Key& SingleHopBFD_Key::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_Key.base);
  return *internal_default_instance();
}


void SingleHopBFD_Key::Clear() {
// @@protoc_insertion_point(message_clear_start:bfd.SingleHopBFD.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_key_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authentication_type_) -
      reinterpret_cast<char*>(&auth_key_index_)) + sizeof(authentication_type_));
  _internal_metadata_.Clear();
}

bool SingleHopBFD_Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bfd.SingleHopBFD.Key)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.Key.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 auth_key_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_key_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bfd.SingleHopBFD.Key.AuthenticationType authentication_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_authentication_type(static_cast< ::bfd::SingleHopBFD_Key_AuthenticationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret().data(), static_cast<int>(this->secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.Key.secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bfd.SingleHopBFD.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bfd.SingleHopBFD.Key)
  return false;
#undef DO_
}

void SingleHopBFD_Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bfd.SingleHopBFD.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Key.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 auth_key_index = 2;
  if (this->auth_key_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->auth_key_index(), output);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // .bfd.SingleHopBFD.Key.AuthenticationType authentication_type = 4;
  if (this->authentication_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->authentication_type(), output);
  }

  // string secret = 5;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Key.secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->secret(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bfd.SingleHopBFD.Key)
}

::google::protobuf::uint8* SingleHopBFD_Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bfd.SingleHopBFD.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Key.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 auth_key_index = 2;
  if (this->auth_key_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->auth_key_index(), target);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // .bfd.SingleHopBFD.Key.AuthenticationType authentication_type = 4;
  if (this->authentication_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->authentication_type(), target);
  }

  // string secret = 5;
  if (this->secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret().data(), static_cast<int>(this->secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.Key.secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->secret(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bfd.SingleHopBFD.Key)
  return target;
}

size_t SingleHopBFD_Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bfd.SingleHopBFD.Key)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string secret = 5;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret());
  }

  // uint32 auth_key_index = 2;
  if (this->auth_key_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->auth_key_index());
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .bfd.SingleHopBFD.Key.AuthenticationType authentication_type = 4;
  if (this->authentication_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->authentication_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleHopBFD_Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bfd.SingleHopBFD.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleHopBFD_Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleHopBFD_Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bfd.SingleHopBFD.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bfd.SingleHopBFD.Key)
    MergeFrom(*source);
  }
}

void SingleHopBFD_Key::MergeFrom(const SingleHopBFD_Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bfd.SingleHopBFD.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.secret().size() > 0) {

    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.auth_key_index() != 0) {
    set_auth_key_index(from.auth_key_index());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.authentication_type() != 0) {
    set_authentication_type(from.authentication_type());
  }
}

void SingleHopBFD_Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bfd.SingleHopBFD.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleHopBFD_Key::CopyFrom(const SingleHopBFD_Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bfd.SingleHopBFD.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleHopBFD_Key::IsInitialized() const {
  return true;
}

void SingleHopBFD_Key::Swap(SingleHopBFD_Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleHopBFD_Key::InternalSwap(SingleHopBFD_Key* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secret_.Swap(&other->secret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_key_index_, other->auth_key_index_);
  swap(id_, other->id_);
  swap(authentication_type_, other->authentication_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleHopBFD_Key::GetMetadata() const {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleHopBFD_EchoFunction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleHopBFD_EchoFunction::kNameFieldNumber;
const int SingleHopBFD_EchoFunction::kEchoSourceInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleHopBFD_EchoFunction::SingleHopBFD_EchoFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_EchoFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bfd.SingleHopBFD.EchoFunction)
}
SingleHopBFD_EchoFunction::SingleHopBFD_EchoFunction(const SingleHopBFD_EchoFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  echo_source_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.echo_source_interface().size() > 0) {
    echo_source_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.echo_source_interface_);
  }
  // @@protoc_insertion_point(copy_constructor:bfd.SingleHopBFD.EchoFunction)
}

void SingleHopBFD_EchoFunction::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  echo_source_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SingleHopBFD_EchoFunction::~SingleHopBFD_EchoFunction() {
  // @@protoc_insertion_point(destructor:bfd.SingleHopBFD.EchoFunction)
  SharedDtor();
}

void SingleHopBFD_EchoFunction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  echo_source_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SingleHopBFD_EchoFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleHopBFD_EchoFunction::descriptor() {
  ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleHopBFD_EchoFunction& SingleHopBFD_EchoFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD_EchoFunction.base);
  return *internal_default_instance();
}


void SingleHopBFD_EchoFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:bfd.SingleHopBFD.EchoFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  echo_source_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SingleHopBFD_EchoFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bfd.SingleHopBFD.EchoFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.EchoFunction.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string echo_source_interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_echo_source_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->echo_source_interface().data(), static_cast<int>(this->echo_source_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bfd.SingleHopBFD.EchoFunction.echo_source_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bfd.SingleHopBFD.EchoFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bfd.SingleHopBFD.EchoFunction)
  return false;
#undef DO_
}

void SingleHopBFD_EchoFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bfd.SingleHopBFD.EchoFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.EchoFunction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string echo_source_interface = 2;
  if (this->echo_source_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->echo_source_interface().data(), static_cast<int>(this->echo_source_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.EchoFunction.echo_source_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->echo_source_interface(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bfd.SingleHopBFD.EchoFunction)
}

::google::protobuf::uint8* SingleHopBFD_EchoFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bfd.SingleHopBFD.EchoFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.EchoFunction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string echo_source_interface = 2;
  if (this->echo_source_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->echo_source_interface().data(), static_cast<int>(this->echo_source_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bfd.SingleHopBFD.EchoFunction.echo_source_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->echo_source_interface(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bfd.SingleHopBFD.EchoFunction)
  return target;
}

size_t SingleHopBFD_EchoFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bfd.SingleHopBFD.EchoFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string echo_source_interface = 2;
  if (this->echo_source_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->echo_source_interface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleHopBFD_EchoFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bfd.SingleHopBFD.EchoFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleHopBFD_EchoFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleHopBFD_EchoFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bfd.SingleHopBFD.EchoFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bfd.SingleHopBFD.EchoFunction)
    MergeFrom(*source);
  }
}

void SingleHopBFD_EchoFunction::MergeFrom(const SingleHopBFD_EchoFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bfd.SingleHopBFD.EchoFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.echo_source_interface().size() > 0) {

    echo_source_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.echo_source_interface_);
  }
}

void SingleHopBFD_EchoFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bfd.SingleHopBFD.EchoFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleHopBFD_EchoFunction::CopyFrom(const SingleHopBFD_EchoFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bfd.SingleHopBFD.EchoFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleHopBFD_EchoFunction::IsInitialized() const {
  return true;
}

void SingleHopBFD_EchoFunction::Swap(SingleHopBFD_EchoFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleHopBFD_EchoFunction::InternalSwap(SingleHopBFD_EchoFunction* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  echo_source_interface_.Swap(&other->echo_source_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleHopBFD_EchoFunction::GetMetadata() const {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleHopBFD::InitAsDefaultInstance() {
  ::bfd::_SingleHopBFD_default_instance_._instance.get_mutable()->echo_function_ = const_cast< ::bfd::SingleHopBFD_EchoFunction*>(
      ::bfd::SingleHopBFD_EchoFunction::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleHopBFD::kSessionsFieldNumber;
const int SingleHopBFD::kKeysFieldNumber;
const int SingleHopBFD::kEchoFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleHopBFD::SingleHopBFD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bfd.SingleHopBFD)
}
SingleHopBFD::SingleHopBFD(const SingleHopBFD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sessions_(from.sessions_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_echo_function()) {
    echo_function_ = new ::bfd::SingleHopBFD_EchoFunction(*from.echo_function_);
  } else {
    echo_function_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bfd.SingleHopBFD)
}

void SingleHopBFD::SharedCtor() {
  echo_function_ = NULL;
}

SingleHopBFD::~SingleHopBFD() {
  // @@protoc_insertion_point(destructor:bfd.SingleHopBFD)
  SharedDtor();
}

void SingleHopBFD::SharedDtor() {
  if (this != internal_default_instance()) delete echo_function_;
}

void SingleHopBFD::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleHopBFD::descriptor() {
  ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleHopBFD& SingleHopBFD::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::scc_info_SingleHopBFD.base);
  return *internal_default_instance();
}


void SingleHopBFD::Clear() {
// @@protoc_insertion_point(message_clear_start:bfd.SingleHopBFD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  keys_.Clear();
  if (GetArenaNoVirtual() == NULL && echo_function_ != NULL) {
    delete echo_function_;
  }
  echo_function_ = NULL;
  _internal_metadata_.Clear();
}

bool SingleHopBFD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bfd.SingleHopBFD)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bfd.SingleHopBFD.Session sessions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sessions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bfd.SingleHopBFD.Key keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bfd.SingleHopBFD.EchoFunction echo_function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_echo_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bfd.SingleHopBFD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bfd.SingleHopBFD)
  return false;
#undef DO_
}

void SingleHopBFD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bfd.SingleHopBFD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bfd.SingleHopBFD.Session sessions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sessions(static_cast<int>(i)),
      output);
  }

  // repeated .bfd.SingleHopBFD.Key keys = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->keys(static_cast<int>(i)),
      output);
  }

  // .bfd.SingleHopBFD.EchoFunction echo_function = 3;
  if (this->has_echo_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_echo_function(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bfd.SingleHopBFD)
}

::google::protobuf::uint8* SingleHopBFD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bfd.SingleHopBFD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bfd.SingleHopBFD.Session sessions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sessions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .bfd.SingleHopBFD.Key keys = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->keys(static_cast<int>(i)), deterministic, target);
  }

  // .bfd.SingleHopBFD.EchoFunction echo_function = 3;
  if (this->has_echo_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_echo_function(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bfd.SingleHopBFD)
  return target;
}

size_t SingleHopBFD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bfd.SingleHopBFD)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bfd.SingleHopBFD.Session sessions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sessions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sessions(static_cast<int>(i)));
    }
  }

  // repeated .bfd.SingleHopBFD.Key keys = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  // .bfd.SingleHopBFD.EchoFunction echo_function = 3;
  if (this->has_echo_function()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *echo_function_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleHopBFD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bfd.SingleHopBFD)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleHopBFD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleHopBFD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bfd.SingleHopBFD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bfd.SingleHopBFD)
    MergeFrom(*source);
  }
}

void SingleHopBFD::MergeFrom(const SingleHopBFD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bfd.SingleHopBFD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  keys_.MergeFrom(from.keys_);
  if (from.has_echo_function()) {
    mutable_echo_function()->::bfd::SingleHopBFD_EchoFunction::MergeFrom(from.echo_function());
  }
}

void SingleHopBFD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bfd.SingleHopBFD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleHopBFD::CopyFrom(const SingleHopBFD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bfd.SingleHopBFD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleHopBFD::IsInitialized() const {
  return true;
}

void SingleHopBFD::Swap(SingleHopBFD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleHopBFD::InternalSwap(SingleHopBFD* other) {
  using std::swap;
  CastToBase(&sessions_)->InternalSwap(CastToBase(&other->sessions_));
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  swap(echo_function_, other->echo_function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleHopBFD::GetMetadata() const {
  protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fbfd_2fbfd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bfd
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bfd::SingleHopBFD_Session_Authentication* Arena::CreateMaybeMessage< ::bfd::SingleHopBFD_Session_Authentication >(Arena* arena) {
  return Arena::CreateInternal< ::bfd::SingleHopBFD_Session_Authentication >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bfd::SingleHopBFD_Session* Arena::CreateMaybeMessage< ::bfd::SingleHopBFD_Session >(Arena* arena) {
  return Arena::CreateInternal< ::bfd::SingleHopBFD_Session >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bfd::SingleHopBFD_Key* Arena::CreateMaybeMessage< ::bfd::SingleHopBFD_Key >(Arena* arena) {
  return Arena::CreateInternal< ::bfd::SingleHopBFD_Key >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bfd::SingleHopBFD_EchoFunction* Arena::CreateMaybeMessage< ::bfd::SingleHopBFD_EchoFunction >(Arena* arena) {
  return Arena::CreateInternal< ::bfd::SingleHopBFD_EchoFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bfd::SingleHopBFD* Arena::CreateMaybeMessage< ::bfd::SingleHopBFD >(Arena* arena) {
  return Arena::CreateInternal< ::bfd::SingleHopBFD >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
