// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/ipsec/ipsec.proto

#include "vpp/model/ipsec/ipsec.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SecurityAssociations_SA;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SecurityPolicyDatabases_SPD_Interface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SecurityPolicyDatabases_SPD_PolicyEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TunnelInterfaces_Tunnel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SecurityPolicyDatabases_SPD;
}  // namespace protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto
namespace ipsec {
class TunnelInterfaces_TunnelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TunnelInterfaces_Tunnel>
      _instance;
} _TunnelInterfaces_Tunnel_default_instance_;
class TunnelInterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TunnelInterfaces>
      _instance;
} _TunnelInterfaces_default_instance_;
class SecurityPolicyDatabases_SPD_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityPolicyDatabases_SPD_Interface>
      _instance;
} _SecurityPolicyDatabases_SPD_Interface_default_instance_;
class SecurityPolicyDatabases_SPD_PolicyEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityPolicyDatabases_SPD_PolicyEntry>
      _instance;
} _SecurityPolicyDatabases_SPD_PolicyEntry_default_instance_;
class SecurityPolicyDatabases_SPDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityPolicyDatabases_SPD>
      _instance;
} _SecurityPolicyDatabases_SPD_default_instance_;
class SecurityPolicyDatabasesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityPolicyDatabases>
      _instance;
} _SecurityPolicyDatabases_default_instance_;
class SecurityAssociations_SADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityAssociations_SA>
      _instance;
} _SecurityAssociations_SA_default_instance_;
class SecurityAssociationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityAssociations>
      _instance;
} _SecurityAssociations_default_instance_;
class ResyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResyncRequest>
      _instance;
} _ResyncRequest_default_instance_;
}  // namespace ipsec
namespace protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto {
static void InitDefaultsTunnelInterfaces_Tunnel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_TunnelInterfaces_Tunnel_default_instance_;
    new (ptr) ::ipsec::TunnelInterfaces_Tunnel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::TunnelInterfaces_Tunnel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TunnelInterfaces_Tunnel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTunnelInterfaces_Tunnel}, {}};

static void InitDefaultsTunnelInterfaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_TunnelInterfaces_default_instance_;
    new (ptr) ::ipsec::TunnelInterfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::TunnelInterfaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TunnelInterfaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTunnelInterfaces}, {
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces_Tunnel.base,}};

static void InitDefaultsSecurityPolicyDatabases_SPD_Interface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityPolicyDatabases_SPD_Interface_default_instance_;
    new (ptr) ::ipsec::SecurityPolicyDatabases_SPD_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityPolicyDatabases_SPD_Interface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SecurityPolicyDatabases_SPD_Interface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSecurityPolicyDatabases_SPD_Interface}, {}};

static void InitDefaultsSecurityPolicyDatabases_SPD_PolicyEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityPolicyDatabases_SPD_PolicyEntry_default_instance_;
    new (ptr) ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SecurityPolicyDatabases_SPD_PolicyEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSecurityPolicyDatabases_SPD_PolicyEntry}, {}};

static void InitDefaultsSecurityPolicyDatabases_SPD() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityPolicyDatabases_SPD_default_instance_;
    new (ptr) ::ipsec::SecurityPolicyDatabases_SPD();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityPolicyDatabases_SPD::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SecurityPolicyDatabases_SPD =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSecurityPolicyDatabases_SPD}, {
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_Interface.base,
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_PolicyEntry.base,}};

static void InitDefaultsSecurityPolicyDatabases() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityPolicyDatabases_default_instance_;
    new (ptr) ::ipsec::SecurityPolicyDatabases();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityPolicyDatabases::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SecurityPolicyDatabases =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSecurityPolicyDatabases}, {
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD.base,}};

static void InitDefaultsSecurityAssociations_SA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityAssociations_SA_default_instance_;
    new (ptr) ::ipsec::SecurityAssociations_SA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityAssociations_SA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SecurityAssociations_SA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSecurityAssociations_SA}, {}};

static void InitDefaultsSecurityAssociations() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_SecurityAssociations_default_instance_;
    new (ptr) ::ipsec::SecurityAssociations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::SecurityAssociations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SecurityAssociations =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSecurityAssociations}, {
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations_SA.base,}};

static void InitDefaultsResyncRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipsec::_ResyncRequest_default_instance_;
    new (ptr) ::ipsec::ResyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipsec::ResyncRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ResyncRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsResyncRequest}, {
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces_Tunnel.base,
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD.base,
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations_SA.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TunnelInterfaces_Tunnel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TunnelInterfaces.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityPolicyDatabases_SPD_Interface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityPolicyDatabases_SPD_PolicyEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityPolicyDatabases_SPD.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityPolicyDatabases.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityAssociations_SA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SecurityAssociations.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResyncRequest.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, esn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, anti_replay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, remote_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, local_spi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, remote_spi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, crypto_alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, local_crypto_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, remote_crypto_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, integ_alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, local_integ_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, remote_integ_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, ip_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, vrf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces_Tunnel, unnumbered_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::TunnelInterfaces, tunnels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_Interface, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, sa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, is_outbound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, remote_addr_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, remote_addr_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, local_addr_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, local_addr_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, remote_port_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, remote_port_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, local_port_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, local_port_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases_SPD, policy_entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityPolicyDatabases, spds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, spi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, crypto_alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, crypto_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, integ_alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, integ_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, use_esn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, use_anti_replay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, tunnel_src_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, tunnel_dst_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations_SA, enable_udp_encap_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::SecurityAssociations, sas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::ResyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::ResyncRequest, tunnels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::ResyncRequest, spds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipsec::ResyncRequest, sas_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ipsec::TunnelInterfaces_Tunnel)},
  { 22, -1, sizeof(::ipsec::TunnelInterfaces)},
  { 28, -1, sizeof(::ipsec::SecurityPolicyDatabases_SPD_Interface)},
  { 34, -1, sizeof(::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry)},
  { 52, -1, sizeof(::ipsec::SecurityPolicyDatabases_SPD)},
  { 60, -1, sizeof(::ipsec::SecurityPolicyDatabases)},
  { 66, -1, sizeof(::ipsec::SecurityAssociations_SA)},
  { 83, -1, sizeof(::ipsec::SecurityAssociations)},
  { 89, -1, sizeof(::ipsec::ResyncRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_TunnelInterfaces_Tunnel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_TunnelInterfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityPolicyDatabases_SPD_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityPolicyDatabases_SPD_PolicyEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityPolicyDatabases_SPD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityPolicyDatabases_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityAssociations_SA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_SecurityAssociations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipsec::_ResyncRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/ipsec/ipsec.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033vpp/model/ipsec/ipsec.proto\022\005ipsec\"\325\003\n"
      "\020TunnelInterfaces\022/\n\007tunnels\030\001 \003(\0132\036.ips"
      "ec.TunnelInterfaces.Tunnel\032\217\003\n\006Tunnel\022\014\n"
      "\004name\030\001 \001(\t\022\013\n\003esn\030\002 \001(\010\022\023\n\013anti_replay\030"
      "\003 \001(\010\022\020\n\010local_ip\030\004 \001(\t\022\021\n\tremote_ip\030\005 \001"
      "(\t\022\021\n\tlocal_spi\030\006 \001(\r\022\022\n\nremote_spi\030\007 \001("
      "\r\022*\n\ncrypto_alg\030\010 \001(\0162\026.ipsec.CryptoAlgo"
      "rithm\022\030\n\020local_crypto_key\030\t \001(\t\022\031\n\021remot"
      "e_crypto_key\030\n \001(\t\022(\n\tinteg_alg\030\013 \001(\0162\025."
      "ipsec.IntegAlgorithm\022\027\n\017local_integ_key\030"
      "\014 \001(\t\022\030\n\020remote_integ_key\030\r \001(\t\022\017\n\007enabl"
      "ed\030d \001(\010\022\024\n\014ip_addresses\030e \003(\t\022\013\n\003vrf\030f "
      "\001(\r\022\027\n\017unnumbered_name\030g \001(\t\"\242\005\n\027Securit"
      "yPolicyDatabases\0220\n\004spds\030\001 \003(\0132\".ipsec.S"
      "ecurityPolicyDatabases.SPD\032\324\004\n\003SPD\022\014\n\004na"
      "me\030\001 \001(\t\022@\n\ninterfaces\030\002 \003(\0132,.ipsec.Sec"
      "urityPolicyDatabases.SPD.Interface\022F\n\016po"
      "licy_entries\030\003 \003(\0132..ipsec.SecurityPolic"
      "yDatabases.SPD.PolicyEntry\032\031\n\tInterface\022"
      "\014\n\004name\030\001 \001(\t\032\231\003\n\013PolicyEntry\022\n\n\002sa\030\001 \001("
      "\t\022\020\n\010priority\030\002 \001(\005\022\023\n\013is_outbound\030\003 \001(\010"
      "\022\031\n\021remote_addr_start\030\004 \001(\t\022\030\n\020remote_ad"
      "dr_stop\030\005 \001(\t\022\030\n\020local_addr_start\030\006 \001(\t\022"
      "\027\n\017local_addr_stop\030\007 \001(\t\022\020\n\010protocol\030\010 \001"
      "(\r\022\031\n\021remote_port_start\030\t \001(\r\022\030\n\020remote_"
      "port_stop\030\n \001(\r\022\030\n\020local_port_start\030\013 \001("
      "\r\022\027\n\017local_port_stop\030\014 \001(\r\022E\n\006action\030\r \001"
      "(\01625.ipsec.SecurityPolicyDatabases.SPD.P"
      "olicyEntry.Action\".\n\006Action\022\n\n\006BYPASS\020\000\022"
      "\013\n\007DISCARD\020\001\022\013\n\007PROTECT\020\003\"\272\003\n\024SecurityAs"
      "sociations\022+\n\003sas\030\001 \003(\0132\036.ipsec.Security"
      "Associations.SA\032\364\002\n\002SA\022\014\n\004name\030\001 \001(\t\022\013\n\003"
      "spi\030\002 \001(\r\022>\n\010protocol\030\003 \001(\0162,.ipsec.Secu"
      "rityAssociations.SA.IPSecProtocol\022*\n\ncry"
      "pto_alg\030\004 \001(\0162\026.ipsec.CryptoAlgorithm\022\022\n"
      "\ncrypto_key\030\005 \001(\t\022(\n\tinteg_alg\030\006 \001(\0162\025.i"
      "psec.IntegAlgorithm\022\021\n\tinteg_key\030\007 \001(\t\022\017"
      "\n\007use_esn\030\010 \001(\010\022\027\n\017use_anti_replay\030\t \001(\010"
      "\022\027\n\017tunnel_src_addr\030\n \001(\t\022\027\n\017tunnel_dst_"
      "addr\030\013 \001(\t\022\030\n\020enable_udp_encap\030\014 \001(\010\" \n\r"
      "IPSecProtocol\022\006\n\002AH\020\000\022\007\n\003ESP\020\001\"\237\001\n\rResyn"
      "cRequest\022/\n\007tunnels\030\001 \003(\0132\036.ipsec.Tunnel"
      "Interfaces.Tunnel\0220\n\004spds\030\002 \003(\0132\".ipsec."
      "SecurityPolicyDatabases.SPD\022+\n\003sas\030\003 \003(\013"
      "2\036.ipsec.SecurityAssociations.SA*U\n\017Cryp"
      "toAlgorithm\022\017\n\013NONE_CRYPTO\020\000\022\017\n\013AES_CBC_"
      "128\020\001\022\017\n\013AES_CBC_192\020\002\022\017\n\013AES_CBC_256\020\003*"
      "|\n\016IntegAlgorithm\022\016\n\nNONE_INTEG\020\000\022\n\n\006MD5"
      "_96\020\001\022\013\n\007SHA1_96\020\002\022\016\n\nSHA_256_96\020\003\022\017\n\013SH"
      "A_256_128\020\004\022\017\n\013SHA_384_192\020\005\022\017\n\013SHA_512_"
      "256\020\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2013);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/ipsec/ipsec.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto
namespace ipsec {
const ::google::protobuf::EnumDescriptor* SecurityPolicyDatabases_SPD_PolicyEntry_Action_descriptor() {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_enum_descriptors[0];
}
bool SecurityPolicyDatabases_SPD_PolicyEntry_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SecurityPolicyDatabases_SPD_PolicyEntry_Action SecurityPolicyDatabases_SPD_PolicyEntry::BYPASS;
const SecurityPolicyDatabases_SPD_PolicyEntry_Action SecurityPolicyDatabases_SPD_PolicyEntry::DISCARD;
const SecurityPolicyDatabases_SPD_PolicyEntry_Action SecurityPolicyDatabases_SPD_PolicyEntry::PROTECT;
const SecurityPolicyDatabases_SPD_PolicyEntry_Action SecurityPolicyDatabases_SPD_PolicyEntry::Action_MIN;
const SecurityPolicyDatabases_SPD_PolicyEntry_Action SecurityPolicyDatabases_SPD_PolicyEntry::Action_MAX;
const int SecurityPolicyDatabases_SPD_PolicyEntry::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SecurityAssociations_SA_IPSecProtocol_descriptor() {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_enum_descriptors[1];
}
bool SecurityAssociations_SA_IPSecProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SecurityAssociations_SA_IPSecProtocol SecurityAssociations_SA::AH;
const SecurityAssociations_SA_IPSecProtocol SecurityAssociations_SA::ESP;
const SecurityAssociations_SA_IPSecProtocol SecurityAssociations_SA::IPSecProtocol_MIN;
const SecurityAssociations_SA_IPSecProtocol SecurityAssociations_SA::IPSecProtocol_MAX;
const int SecurityAssociations_SA::IPSecProtocol_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CryptoAlgorithm_descriptor() {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_enum_descriptors[2];
}
bool CryptoAlgorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IntegAlgorithm_descriptor() {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_enum_descriptors[3];
}
bool IntegAlgorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TunnelInterfaces_Tunnel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TunnelInterfaces_Tunnel::kNameFieldNumber;
const int TunnelInterfaces_Tunnel::kEsnFieldNumber;
const int TunnelInterfaces_Tunnel::kAntiReplayFieldNumber;
const int TunnelInterfaces_Tunnel::kLocalIpFieldNumber;
const int TunnelInterfaces_Tunnel::kRemoteIpFieldNumber;
const int TunnelInterfaces_Tunnel::kLocalSpiFieldNumber;
const int TunnelInterfaces_Tunnel::kRemoteSpiFieldNumber;
const int TunnelInterfaces_Tunnel::kCryptoAlgFieldNumber;
const int TunnelInterfaces_Tunnel::kLocalCryptoKeyFieldNumber;
const int TunnelInterfaces_Tunnel::kRemoteCryptoKeyFieldNumber;
const int TunnelInterfaces_Tunnel::kIntegAlgFieldNumber;
const int TunnelInterfaces_Tunnel::kLocalIntegKeyFieldNumber;
const int TunnelInterfaces_Tunnel::kRemoteIntegKeyFieldNumber;
const int TunnelInterfaces_Tunnel::kEnabledFieldNumber;
const int TunnelInterfaces_Tunnel::kIpAddressesFieldNumber;
const int TunnelInterfaces_Tunnel::kVrfFieldNumber;
const int TunnelInterfaces_Tunnel::kUnnumberedNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TunnelInterfaces_Tunnel::TunnelInterfaces_Tunnel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces_Tunnel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.TunnelInterfaces.Tunnel)
}
TunnelInterfaces_Tunnel::TunnelInterfaces_Tunnel(const TunnelInterfaces_Tunnel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip_addresses_(from.ip_addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  remote_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_ip().size() > 0) {
    remote_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_ip_);
  }
  local_crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_crypto_key().size() > 0) {
    local_crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_crypto_key_);
  }
  remote_crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_crypto_key().size() > 0) {
    remote_crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_crypto_key_);
  }
  local_integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_integ_key().size() > 0) {
    local_integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_integ_key_);
  }
  remote_integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_integ_key().size() > 0) {
    remote_integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_integ_key_);
  }
  unnumbered_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unnumbered_name().size() > 0) {
    unnumbered_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unnumbered_name_);
  }
  ::memcpy(&local_spi_, &from.local_spi_,
    static_cast<size_t>(reinterpret_cast<char*>(&vrf_) -
    reinterpret_cast<char*>(&local_spi_)) + sizeof(vrf_));
  // @@protoc_insertion_point(copy_constructor:ipsec.TunnelInterfaces.Tunnel)
}

void TunnelInterfaces_Tunnel::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unnumbered_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_spi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrf_) -
      reinterpret_cast<char*>(&local_spi_)) + sizeof(vrf_));
}

TunnelInterfaces_Tunnel::~TunnelInterfaces_Tunnel() {
  // @@protoc_insertion_point(destructor:ipsec.TunnelInterfaces.Tunnel)
  SharedDtor();
}

void TunnelInterfaces_Tunnel::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_crypto_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_crypto_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_integ_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_integ_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unnumbered_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TunnelInterfaces_Tunnel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TunnelInterfaces_Tunnel::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TunnelInterfaces_Tunnel& TunnelInterfaces_Tunnel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces_Tunnel.base);
  return *internal_default_instance();
}


void TunnelInterfaces_Tunnel::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.TunnelInterfaces.Tunnel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addresses_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_crypto_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_crypto_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_integ_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_integ_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unnumbered_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_spi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrf_) -
      reinterpret_cast<char*>(&local_spi_)) + sizeof(vrf_));
  _internal_metadata_.Clear();
}

bool TunnelInterfaces_Tunnel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.TunnelInterfaces.Tunnel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool esn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &esn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool anti_replay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &anti_replay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), static_cast<int>(this->local_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_ip().data(), static_cast<int>(this->remote_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.remote_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_spi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_spi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remote_spi = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_spi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.CryptoAlgorithm crypto_alg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_crypto_alg(static_cast< ::ipsec::CryptoAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_crypto_key = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_crypto_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_crypto_key().data(), static_cast<int>(this->local_crypto_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.local_crypto_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_crypto_key = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_crypto_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_crypto_key().data(), static_cast<int>(this->remote_crypto_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.remote_crypto_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.IntegAlgorithm integ_alg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_integ_alg(static_cast< ::ipsec::IntegAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_integ_key = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_integ_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_integ_key().data(), static_cast<int>(this->local_integ_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.local_integ_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_integ_key = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_integ_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_integ_key().data(), static_cast<int>(this->remote_integ_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.remote_integ_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enabled = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 800 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ip_addresses = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ip_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addresses(this->ip_addresses_size() - 1).data(),
            static_cast<int>(this->ip_addresses(this->ip_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.ip_addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vrf = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 816 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unnumbered_name = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unnumbered_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unnumbered_name().data(), static_cast<int>(this->unnumbered_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.TunnelInterfaces.Tunnel.unnumbered_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.TunnelInterfaces.Tunnel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.TunnelInterfaces.Tunnel)
  return false;
#undef DO_
}

void TunnelInterfaces_Tunnel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.TunnelInterfaces.Tunnel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool esn = 2;
  if (this->esn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->esn(), output);
  }

  // bool anti_replay = 3;
  if (this->anti_replay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->anti_replay(), output);
  }

  // string local_ip = 4;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->local_ip(), output);
  }

  // string remote_ip = 5;
  if (this->remote_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_ip().data(), static_cast<int>(this->remote_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remote_ip(), output);
  }

  // uint32 local_spi = 6;
  if (this->local_spi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->local_spi(), output);
  }

  // uint32 remote_spi = 7;
  if (this->remote_spi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->remote_spi(), output);
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 8;
  if (this->crypto_alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->crypto_alg(), output);
  }

  // string local_crypto_key = 9;
  if (this->local_crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_crypto_key().data(), static_cast<int>(this->local_crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_crypto_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->local_crypto_key(), output);
  }

  // string remote_crypto_key = 10;
  if (this->remote_crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_crypto_key().data(), static_cast<int>(this->remote_crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_crypto_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->remote_crypto_key(), output);
  }

  // .ipsec.IntegAlgorithm integ_alg = 11;
  if (this->integ_alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->integ_alg(), output);
  }

  // string local_integ_key = 12;
  if (this->local_integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_integ_key().data(), static_cast<int>(this->local_integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_integ_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->local_integ_key(), output);
  }

  // string remote_integ_key = 13;
  if (this->remote_integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_integ_key().data(), static_cast<int>(this->remote_integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_integ_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->remote_integ_key(), output);
  }

  // bool enabled = 100;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(100, this->enabled(), output);
  }

  // repeated string ip_addresses = 101;
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addresses(i).data(), static_cast<int>(this->ip_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.ip_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      101, this->ip_addresses(i), output);
  }

  // uint32 vrf = 102;
  if (this->vrf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(102, this->vrf(), output);
  }

  // string unnumbered_name = 103;
  if (this->unnumbered_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unnumbered_name().data(), static_cast<int>(this->unnumbered_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.unnumbered_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->unnumbered_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.TunnelInterfaces.Tunnel)
}

::google::protobuf::uint8* TunnelInterfaces_Tunnel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.TunnelInterfaces.Tunnel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool esn = 2;
  if (this->esn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->esn(), target);
  }

  // bool anti_replay = 3;
  if (this->anti_replay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->anti_replay(), target);
  }

  // string local_ip = 4;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->local_ip(), target);
  }

  // string remote_ip = 5;
  if (this->remote_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_ip().data(), static_cast<int>(this->remote_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remote_ip(), target);
  }

  // uint32 local_spi = 6;
  if (this->local_spi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->local_spi(), target);
  }

  // uint32 remote_spi = 7;
  if (this->remote_spi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->remote_spi(), target);
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 8;
  if (this->crypto_alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->crypto_alg(), target);
  }

  // string local_crypto_key = 9;
  if (this->local_crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_crypto_key().data(), static_cast<int>(this->local_crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_crypto_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->local_crypto_key(), target);
  }

  // string remote_crypto_key = 10;
  if (this->remote_crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_crypto_key().data(), static_cast<int>(this->remote_crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_crypto_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->remote_crypto_key(), target);
  }

  // .ipsec.IntegAlgorithm integ_alg = 11;
  if (this->integ_alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->integ_alg(), target);
  }

  // string local_integ_key = 12;
  if (this->local_integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_integ_key().data(), static_cast<int>(this->local_integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.local_integ_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->local_integ_key(), target);
  }

  // string remote_integ_key = 13;
  if (this->remote_integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_integ_key().data(), static_cast<int>(this->remote_integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.remote_integ_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->remote_integ_key(), target);
  }

  // bool enabled = 100;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(100, this->enabled(), target);
  }

  // repeated string ip_addresses = 101;
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addresses(i).data(), static_cast<int>(this->ip_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.ip_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(101, this->ip_addresses(i), target);
  }

  // uint32 vrf = 102;
  if (this->vrf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(102, this->vrf(), target);
  }

  // string unnumbered_name = 103;
  if (this->unnumbered_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unnumbered_name().data(), static_cast<int>(this->unnumbered_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.TunnelInterfaces.Tunnel.unnumbered_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->unnumbered_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.TunnelInterfaces.Tunnel)
  return target;
}

size_t TunnelInterfaces_Tunnel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.TunnelInterfaces.Tunnel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string ip_addresses = 101;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->ip_addresses_size());
  for (int i = 0, n = this->ip_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ip_addresses(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string local_ip = 4;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  // string remote_ip = 5;
  if (this->remote_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_ip());
  }

  // string local_crypto_key = 9;
  if (this->local_crypto_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_crypto_key());
  }

  // string remote_crypto_key = 10;
  if (this->remote_crypto_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_crypto_key());
  }

  // string local_integ_key = 12;
  if (this->local_integ_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_integ_key());
  }

  // string remote_integ_key = 13;
  if (this->remote_integ_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_integ_key());
  }

  // string unnumbered_name = 103;
  if (this->unnumbered_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unnumbered_name());
  }

  // uint32 local_spi = 6;
  if (this->local_spi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_spi());
  }

  // uint32 remote_spi = 7;
  if (this->remote_spi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_spi());
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 8;
  if (this->crypto_alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->crypto_alg());
  }

  // .ipsec.IntegAlgorithm integ_alg = 11;
  if (this->integ_alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->integ_alg());
  }

  // bool esn = 2;
  if (this->esn() != 0) {
    total_size += 1 + 1;
  }

  // bool anti_replay = 3;
  if (this->anti_replay() != 0) {
    total_size += 1 + 1;
  }

  // bool enabled = 100;
  if (this->enabled() != 0) {
    total_size += 2 + 1;
  }

  // uint32 vrf = 102;
  if (this->vrf() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TunnelInterfaces_Tunnel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.TunnelInterfaces.Tunnel)
  GOOGLE_DCHECK_NE(&from, this);
  const TunnelInterfaces_Tunnel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TunnelInterfaces_Tunnel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.TunnelInterfaces.Tunnel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.TunnelInterfaces.Tunnel)
    MergeFrom(*source);
  }
}

void TunnelInterfaces_Tunnel::MergeFrom(const TunnelInterfaces_Tunnel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.TunnelInterfaces.Tunnel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ip_addresses_.MergeFrom(from.ip_addresses_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  if (from.remote_ip().size() > 0) {

    remote_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_ip_);
  }
  if (from.local_crypto_key().size() > 0) {

    local_crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_crypto_key_);
  }
  if (from.remote_crypto_key().size() > 0) {

    remote_crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_crypto_key_);
  }
  if (from.local_integ_key().size() > 0) {

    local_integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_integ_key_);
  }
  if (from.remote_integ_key().size() > 0) {

    remote_integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_integ_key_);
  }
  if (from.unnumbered_name().size() > 0) {

    unnumbered_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unnumbered_name_);
  }
  if (from.local_spi() != 0) {
    set_local_spi(from.local_spi());
  }
  if (from.remote_spi() != 0) {
    set_remote_spi(from.remote_spi());
  }
  if (from.crypto_alg() != 0) {
    set_crypto_alg(from.crypto_alg());
  }
  if (from.integ_alg() != 0) {
    set_integ_alg(from.integ_alg());
  }
  if (from.esn() != 0) {
    set_esn(from.esn());
  }
  if (from.anti_replay() != 0) {
    set_anti_replay(from.anti_replay());
  }
  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
  if (from.vrf() != 0) {
    set_vrf(from.vrf());
  }
}

void TunnelInterfaces_Tunnel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.TunnelInterfaces.Tunnel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TunnelInterfaces_Tunnel::CopyFrom(const TunnelInterfaces_Tunnel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.TunnelInterfaces.Tunnel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TunnelInterfaces_Tunnel::IsInitialized() const {
  return true;
}

void TunnelInterfaces_Tunnel::Swap(TunnelInterfaces_Tunnel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TunnelInterfaces_Tunnel::InternalSwap(TunnelInterfaces_Tunnel* other) {
  using std::swap;
  ip_addresses_.InternalSwap(CastToBase(&other->ip_addresses_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_ip_.Swap(&other->local_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_ip_.Swap(&other->remote_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_crypto_key_.Swap(&other->local_crypto_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_crypto_key_.Swap(&other->remote_crypto_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_integ_key_.Swap(&other->local_integ_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_integ_key_.Swap(&other->remote_integ_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unnumbered_name_.Swap(&other->unnumbered_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_spi_, other->local_spi_);
  swap(remote_spi_, other->remote_spi_);
  swap(crypto_alg_, other->crypto_alg_);
  swap(integ_alg_, other->integ_alg_);
  swap(esn_, other->esn_);
  swap(anti_replay_, other->anti_replay_);
  swap(enabled_, other->enabled_);
  swap(vrf_, other->vrf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TunnelInterfaces_Tunnel::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TunnelInterfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TunnelInterfaces::kTunnelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TunnelInterfaces::TunnelInterfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.TunnelInterfaces)
}
TunnelInterfaces::TunnelInterfaces(const TunnelInterfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tunnels_(from.tunnels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ipsec.TunnelInterfaces)
}

void TunnelInterfaces::SharedCtor() {
}

TunnelInterfaces::~TunnelInterfaces() {
  // @@protoc_insertion_point(destructor:ipsec.TunnelInterfaces)
  SharedDtor();
}

void TunnelInterfaces::SharedDtor() {
}

void TunnelInterfaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TunnelInterfaces::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TunnelInterfaces& TunnelInterfaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_TunnelInterfaces.base);
  return *internal_default_instance();
}


void TunnelInterfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.TunnelInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tunnels_.Clear();
  _internal_metadata_.Clear();
}

bool TunnelInterfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.TunnelInterfaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tunnels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.TunnelInterfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.TunnelInterfaces)
  return false;
#undef DO_
}

void TunnelInterfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.TunnelInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tunnels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tunnels(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.TunnelInterfaces)
}

::google::protobuf::uint8* TunnelInterfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.TunnelInterfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tunnels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tunnels(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.TunnelInterfaces)
  return target;
}

size_t TunnelInterfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.TunnelInterfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tunnels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tunnels(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TunnelInterfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.TunnelInterfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const TunnelInterfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TunnelInterfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.TunnelInterfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.TunnelInterfaces)
    MergeFrom(*source);
  }
}

void TunnelInterfaces::MergeFrom(const TunnelInterfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.TunnelInterfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tunnels_.MergeFrom(from.tunnels_);
}

void TunnelInterfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.TunnelInterfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TunnelInterfaces::CopyFrom(const TunnelInterfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.TunnelInterfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TunnelInterfaces::IsInitialized() const {
  return true;
}

void TunnelInterfaces::Swap(TunnelInterfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TunnelInterfaces::InternalSwap(TunnelInterfaces* other) {
  using std::swap;
  CastToBase(&tunnels_)->InternalSwap(CastToBase(&other->tunnels_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TunnelInterfaces::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityPolicyDatabases_SPD_Interface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityPolicyDatabases_SPD_Interface::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityPolicyDatabases_SPD_Interface::SecurityPolicyDatabases_SPD_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_Interface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityPolicyDatabases.SPD.Interface)
}
SecurityPolicyDatabases_SPD_Interface::SecurityPolicyDatabases_SPD_Interface(const SecurityPolicyDatabases_SPD_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityPolicyDatabases.SPD.Interface)
}

void SecurityPolicyDatabases_SPD_Interface::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SecurityPolicyDatabases_SPD_Interface::~SecurityPolicyDatabases_SPD_Interface() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityPolicyDatabases.SPD.Interface)
  SharedDtor();
}

void SecurityPolicyDatabases_SPD_Interface::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SecurityPolicyDatabases_SPD_Interface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityPolicyDatabases_SPD_Interface::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityPolicyDatabases_SPD_Interface& SecurityPolicyDatabases_SPD_Interface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_Interface.base);
  return *internal_default_instance();
}


void SecurityPolicyDatabases_SPD_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SecurityPolicyDatabases_SPD_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.Interface.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityPolicyDatabases.SPD.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityPolicyDatabases.SPD.Interface)
  return false;
#undef DO_
}

void SecurityPolicyDatabases_SPD_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.Interface.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityPolicyDatabases.SPD.Interface)
}

::google::protobuf::uint8* SecurityPolicyDatabases_SPD_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.Interface.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityPolicyDatabases.SPD.Interface)
  return target;
}

size_t SecurityPolicyDatabases_SPD_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityPolicyDatabases_SPD_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityPolicyDatabases_SPD_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityPolicyDatabases_SPD_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityPolicyDatabases.SPD.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityPolicyDatabases.SPD.Interface)
    MergeFrom(*source);
  }
}

void SecurityPolicyDatabases_SPD_Interface::MergeFrom(const SecurityPolicyDatabases_SPD_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SecurityPolicyDatabases_SPD_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityPolicyDatabases_SPD_Interface::CopyFrom(const SecurityPolicyDatabases_SPD_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityPolicyDatabases.SPD.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityPolicyDatabases_SPD_Interface::IsInitialized() const {
  return true;
}

void SecurityPolicyDatabases_SPD_Interface::Swap(SecurityPolicyDatabases_SPD_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityPolicyDatabases_SPD_Interface::InternalSwap(SecurityPolicyDatabases_SPD_Interface* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityPolicyDatabases_SPD_Interface::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityPolicyDatabases_SPD_PolicyEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityPolicyDatabases_SPD_PolicyEntry::kSaFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kPriorityFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kIsOutboundFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kRemoteAddrStartFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kRemoteAddrStopFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kLocalAddrStartFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kLocalAddrStopFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kProtocolFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kRemotePortStartFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kRemotePortStopFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kLocalPortStartFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kLocalPortStopFieldNumber;
const int SecurityPolicyDatabases_SPD_PolicyEntry::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityPolicyDatabases_SPD_PolicyEntry::SecurityPolicyDatabases_SPD_PolicyEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_PolicyEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
}
SecurityPolicyDatabases_SPD_PolicyEntry::SecurityPolicyDatabases_SPD_PolicyEntry(const SecurityPolicyDatabases_SPD_PolicyEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sa().size() > 0) {
    sa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sa_);
  }
  remote_addr_start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_addr_start().size() > 0) {
    remote_addr_start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_start_);
  }
  remote_addr_stop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_addr_stop().size() > 0) {
    remote_addr_stop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_stop_);
  }
  local_addr_start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_addr_start().size() > 0) {
    local_addr_start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_addr_start_);
  }
  local_addr_stop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_addr_stop().size() > 0) {
    local_addr_stop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_addr_stop_);
  }
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
}

void SecurityPolicyDatabases_SPD_PolicyEntry::SharedCtor() {
  sa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_stop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_stop_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(action_));
}

SecurityPolicyDatabases_SPD_PolicyEntry::~SecurityPolicyDatabases_SPD_PolicyEntry() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  SharedDtor();
}

void SecurityPolicyDatabases_SPD_PolicyEntry::SharedDtor() {
  sa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_stop_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_stop_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SecurityPolicyDatabases_SPD_PolicyEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityPolicyDatabases_SPD_PolicyEntry::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityPolicyDatabases_SPD_PolicyEntry& SecurityPolicyDatabases_SPD_PolicyEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD_PolicyEntry.base);
  return *internal_default_instance();
}


void SecurityPolicyDatabases_SPD_PolicyEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_addr_stop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  local_addr_stop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool SecurityPolicyDatabases_SPD_PolicyEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sa = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sa()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sa().data(), static_cast<int>(this->sa().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.sa"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_outbound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_outbound_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_addr_start = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_addr_start()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_addr_start().data(), static_cast<int>(this->remote_addr_start().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_start"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_addr_stop = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_addr_stop()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_addr_stop().data(), static_cast<int>(this->remote_addr_stop().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_stop"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_addr_start = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_addr_start()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_addr_start().data(), static_cast<int>(this->local_addr_start().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_start"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_addr_stop = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_addr_stop()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_addr_stop().data(), static_cast<int>(this->local_addr_stop().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_stop"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 protocol = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remote_port_start = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_port_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remote_port_stop = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_port_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_port_start = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_port_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_port_stop = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_port_stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.Action action = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  return false;
#undef DO_
}

void SecurityPolicyDatabases_SPD_PolicyEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sa = 1;
  if (this->sa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sa().data(), static_cast<int>(this->sa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.sa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sa(), output);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority(), output);
  }

  // bool is_outbound = 3;
  if (this->is_outbound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_outbound(), output);
  }

  // string remote_addr_start = 4;
  if (this->remote_addr_start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_addr_start().data(), static_cast<int>(this->remote_addr_start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remote_addr_start(), output);
  }

  // string remote_addr_stop = 5;
  if (this->remote_addr_stop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_addr_stop().data(), static_cast<int>(this->remote_addr_stop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_stop");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->remote_addr_stop(), output);
  }

  // string local_addr_start = 6;
  if (this->local_addr_start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_addr_start().data(), static_cast<int>(this->local_addr_start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->local_addr_start(), output);
  }

  // string local_addr_stop = 7;
  if (this->local_addr_stop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_addr_stop().data(), static_cast<int>(this->local_addr_stop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_stop");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->local_addr_stop(), output);
  }

  // uint32 protocol = 8;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->protocol(), output);
  }

  // uint32 remote_port_start = 9;
  if (this->remote_port_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->remote_port_start(), output);
  }

  // uint32 remote_port_stop = 10;
  if (this->remote_port_stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->remote_port_stop(), output);
  }

  // uint32 local_port_start = 11;
  if (this->local_port_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->local_port_start(), output);
  }

  // uint32 local_port_stop = 12;
  if (this->local_port_stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->local_port_stop(), output);
  }

  // .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.Action action = 13;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
}

::google::protobuf::uint8* SecurityPolicyDatabases_SPD_PolicyEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sa = 1;
  if (this->sa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sa().data(), static_cast<int>(this->sa().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.sa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sa(), target);
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority(), target);
  }

  // bool is_outbound = 3;
  if (this->is_outbound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_outbound(), target);
  }

  // string remote_addr_start = 4;
  if (this->remote_addr_start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_addr_start().data(), static_cast<int>(this->remote_addr_start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remote_addr_start(), target);
  }

  // string remote_addr_stop = 5;
  if (this->remote_addr_stop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_addr_stop().data(), static_cast<int>(this->remote_addr_stop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.remote_addr_stop");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->remote_addr_stop(), target);
  }

  // string local_addr_start = 6;
  if (this->local_addr_start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_addr_start().data(), static_cast<int>(this->local_addr_start().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->local_addr_start(), target);
  }

  // string local_addr_stop = 7;
  if (this->local_addr_stop().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_addr_stop().data(), static_cast<int>(this->local_addr_stop().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.local_addr_stop");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->local_addr_stop(), target);
  }

  // uint32 protocol = 8;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->protocol(), target);
  }

  // uint32 remote_port_start = 9;
  if (this->remote_port_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->remote_port_start(), target);
  }

  // uint32 remote_port_stop = 10;
  if (this->remote_port_stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->remote_port_stop(), target);
  }

  // uint32 local_port_start = 11;
  if (this->local_port_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->local_port_start(), target);
  }

  // uint32 local_port_stop = 12;
  if (this->local_port_stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->local_port_stop(), target);
  }

  // .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.Action action = 13;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  return target;
}

size_t SecurityPolicyDatabases_SPD_PolicyEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sa = 1;
  if (this->sa().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sa());
  }

  // string remote_addr_start = 4;
  if (this->remote_addr_start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_addr_start());
  }

  // string remote_addr_stop = 5;
  if (this->remote_addr_stop().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_addr_stop());
  }

  // string local_addr_start = 6;
  if (this->local_addr_start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_addr_start());
  }

  // string local_addr_stop = 7;
  if (this->local_addr_stop().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_addr_stop());
  }

  // int32 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  // bool is_outbound = 3;
  if (this->is_outbound() != 0) {
    total_size += 1 + 1;
  }

  // uint32 protocol = 8;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol());
  }

  // uint32 remote_port_start = 9;
  if (this->remote_port_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_port_start());
  }

  // uint32 remote_port_stop = 10;
  if (this->remote_port_stop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_port_stop());
  }

  // uint32 local_port_start = 11;
  if (this->local_port_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_port_start());
  }

  // uint32 local_port_stop = 12;
  if (this->local_port_stop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_port_stop());
  }

  // .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry.Action action = 13;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityPolicyDatabases_SPD_PolicyEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityPolicyDatabases_SPD_PolicyEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityPolicyDatabases_SPD_PolicyEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
    MergeFrom(*source);
  }
}

void SecurityPolicyDatabases_SPD_PolicyEntry::MergeFrom(const SecurityPolicyDatabases_SPD_PolicyEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sa().size() > 0) {

    sa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sa_);
  }
  if (from.remote_addr_start().size() > 0) {

    remote_addr_start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_start_);
  }
  if (from.remote_addr_stop().size() > 0) {

    remote_addr_stop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_addr_stop_);
  }
  if (from.local_addr_start().size() > 0) {

    local_addr_start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_addr_start_);
  }
  if (from.local_addr_stop().size() > 0) {

    local_addr_stop_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_addr_stop_);
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.is_outbound() != 0) {
    set_is_outbound(from.is_outbound());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
  if (from.remote_port_start() != 0) {
    set_remote_port_start(from.remote_port_start());
  }
  if (from.remote_port_stop() != 0) {
    set_remote_port_stop(from.remote_port_stop());
  }
  if (from.local_port_start() != 0) {
    set_local_port_start(from.local_port_start());
  }
  if (from.local_port_stop() != 0) {
    set_local_port_stop(from.local_port_stop());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void SecurityPolicyDatabases_SPD_PolicyEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityPolicyDatabases_SPD_PolicyEntry::CopyFrom(const SecurityPolicyDatabases_SPD_PolicyEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityPolicyDatabases.SPD.PolicyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityPolicyDatabases_SPD_PolicyEntry::IsInitialized() const {
  return true;
}

void SecurityPolicyDatabases_SPD_PolicyEntry::Swap(SecurityPolicyDatabases_SPD_PolicyEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityPolicyDatabases_SPD_PolicyEntry::InternalSwap(SecurityPolicyDatabases_SPD_PolicyEntry* other) {
  using std::swap;
  sa_.Swap(&other->sa_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_addr_start_.Swap(&other->remote_addr_start_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_addr_stop_.Swap(&other->remote_addr_stop_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_addr_start_.Swap(&other->local_addr_start_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  local_addr_stop_.Swap(&other->local_addr_stop_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priority_, other->priority_);
  swap(is_outbound_, other->is_outbound_);
  swap(protocol_, other->protocol_);
  swap(remote_port_start_, other->remote_port_start_);
  swap(remote_port_stop_, other->remote_port_stop_);
  swap(local_port_start_, other->local_port_start_);
  swap(local_port_stop_, other->local_port_stop_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityPolicyDatabases_SPD_PolicyEntry::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityPolicyDatabases_SPD::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityPolicyDatabases_SPD::kNameFieldNumber;
const int SecurityPolicyDatabases_SPD::kInterfacesFieldNumber;
const int SecurityPolicyDatabases_SPD::kPolicyEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityPolicyDatabases_SPD::SecurityPolicyDatabases_SPD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityPolicyDatabases.SPD)
}
SecurityPolicyDatabases_SPD::SecurityPolicyDatabases_SPD(const SecurityPolicyDatabases_SPD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interfaces_(from.interfaces_),
      policy_entries_(from.policy_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityPolicyDatabases.SPD)
}

void SecurityPolicyDatabases_SPD::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SecurityPolicyDatabases_SPD::~SecurityPolicyDatabases_SPD() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityPolicyDatabases.SPD)
  SharedDtor();
}

void SecurityPolicyDatabases_SPD::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SecurityPolicyDatabases_SPD::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityPolicyDatabases_SPD::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityPolicyDatabases_SPD& SecurityPolicyDatabases_SPD::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases_SPD.base);
  return *internal_default_instance();
}


void SecurityPolicyDatabases_SPD::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityPolicyDatabases.SPD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interfaces_.Clear();
  policy_entries_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SecurityPolicyDatabases_SPD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityPolicyDatabases.SPD)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityPolicyDatabases.SPD.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ipsec.SecurityPolicyDatabases.SPD.Interface interfaces = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry policy_entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_policy_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityPolicyDatabases.SPD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityPolicyDatabases.SPD)
  return false;
#undef DO_
}

void SecurityPolicyDatabases_SPD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityPolicyDatabases.SPD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD.Interface interfaces = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->interfaces(static_cast<int>(i)),
      output);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry policy_entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->policy_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->policy_entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityPolicyDatabases.SPD)
}

::google::protobuf::uint8* SecurityPolicyDatabases_SPD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityPolicyDatabases.SPD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityPolicyDatabases.SPD.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD.Interface interfaces = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interfaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->interfaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry policy_entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->policy_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->policy_entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityPolicyDatabases.SPD)
  return target;
}

size_t SecurityPolicyDatabases_SPD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityPolicyDatabases.SPD)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ipsec.SecurityPolicyDatabases.SPD.Interface interfaces = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->interfaces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interfaces(static_cast<int>(i)));
    }
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD.PolicyEntry policy_entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->policy_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->policy_entries(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityPolicyDatabases_SPD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityPolicyDatabases.SPD)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityPolicyDatabases_SPD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityPolicyDatabases_SPD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityPolicyDatabases.SPD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityPolicyDatabases.SPD)
    MergeFrom(*source);
  }
}

void SecurityPolicyDatabases_SPD::MergeFrom(const SecurityPolicyDatabases_SPD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityPolicyDatabases.SPD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interfaces_.MergeFrom(from.interfaces_);
  policy_entries_.MergeFrom(from.policy_entries_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SecurityPolicyDatabases_SPD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityPolicyDatabases.SPD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityPolicyDatabases_SPD::CopyFrom(const SecurityPolicyDatabases_SPD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityPolicyDatabases.SPD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityPolicyDatabases_SPD::IsInitialized() const {
  return true;
}

void SecurityPolicyDatabases_SPD::Swap(SecurityPolicyDatabases_SPD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityPolicyDatabases_SPD::InternalSwap(SecurityPolicyDatabases_SPD* other) {
  using std::swap;
  CastToBase(&interfaces_)->InternalSwap(CastToBase(&other->interfaces_));
  CastToBase(&policy_entries_)->InternalSwap(CastToBase(&other->policy_entries_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityPolicyDatabases_SPD::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityPolicyDatabases::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityPolicyDatabases::kSpdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityPolicyDatabases::SecurityPolicyDatabases()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityPolicyDatabases)
}
SecurityPolicyDatabases::SecurityPolicyDatabases(const SecurityPolicyDatabases& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      spds_(from.spds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityPolicyDatabases)
}

void SecurityPolicyDatabases::SharedCtor() {
}

SecurityPolicyDatabases::~SecurityPolicyDatabases() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityPolicyDatabases)
  SharedDtor();
}

void SecurityPolicyDatabases::SharedDtor() {
}

void SecurityPolicyDatabases::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityPolicyDatabases::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityPolicyDatabases& SecurityPolicyDatabases::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityPolicyDatabases.base);
  return *internal_default_instance();
}


void SecurityPolicyDatabases::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityPolicyDatabases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spds_.Clear();
  _internal_metadata_.Clear();
}

bool SecurityPolicyDatabases::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityPolicyDatabases)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityPolicyDatabases)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityPolicyDatabases)
  return false;
#undef DO_
}

void SecurityPolicyDatabases::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityPolicyDatabases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->spds(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityPolicyDatabases)
}

::google::protobuf::uint8* SecurityPolicyDatabases::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityPolicyDatabases)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->spds(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityPolicyDatabases)
  return target;
}

size_t SecurityPolicyDatabases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityPolicyDatabases)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->spds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spds(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityPolicyDatabases::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityPolicyDatabases)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityPolicyDatabases* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityPolicyDatabases>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityPolicyDatabases)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityPolicyDatabases)
    MergeFrom(*source);
  }
}

void SecurityPolicyDatabases::MergeFrom(const SecurityPolicyDatabases& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityPolicyDatabases)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spds_.MergeFrom(from.spds_);
}

void SecurityPolicyDatabases::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityPolicyDatabases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityPolicyDatabases::CopyFrom(const SecurityPolicyDatabases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityPolicyDatabases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityPolicyDatabases::IsInitialized() const {
  return true;
}

void SecurityPolicyDatabases::Swap(SecurityPolicyDatabases* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityPolicyDatabases::InternalSwap(SecurityPolicyDatabases* other) {
  using std::swap;
  CastToBase(&spds_)->InternalSwap(CastToBase(&other->spds_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityPolicyDatabases::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityAssociations_SA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityAssociations_SA::kNameFieldNumber;
const int SecurityAssociations_SA::kSpiFieldNumber;
const int SecurityAssociations_SA::kProtocolFieldNumber;
const int SecurityAssociations_SA::kCryptoAlgFieldNumber;
const int SecurityAssociations_SA::kCryptoKeyFieldNumber;
const int SecurityAssociations_SA::kIntegAlgFieldNumber;
const int SecurityAssociations_SA::kIntegKeyFieldNumber;
const int SecurityAssociations_SA::kUseEsnFieldNumber;
const int SecurityAssociations_SA::kUseAntiReplayFieldNumber;
const int SecurityAssociations_SA::kTunnelSrcAddrFieldNumber;
const int SecurityAssociations_SA::kTunnelDstAddrFieldNumber;
const int SecurityAssociations_SA::kEnableUdpEncapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityAssociations_SA::SecurityAssociations_SA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations_SA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityAssociations.SA)
}
SecurityAssociations_SA::SecurityAssociations_SA(const SecurityAssociations_SA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crypto_key().size() > 0) {
    crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_key_);
  }
  integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.integ_key().size() > 0) {
    integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.integ_key_);
  }
  tunnel_src_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tunnel_src_addr().size() > 0) {
    tunnel_src_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnel_src_addr_);
  }
  tunnel_dst_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tunnel_dst_addr().size() > 0) {
    tunnel_dst_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnel_dst_addr_);
  }
  ::memcpy(&spi_, &from.spi_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_udp_encap_) -
    reinterpret_cast<char*>(&spi_)) + sizeof(enable_udp_encap_));
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityAssociations.SA)
}

void SecurityAssociations_SA::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  integ_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_src_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_dst_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&spi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_udp_encap_) -
      reinterpret_cast<char*>(&spi_)) + sizeof(enable_udp_encap_));
}

SecurityAssociations_SA::~SecurityAssociations_SA() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityAssociations.SA)
  SharedDtor();
}

void SecurityAssociations_SA::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  integ_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_src_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_dst_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SecurityAssociations_SA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityAssociations_SA::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityAssociations_SA& SecurityAssociations_SA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations_SA.base);
  return *internal_default_instance();
}


void SecurityAssociations_SA::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityAssociations.SA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crypto_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  integ_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_src_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tunnel_dst_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&spi_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_udp_encap_) -
      reinterpret_cast<char*>(&spi_)) + sizeof(enable_udp_encap_));
  _internal_metadata_.Clear();
}

bool SecurityAssociations_SA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityAssociations.SA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityAssociations.SA.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 spi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.SecurityAssociations.SA.IPSecProtocol protocol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol(static_cast< ::ipsec::SecurityAssociations_SA_IPSecProtocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.CryptoAlgorithm crypto_alg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_crypto_alg(static_cast< ::ipsec::CryptoAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string crypto_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crypto_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crypto_key().data(), static_cast<int>(this->crypto_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityAssociations.SA.crypto_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ipsec.IntegAlgorithm integ_alg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_integ_alg(static_cast< ::ipsec::IntegAlgorithm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string integ_key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_integ_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->integ_key().data(), static_cast<int>(this->integ_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityAssociations.SA.integ_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_esn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_esn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_anti_replay = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_anti_replay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tunnel_src_addr = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tunnel_src_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tunnel_src_addr().data(), static_cast<int>(this->tunnel_src_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityAssociations.SA.tunnel_src_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tunnel_dst_addr = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tunnel_dst_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tunnel_dst_addr().data(), static_cast<int>(this->tunnel_dst_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipsec.SecurityAssociations.SA.tunnel_dst_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_udp_encap = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_udp_encap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityAssociations.SA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityAssociations.SA)
  return false;
#undef DO_
}

void SecurityAssociations_SA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityAssociations.SA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 spi = 2;
  if (this->spi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spi(), output);
  }

  // .ipsec.SecurityAssociations.SA.IPSecProtocol protocol = 3;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->protocol(), output);
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 4;
  if (this->crypto_alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->crypto_alg(), output);
  }

  // string crypto_key = 5;
  if (this->crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key().data(), static_cast<int>(this->crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.crypto_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->crypto_key(), output);
  }

  // .ipsec.IntegAlgorithm integ_alg = 6;
  if (this->integ_alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->integ_alg(), output);
  }

  // string integ_key = 7;
  if (this->integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->integ_key().data(), static_cast<int>(this->integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.integ_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->integ_key(), output);
  }

  // bool use_esn = 8;
  if (this->use_esn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->use_esn(), output);
  }

  // bool use_anti_replay = 9;
  if (this->use_anti_replay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->use_anti_replay(), output);
  }

  // string tunnel_src_addr = 10;
  if (this->tunnel_src_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tunnel_src_addr().data(), static_cast<int>(this->tunnel_src_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.tunnel_src_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->tunnel_src_addr(), output);
  }

  // string tunnel_dst_addr = 11;
  if (this->tunnel_dst_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tunnel_dst_addr().data(), static_cast<int>(this->tunnel_dst_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.tunnel_dst_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->tunnel_dst_addr(), output);
  }

  // bool enable_udp_encap = 12;
  if (this->enable_udp_encap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->enable_udp_encap(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityAssociations.SA)
}

::google::protobuf::uint8* SecurityAssociations_SA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityAssociations.SA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 spi = 2;
  if (this->spi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spi(), target);
  }

  // .ipsec.SecurityAssociations.SA.IPSecProtocol protocol = 3;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->protocol(), target);
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 4;
  if (this->crypto_alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->crypto_alg(), target);
  }

  // string crypto_key = 5;
  if (this->crypto_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crypto_key().data(), static_cast<int>(this->crypto_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.crypto_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->crypto_key(), target);
  }

  // .ipsec.IntegAlgorithm integ_alg = 6;
  if (this->integ_alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->integ_alg(), target);
  }

  // string integ_key = 7;
  if (this->integ_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->integ_key().data(), static_cast<int>(this->integ_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.integ_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->integ_key(), target);
  }

  // bool use_esn = 8;
  if (this->use_esn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->use_esn(), target);
  }

  // bool use_anti_replay = 9;
  if (this->use_anti_replay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->use_anti_replay(), target);
  }

  // string tunnel_src_addr = 10;
  if (this->tunnel_src_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tunnel_src_addr().data(), static_cast<int>(this->tunnel_src_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.tunnel_src_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->tunnel_src_addr(), target);
  }

  // string tunnel_dst_addr = 11;
  if (this->tunnel_dst_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tunnel_dst_addr().data(), static_cast<int>(this->tunnel_dst_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipsec.SecurityAssociations.SA.tunnel_dst_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->tunnel_dst_addr(), target);
  }

  // bool enable_udp_encap = 12;
  if (this->enable_udp_encap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->enable_udp_encap(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityAssociations.SA)
  return target;
}

size_t SecurityAssociations_SA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityAssociations.SA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string crypto_key = 5;
  if (this->crypto_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crypto_key());
  }

  // string integ_key = 7;
  if (this->integ_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->integ_key());
  }

  // string tunnel_src_addr = 10;
  if (this->tunnel_src_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tunnel_src_addr());
  }

  // string tunnel_dst_addr = 11;
  if (this->tunnel_dst_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tunnel_dst_addr());
  }

  // uint32 spi = 2;
  if (this->spi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spi());
  }

  // .ipsec.SecurityAssociations.SA.IPSecProtocol protocol = 3;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
  }

  // .ipsec.CryptoAlgorithm crypto_alg = 4;
  if (this->crypto_alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->crypto_alg());
  }

  // .ipsec.IntegAlgorithm integ_alg = 6;
  if (this->integ_alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->integ_alg());
  }

  // bool use_esn = 8;
  if (this->use_esn() != 0) {
    total_size += 1 + 1;
  }

  // bool use_anti_replay = 9;
  if (this->use_anti_replay() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_udp_encap = 12;
  if (this->enable_udp_encap() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityAssociations_SA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityAssociations.SA)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityAssociations_SA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityAssociations_SA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityAssociations.SA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityAssociations.SA)
    MergeFrom(*source);
  }
}

void SecurityAssociations_SA::MergeFrom(const SecurityAssociations_SA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityAssociations.SA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.crypto_key().size() > 0) {

    crypto_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crypto_key_);
  }
  if (from.integ_key().size() > 0) {

    integ_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.integ_key_);
  }
  if (from.tunnel_src_addr().size() > 0) {

    tunnel_src_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnel_src_addr_);
  }
  if (from.tunnel_dst_addr().size() > 0) {

    tunnel_dst_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnel_dst_addr_);
  }
  if (from.spi() != 0) {
    set_spi(from.spi());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
  if (from.crypto_alg() != 0) {
    set_crypto_alg(from.crypto_alg());
  }
  if (from.integ_alg() != 0) {
    set_integ_alg(from.integ_alg());
  }
  if (from.use_esn() != 0) {
    set_use_esn(from.use_esn());
  }
  if (from.use_anti_replay() != 0) {
    set_use_anti_replay(from.use_anti_replay());
  }
  if (from.enable_udp_encap() != 0) {
    set_enable_udp_encap(from.enable_udp_encap());
  }
}

void SecurityAssociations_SA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityAssociations.SA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityAssociations_SA::CopyFrom(const SecurityAssociations_SA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityAssociations.SA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityAssociations_SA::IsInitialized() const {
  return true;
}

void SecurityAssociations_SA::Swap(SecurityAssociations_SA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityAssociations_SA::InternalSwap(SecurityAssociations_SA* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crypto_key_.Swap(&other->crypto_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  integ_key_.Swap(&other->integ_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tunnel_src_addr_.Swap(&other->tunnel_src_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tunnel_dst_addr_.Swap(&other->tunnel_dst_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(spi_, other->spi_);
  swap(protocol_, other->protocol_);
  swap(crypto_alg_, other->crypto_alg_);
  swap(integ_alg_, other->integ_alg_);
  swap(use_esn_, other->use_esn_);
  swap(use_anti_replay_, other->use_anti_replay_);
  swap(enable_udp_encap_, other->enable_udp_encap_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityAssociations_SA::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityAssociations::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityAssociations::kSasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityAssociations::SecurityAssociations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.SecurityAssociations)
}
SecurityAssociations::SecurityAssociations(const SecurityAssociations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sas_(from.sas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ipsec.SecurityAssociations)
}

void SecurityAssociations::SharedCtor() {
}

SecurityAssociations::~SecurityAssociations() {
  // @@protoc_insertion_point(destructor:ipsec.SecurityAssociations)
  SharedDtor();
}

void SecurityAssociations::SharedDtor() {
}

void SecurityAssociations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SecurityAssociations::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityAssociations& SecurityAssociations::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_SecurityAssociations.base);
  return *internal_default_instance();
}


void SecurityAssociations::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.SecurityAssociations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sas_.Clear();
  _internal_metadata_.Clear();
}

bool SecurityAssociations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.SecurityAssociations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ipsec.SecurityAssociations.SA sas = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.SecurityAssociations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.SecurityAssociations)
  return false;
#undef DO_
}

void SecurityAssociations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.SecurityAssociations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.SecurityAssociations.SA sas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sas(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.SecurityAssociations)
}

::google::protobuf::uint8* SecurityAssociations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.SecurityAssociations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.SecurityAssociations.SA sas = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.SecurityAssociations)
  return target;
}

size_t SecurityAssociations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.SecurityAssociations)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ipsec.SecurityAssociations.SA sas = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityAssociations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.SecurityAssociations)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityAssociations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityAssociations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.SecurityAssociations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.SecurityAssociations)
    MergeFrom(*source);
  }
}

void SecurityAssociations::MergeFrom(const SecurityAssociations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.SecurityAssociations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sas_.MergeFrom(from.sas_);
}

void SecurityAssociations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.SecurityAssociations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityAssociations::CopyFrom(const SecurityAssociations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.SecurityAssociations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityAssociations::IsInitialized() const {
  return true;
}

void SecurityAssociations::Swap(SecurityAssociations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityAssociations::InternalSwap(SecurityAssociations* other) {
  using std::swap;
  CastToBase(&sas_)->InternalSwap(CastToBase(&other->sas_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SecurityAssociations::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResyncRequest::kTunnelsFieldNumber;
const int ResyncRequest::kSpdsFieldNumber;
const int ResyncRequest::kSasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResyncRequest::ResyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_ResyncRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipsec.ResyncRequest)
}
ResyncRequest::ResyncRequest(const ResyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tunnels_(from.tunnels_),
      spds_(from.spds_),
      sas_(from.sas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ipsec.ResyncRequest)
}

void ResyncRequest::SharedCtor() {
}

ResyncRequest::~ResyncRequest() {
  // @@protoc_insertion_point(destructor:ipsec.ResyncRequest)
  SharedDtor();
}

void ResyncRequest::SharedDtor() {
}

void ResyncRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResyncRequest::descriptor() {
  ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResyncRequest& ResyncRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::scc_info_ResyncRequest.base);
  return *internal_default_instance();
}


void ResyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ipsec.ResyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tunnels_.Clear();
  spds_.Clear();
  sas_.Clear();
  _internal_metadata_.Clear();
}

bool ResyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipsec.ResyncRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tunnels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ipsec.SecurityAssociations.SA sas = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipsec.ResyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipsec.ResyncRequest)
  return false;
#undef DO_
}

void ResyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipsec.ResyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tunnels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tunnels(static_cast<int>(i)),
      output);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->spds(static_cast<int>(i)),
      output);
  }

  // repeated .ipsec.SecurityAssociations.SA sas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sas(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipsec.ResyncRequest)
}

::google::protobuf::uint8* ResyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipsec.ResyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tunnels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tunnels(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->spds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ipsec.SecurityAssociations.SA sas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipsec.ResyncRequest)
  return target;
}

size_t ResyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipsec.ResyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ipsec.TunnelInterfaces.Tunnel tunnels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tunnels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tunnels(static_cast<int>(i)));
    }
  }

  // repeated .ipsec.SecurityPolicyDatabases.SPD spds = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->spds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spds(static_cast<int>(i)));
    }
  }

  // repeated .ipsec.SecurityAssociations.SA sas = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sas(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipsec.ResyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipsec.ResyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipsec.ResyncRequest)
    MergeFrom(*source);
  }
}

void ResyncRequest::MergeFrom(const ResyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipsec.ResyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tunnels_.MergeFrom(from.tunnels_);
  spds_.MergeFrom(from.spds_);
  sas_.MergeFrom(from.sas_);
}

void ResyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipsec.ResyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResyncRequest::CopyFrom(const ResyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipsec.ResyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResyncRequest::IsInitialized() const {
  return true;
}

void ResyncRequest::Swap(ResyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResyncRequest::InternalSwap(ResyncRequest* other) {
  using std::swap;
  CastToBase(&tunnels_)->InternalSwap(CastToBase(&other->tunnels_));
  CastToBase(&spds_)->InternalSwap(CastToBase(&other->spds_));
  CastToBase(&sas_)->InternalSwap(CastToBase(&other->sas_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResyncRequest::GetMetadata() const {
  protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fipsec_2fipsec_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ipsec
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::TunnelInterfaces_Tunnel* Arena::CreateMaybeMessage< ::ipsec::TunnelInterfaces_Tunnel >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::TunnelInterfaces_Tunnel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::TunnelInterfaces* Arena::CreateMaybeMessage< ::ipsec::TunnelInterfaces >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::TunnelInterfaces >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityPolicyDatabases_SPD_Interface* Arena::CreateMaybeMessage< ::ipsec::SecurityPolicyDatabases_SPD_Interface >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityPolicyDatabases_SPD_Interface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry* Arena::CreateMaybeMessage< ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityPolicyDatabases_SPD_PolicyEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityPolicyDatabases_SPD* Arena::CreateMaybeMessage< ::ipsec::SecurityPolicyDatabases_SPD >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityPolicyDatabases_SPD >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityPolicyDatabases* Arena::CreateMaybeMessage< ::ipsec::SecurityPolicyDatabases >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityPolicyDatabases >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityAssociations_SA* Arena::CreateMaybeMessage< ::ipsec::SecurityAssociations_SA >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityAssociations_SA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::SecurityAssociations* Arena::CreateMaybeMessage< ::ipsec::SecurityAssociations >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::SecurityAssociations >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipsec::ResyncRequest* Arena::CreateMaybeMessage< ::ipsec::ResyncRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ipsec::ResyncRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
