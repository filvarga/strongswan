// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/l4/l4.proto

#ifndef PROTOBUF_INCLUDED_vpp_2fmodel_2fl4_2fl4_2eproto
#define PROTOBUF_INCLUDED_vpp_2fmodel_2fl4_2fl4_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl4_2fl4_2eproto 

namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto
namespace l4 {
class AppNamespaces;
class AppNamespacesDefaultTypeInternal;
extern AppNamespacesDefaultTypeInternal _AppNamespaces_default_instance_;
class AppNamespaces_AppNamespace;
class AppNamespaces_AppNamespaceDefaultTypeInternal;
extern AppNamespaces_AppNamespaceDefaultTypeInternal _AppNamespaces_AppNamespace_default_instance_;
class L4Features;
class L4FeaturesDefaultTypeInternal;
extern L4FeaturesDefaultTypeInternal _L4Features_default_instance_;
}  // namespace l4
namespace google {
namespace protobuf {
template<> ::l4::AppNamespaces* Arena::CreateMaybeMessage<::l4::AppNamespaces>(Arena*);
template<> ::l4::AppNamespaces_AppNamespace* Arena::CreateMaybeMessage<::l4::AppNamespaces_AppNamespace>(Arena*);
template<> ::l4::L4Features* Arena::CreateMaybeMessage<::l4::L4Features>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace l4 {

// ===================================================================

class L4Features : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l4.L4Features) */ {
 public:
  L4Features();
  virtual ~L4Features();

  L4Features(const L4Features& from);

  inline L4Features& operator=(const L4Features& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  L4Features(L4Features&& from) noexcept
    : L4Features() {
    *this = ::std::move(from);
  }

  inline L4Features& operator=(L4Features&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const L4Features& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const L4Features* internal_default_instance() {
    return reinterpret_cast<const L4Features*>(
               &_L4Features_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(L4Features* other);
  friend void swap(L4Features& a, L4Features& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline L4Features* New() const final {
    return CreateMaybeMessage<L4Features>(NULL);
  }

  L4Features* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<L4Features>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const L4Features& from);
  void MergeFrom(const L4Features& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(L4Features* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool enabled = 1;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // @@protoc_insertion_point(class_scope:l4.L4Features)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppNamespaces_AppNamespace : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l4.AppNamespaces.AppNamespace) */ {
 public:
  AppNamespaces_AppNamespace();
  virtual ~AppNamespaces_AppNamespace();

  AppNamespaces_AppNamespace(const AppNamespaces_AppNamespace& from);

  inline AppNamespaces_AppNamespace& operator=(const AppNamespaces_AppNamespace& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppNamespaces_AppNamespace(AppNamespaces_AppNamespace&& from) noexcept
    : AppNamespaces_AppNamespace() {
    *this = ::std::move(from);
  }

  inline AppNamespaces_AppNamespace& operator=(AppNamespaces_AppNamespace&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppNamespaces_AppNamespace& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppNamespaces_AppNamespace* internal_default_instance() {
    return reinterpret_cast<const AppNamespaces_AppNamespace*>(
               &_AppNamespaces_AppNamespace_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AppNamespaces_AppNamespace* other);
  friend void swap(AppNamespaces_AppNamespace& a, AppNamespaces_AppNamespace& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppNamespaces_AppNamespace* New() const final {
    return CreateMaybeMessage<AppNamespaces_AppNamespace>(NULL);
  }

  AppNamespaces_AppNamespace* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppNamespaces_AppNamespace>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppNamespaces_AppNamespace& from);
  void MergeFrom(const AppNamespaces_AppNamespace& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppNamespaces_AppNamespace* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string namespace_id = 1;
  void clear_namespace_id();
  static const int kNamespaceIdFieldNumber = 1;
  const ::std::string& namespace_id() const;
  void set_namespace_id(const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_id(::std::string&& value);
  #endif
  void set_namespace_id(const char* value);
  void set_namespace_id(const char* value, size_t size);
  ::std::string* mutable_namespace_id();
  ::std::string* release_namespace_id();
  void set_allocated_namespace_id(::std::string* namespace_id);

  // string interface = 3;
  void clear_interface();
  static const int kInterfaceFieldNumber = 3;
  const ::std::string& interface() const;
  void set_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_interface(::std::string&& value);
  #endif
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  ::std::string* mutable_interface();
  ::std::string* release_interface();
  void set_allocated_interface(::std::string* interface);

  // uint64 secret = 2;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  ::google::protobuf::uint64 secret() const;
  void set_secret(::google::protobuf::uint64 value);

  // uint32 ipv4_fib_id = 4;
  void clear_ipv4_fib_id();
  static const int kIpv4FibIdFieldNumber = 4;
  ::google::protobuf::uint32 ipv4_fib_id() const;
  void set_ipv4_fib_id(::google::protobuf::uint32 value);

  // uint32 ipv6_fib_id = 6;
  void clear_ipv6_fib_id();
  static const int kIpv6FibIdFieldNumber = 6;
  ::google::protobuf::uint32 ipv6_fib_id() const;
  void set_ipv6_fib_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:l4.AppNamespaces.AppNamespace)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr namespace_id_;
  ::google::protobuf::internal::ArenaStringPtr interface_;
  ::google::protobuf::uint64 secret_;
  ::google::protobuf::uint32 ipv4_fib_id_;
  ::google::protobuf::uint32 ipv6_fib_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppNamespaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:l4.AppNamespaces) */ {
 public:
  AppNamespaces();
  virtual ~AppNamespaces();

  AppNamespaces(const AppNamespaces& from);

  inline AppNamespaces& operator=(const AppNamespaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppNamespaces(AppNamespaces&& from) noexcept
    : AppNamespaces() {
    *this = ::std::move(from);
  }

  inline AppNamespaces& operator=(AppNamespaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppNamespaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppNamespaces* internal_default_instance() {
    return reinterpret_cast<const AppNamespaces*>(
               &_AppNamespaces_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AppNamespaces* other);
  friend void swap(AppNamespaces& a, AppNamespaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppNamespaces* New() const final {
    return CreateMaybeMessage<AppNamespaces>(NULL);
  }

  AppNamespaces* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppNamespaces>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppNamespaces& from);
  void MergeFrom(const AppNamespaces& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppNamespaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AppNamespaces_AppNamespace AppNamespace;

  // accessors -------------------------------------------------------

  // repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
  int app_namespaces_size() const;
  void clear_app_namespaces();
  static const int kAppNamespacesFieldNumber = 100;
  ::l4::AppNamespaces_AppNamespace* mutable_app_namespaces(int index);
  ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >*
      mutable_app_namespaces();
  const ::l4::AppNamespaces_AppNamespace& app_namespaces(int index) const;
  ::l4::AppNamespaces_AppNamespace* add_app_namespaces();
  const ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >&
      app_namespaces() const;

  // @@protoc_insertion_point(class_scope:l4.AppNamespaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace > app_namespaces_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// L4Features

// bool enabled = 1;
inline void L4Features::clear_enabled() {
  enabled_ = false;
}
inline bool L4Features::enabled() const {
  // @@protoc_insertion_point(field_get:l4.L4Features.enabled)
  return enabled_;
}
inline void L4Features::set_enabled(bool value) {
  
  enabled_ = value;
  // @@protoc_insertion_point(field_set:l4.L4Features.enabled)
}

// -------------------------------------------------------------------

// AppNamespaces_AppNamespace

// string namespace_id = 1;
inline void AppNamespaces_AppNamespace::clear_namespace_id() {
  namespace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppNamespaces_AppNamespace::namespace_id() const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.AppNamespace.namespace_id)
  return namespace_id_.GetNoArena();
}
inline void AppNamespaces_AppNamespace::set_namespace_id(const ::std::string& value) {
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l4.AppNamespaces.AppNamespace.namespace_id)
}
#if LANG_CXX11
inline void AppNamespaces_AppNamespace::set_namespace_id(::std::string&& value) {
  
  namespace_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l4.AppNamespaces.AppNamespace.namespace_id)
}
#endif
inline void AppNamespaces_AppNamespace::set_namespace_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l4.AppNamespaces.AppNamespace.namespace_id)
}
inline void AppNamespaces_AppNamespace::set_namespace_id(const char* value, size_t size) {
  
  namespace_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l4.AppNamespaces.AppNamespace.namespace_id)
}
inline ::std::string* AppNamespaces_AppNamespace::mutable_namespace_id() {
  
  // @@protoc_insertion_point(field_mutable:l4.AppNamespaces.AppNamespace.namespace_id)
  return namespace_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppNamespaces_AppNamespace::release_namespace_id() {
  // @@protoc_insertion_point(field_release:l4.AppNamespaces.AppNamespace.namespace_id)
  
  return namespace_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppNamespaces_AppNamespace::set_allocated_namespace_id(::std::string* namespace_id) {
  if (namespace_id != NULL) {
    
  } else {
    
  }
  namespace_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_id);
  // @@protoc_insertion_point(field_set_allocated:l4.AppNamespaces.AppNamespace.namespace_id)
}

// uint64 secret = 2;
inline void AppNamespaces_AppNamespace::clear_secret() {
  secret_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AppNamespaces_AppNamespace::secret() const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.AppNamespace.secret)
  return secret_;
}
inline void AppNamespaces_AppNamespace::set_secret(::google::protobuf::uint64 value) {
  
  secret_ = value;
  // @@protoc_insertion_point(field_set:l4.AppNamespaces.AppNamespace.secret)
}

// string interface = 3;
inline void AppNamespaces_AppNamespace::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppNamespaces_AppNamespace::interface() const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.AppNamespace.interface)
  return interface_.GetNoArena();
}
inline void AppNamespaces_AppNamespace::set_interface(const ::std::string& value) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:l4.AppNamespaces.AppNamespace.interface)
}
#if LANG_CXX11
inline void AppNamespaces_AppNamespace::set_interface(::std::string&& value) {
  
  interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:l4.AppNamespaces.AppNamespace.interface)
}
#endif
inline void AppNamespaces_AppNamespace::set_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:l4.AppNamespaces.AppNamespace.interface)
}
inline void AppNamespaces_AppNamespace::set_interface(const char* value, size_t size) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:l4.AppNamespaces.AppNamespace.interface)
}
inline ::std::string* AppNamespaces_AppNamespace::mutable_interface() {
  
  // @@protoc_insertion_point(field_mutable:l4.AppNamespaces.AppNamespace.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppNamespaces_AppNamespace::release_interface() {
  // @@protoc_insertion_point(field_release:l4.AppNamespaces.AppNamespace.interface)
  
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppNamespaces_AppNamespace::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    
  } else {
    
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:l4.AppNamespaces.AppNamespace.interface)
}

// uint32 ipv4_fib_id = 4;
inline void AppNamespaces_AppNamespace::clear_ipv4_fib_id() {
  ipv4_fib_id_ = 0u;
}
inline ::google::protobuf::uint32 AppNamespaces_AppNamespace::ipv4_fib_id() const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.AppNamespace.ipv4_fib_id)
  return ipv4_fib_id_;
}
inline void AppNamespaces_AppNamespace::set_ipv4_fib_id(::google::protobuf::uint32 value) {
  
  ipv4_fib_id_ = value;
  // @@protoc_insertion_point(field_set:l4.AppNamespaces.AppNamespace.ipv4_fib_id)
}

// uint32 ipv6_fib_id = 6;
inline void AppNamespaces_AppNamespace::clear_ipv6_fib_id() {
  ipv6_fib_id_ = 0u;
}
inline ::google::protobuf::uint32 AppNamespaces_AppNamespace::ipv6_fib_id() const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.AppNamespace.ipv6_fib_id)
  return ipv6_fib_id_;
}
inline void AppNamespaces_AppNamespace::set_ipv6_fib_id(::google::protobuf::uint32 value) {
  
  ipv6_fib_id_ = value;
  // @@protoc_insertion_point(field_set:l4.AppNamespaces.AppNamespace.ipv6_fib_id)
}

// -------------------------------------------------------------------

// AppNamespaces

// repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
inline int AppNamespaces::app_namespaces_size() const {
  return app_namespaces_.size();
}
inline void AppNamespaces::clear_app_namespaces() {
  app_namespaces_.Clear();
}
inline ::l4::AppNamespaces_AppNamespace* AppNamespaces::mutable_app_namespaces(int index) {
  // @@protoc_insertion_point(field_mutable:l4.AppNamespaces.app_namespaces)
  return app_namespaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >*
AppNamespaces::mutable_app_namespaces() {
  // @@protoc_insertion_point(field_mutable_list:l4.AppNamespaces.app_namespaces)
  return &app_namespaces_;
}
inline const ::l4::AppNamespaces_AppNamespace& AppNamespaces::app_namespaces(int index) const {
  // @@protoc_insertion_point(field_get:l4.AppNamespaces.app_namespaces)
  return app_namespaces_.Get(index);
}
inline ::l4::AppNamespaces_AppNamespace* AppNamespaces::add_app_namespaces() {
  // @@protoc_insertion_point(field_add:l4.AppNamespaces.app_namespaces)
  return app_namespaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::l4::AppNamespaces_AppNamespace >&
AppNamespaces::app_namespaces() const {
  // @@protoc_insertion_point(field_list:l4.AppNamespaces.app_namespaces)
  return app_namespaces_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace l4

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_vpp_2fmodel_2fl4_2fl4_2eproto
