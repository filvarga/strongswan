// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/l4/l4.proto

#include "vpp/model/l4/l4.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fl4_2fl4_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AppNamespaces_AppNamespace;
}  // namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto
namespace l4 {
class L4FeaturesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<L4Features>
      _instance;
} _L4Features_default_instance_;
class AppNamespaces_AppNamespaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppNamespaces_AppNamespace>
      _instance;
} _AppNamespaces_AppNamespace_default_instance_;
class AppNamespacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppNamespaces>
      _instance;
} _AppNamespaces_default_instance_;
}  // namespace l4
namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto {
static void InitDefaultsL4Features() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l4::_L4Features_default_instance_;
    new (ptr) ::l4::L4Features();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l4::L4Features::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_L4Features =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsL4Features}, {}};

static void InitDefaultsAppNamespaces_AppNamespace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l4::_AppNamespaces_AppNamespace_default_instance_;
    new (ptr) ::l4::AppNamespaces_AppNamespace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l4::AppNamespaces_AppNamespace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppNamespaces_AppNamespace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppNamespaces_AppNamespace}, {}};

static void InitDefaultsAppNamespaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::l4::_AppNamespaces_default_instance_;
    new (ptr) ::l4::AppNamespaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::l4::AppNamespaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AppNamespaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAppNamespaces}, {
      &protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_AppNamespaces_AppNamespace.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_L4Features.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppNamespaces_AppNamespace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppNamespaces.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::L4Features, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::L4Features, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, namespace_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, ipv4_fib_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces_AppNamespace, ipv6_fib_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::l4::AppNamespaces, app_namespaces_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::l4::L4Features)},
  { 6, -1, sizeof(::l4::AppNamespaces_AppNamespace)},
  { 16, -1, sizeof(::l4::AppNamespaces)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::l4::_L4Features_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l4::_AppNamespaces_AppNamespace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::l4::_AppNamespaces_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/l4/l4.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025vpp/model/l4/l4.proto\022\002l4\"\035\n\nL4Feature"
      "s\022\017\n\007enabled\030\001 \001(\010\"\272\001\n\rAppNamespaces\0226\n\016"
      "app_namespaces\030d \003(\0132\036.l4.AppNamespaces."
      "AppNamespace\032q\n\014AppNamespace\022\024\n\014namespac"
      "e_id\030\001 \001(\t\022\016\n\006secret\030\002 \001(\004\022\021\n\tinterface\030"
      "\003 \001(\t\022\023\n\013ipv4_fib_id\030\004 \001(\r\022\023\n\013ipv6_fib_i"
      "d\030\006 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 255);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/l4/l4.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fl4_2fl4_2eproto
namespace l4 {

// ===================================================================

void L4Features::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int L4Features::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

L4Features::L4Features()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_L4Features.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l4.L4Features)
}
L4Features::L4Features(const L4Features& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enabled_ = from.enabled_;
  // @@protoc_insertion_point(copy_constructor:l4.L4Features)
}

void L4Features::SharedCtor() {
  enabled_ = false;
}

L4Features::~L4Features() {
  // @@protoc_insertion_point(destructor:l4.L4Features)
  SharedDtor();
}

void L4Features::SharedDtor() {
}

void L4Features::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* L4Features::descriptor() {
  ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const L4Features& L4Features::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_L4Features.base);
  return *internal_default_instance();
}


void L4Features::Clear() {
// @@protoc_insertion_point(message_clear_start:l4.L4Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_ = false;
  _internal_metadata_.Clear();
}

bool L4Features::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l4.L4Features)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool enabled = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l4.L4Features)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l4.L4Features)
  return false;
#undef DO_
}

void L4Features::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l4.L4Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l4.L4Features)
}

::google::protobuf::uint8* L4Features::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l4.L4Features)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (this->enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l4.L4Features)
  return target;
}

size_t L4Features::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l4.L4Features)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool enabled = 1;
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void L4Features::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l4.L4Features)
  GOOGLE_DCHECK_NE(&from, this);
  const L4Features* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const L4Features>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l4.L4Features)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l4.L4Features)
    MergeFrom(*source);
  }
}

void L4Features::MergeFrom(const L4Features& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l4.L4Features)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enabled() != 0) {
    set_enabled(from.enabled());
  }
}

void L4Features::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l4.L4Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void L4Features::CopyFrom(const L4Features& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l4.L4Features)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool L4Features::IsInitialized() const {
  return true;
}

void L4Features::Swap(L4Features* other) {
  if (other == this) return;
  InternalSwap(other);
}
void L4Features::InternalSwap(L4Features* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata L4Features::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppNamespaces_AppNamespace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNamespaces_AppNamespace::kNamespaceIdFieldNumber;
const int AppNamespaces_AppNamespace::kSecretFieldNumber;
const int AppNamespaces_AppNamespace::kInterfaceFieldNumber;
const int AppNamespaces_AppNamespace::kIpv4FibIdFieldNumber;
const int AppNamespaces_AppNamespace::kIpv6FibIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNamespaces_AppNamespace::AppNamespaces_AppNamespace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_AppNamespaces_AppNamespace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l4.AppNamespaces.AppNamespace)
}
AppNamespaces_AppNamespace::AppNamespaces_AppNamespace(const AppNamespaces_AppNamespace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  namespace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_id().size() > 0) {
    namespace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace_id_);
  }
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  ::memcpy(&secret_, &from.secret_,
    static_cast<size_t>(reinterpret_cast<char*>(&ipv6_fib_id_) -
    reinterpret_cast<char*>(&secret_)) + sizeof(ipv6_fib_id_));
  // @@protoc_insertion_point(copy_constructor:l4.AppNamespaces.AppNamespace)
}

void AppNamespaces_AppNamespace::SharedCtor() {
  namespace_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&secret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ipv6_fib_id_) -
      reinterpret_cast<char*>(&secret_)) + sizeof(ipv6_fib_id_));
}

AppNamespaces_AppNamespace::~AppNamespaces_AppNamespace() {
  // @@protoc_insertion_point(destructor:l4.AppNamespaces.AppNamespace)
  SharedDtor();
}

void AppNamespaces_AppNamespace::SharedDtor() {
  namespace_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppNamespaces_AppNamespace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppNamespaces_AppNamespace::descriptor() {
  ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppNamespaces_AppNamespace& AppNamespaces_AppNamespace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_AppNamespaces_AppNamespace.base);
  return *internal_default_instance();
}


void AppNamespaces_AppNamespace::Clear() {
// @@protoc_insertion_point(message_clear_start:l4.AppNamespaces.AppNamespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  namespace_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&secret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ipv6_fib_id_) -
      reinterpret_cast<char*>(&secret_)) + sizeof(ipv6_fib_id_));
  _internal_metadata_.Clear();
}

bool AppNamespaces_AppNamespace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l4.AppNamespaces.AppNamespace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string namespace_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l4.AppNamespaces.AppNamespace.namespace_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &secret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string interface = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "l4.AppNamespaces.AppNamespace.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ipv4_fib_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ipv4_fib_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ipv6_fib_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ipv6_fib_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l4.AppNamespaces.AppNamespace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l4.AppNamespaces.AppNamespace)
  return false;
#undef DO_
}

void AppNamespaces_AppNamespace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l4.AppNamespaces.AppNamespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespace_id = 1;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l4.AppNamespaces.AppNamespace.namespace_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->namespace_id(), output);
  }

  // uint64 secret = 2;
  if (this->secret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->secret(), output);
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l4.AppNamespaces.AppNamespace.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->interface(), output);
  }

  // uint32 ipv4_fib_id = 4;
  if (this->ipv4_fib_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ipv4_fib_id(), output);
  }

  // uint32 ipv6_fib_id = 6;
  if (this->ipv6_fib_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ipv6_fib_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l4.AppNamespaces.AppNamespace)
}

::google::protobuf::uint8* AppNamespaces_AppNamespace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l4.AppNamespaces.AppNamespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespace_id = 1;
  if (this->namespace_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_id().data(), static_cast<int>(this->namespace_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l4.AppNamespaces.AppNamespace.namespace_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->namespace_id(), target);
  }

  // uint64 secret = 2;
  if (this->secret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->secret(), target);
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "l4.AppNamespaces.AppNamespace.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->interface(), target);
  }

  // uint32 ipv4_fib_id = 4;
  if (this->ipv4_fib_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ipv4_fib_id(), target);
  }

  // uint32 ipv6_fib_id = 6;
  if (this->ipv6_fib_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ipv6_fib_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l4.AppNamespaces.AppNamespace)
  return target;
}

size_t AppNamespaces_AppNamespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l4.AppNamespaces.AppNamespace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string namespace_id = 1;
  if (this->namespace_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_id());
  }

  // string interface = 3;
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // uint64 secret = 2;
  if (this->secret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->secret());
  }

  // uint32 ipv4_fib_id = 4;
  if (this->ipv4_fib_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ipv4_fib_id());
  }

  // uint32 ipv6_fib_id = 6;
  if (this->ipv6_fib_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ipv6_fib_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppNamespaces_AppNamespace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l4.AppNamespaces.AppNamespace)
  GOOGLE_DCHECK_NE(&from, this);
  const AppNamespaces_AppNamespace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppNamespaces_AppNamespace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l4.AppNamespaces.AppNamespace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l4.AppNamespaces.AppNamespace)
    MergeFrom(*source);
  }
}

void AppNamespaces_AppNamespace::MergeFrom(const AppNamespaces_AppNamespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l4.AppNamespaces.AppNamespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.namespace_id().size() > 0) {

    namespace_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace_id_);
  }
  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.secret() != 0) {
    set_secret(from.secret());
  }
  if (from.ipv4_fib_id() != 0) {
    set_ipv4_fib_id(from.ipv4_fib_id());
  }
  if (from.ipv6_fib_id() != 0) {
    set_ipv6_fib_id(from.ipv6_fib_id());
  }
}

void AppNamespaces_AppNamespace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l4.AppNamespaces.AppNamespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppNamespaces_AppNamespace::CopyFrom(const AppNamespaces_AppNamespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l4.AppNamespaces.AppNamespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppNamespaces_AppNamespace::IsInitialized() const {
  return true;
}

void AppNamespaces_AppNamespace::Swap(AppNamespaces_AppNamespace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppNamespaces_AppNamespace::InternalSwap(AppNamespaces_AppNamespace* other) {
  using std::swap;
  namespace_id_.Swap(&other->namespace_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  interface_.Swap(&other->interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(secret_, other->secret_);
  swap(ipv4_fib_id_, other->ipv4_fib_id_);
  swap(ipv6_fib_id_, other->ipv6_fib_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppNamespaces_AppNamespace::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppNamespaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNamespaces::kAppNamespacesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNamespaces::AppNamespaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_AppNamespaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:l4.AppNamespaces)
}
AppNamespaces::AppNamespaces(const AppNamespaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      app_namespaces_(from.app_namespaces_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:l4.AppNamespaces)
}

void AppNamespaces::SharedCtor() {
}

AppNamespaces::~AppNamespaces() {
  // @@protoc_insertion_point(destructor:l4.AppNamespaces)
  SharedDtor();
}

void AppNamespaces::SharedDtor() {
}

void AppNamespaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppNamespaces::descriptor() {
  ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppNamespaces& AppNamespaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::scc_info_AppNamespaces.base);
  return *internal_default_instance();
}


void AppNamespaces::Clear() {
// @@protoc_insertion_point(message_clear_start:l4.AppNamespaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_namespaces_.Clear();
  _internal_metadata_.Clear();
}

bool AppNamespaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:l4.AppNamespaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_app_namespaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:l4.AppNamespaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:l4.AppNamespaces)
  return false;
#undef DO_
}

void AppNamespaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:l4.AppNamespaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_namespaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100,
      this->app_namespaces(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:l4.AppNamespaces)
}

::google::protobuf::uint8* AppNamespaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:l4.AppNamespaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->app_namespaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->app_namespaces(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:l4.AppNamespaces)
  return target;
}

size_t AppNamespaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:l4.AppNamespaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .l4.AppNamespaces.AppNamespace app_namespaces = 100;
  {
    unsigned int count = static_cast<unsigned int>(this->app_namespaces_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->app_namespaces(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppNamespaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:l4.AppNamespaces)
  GOOGLE_DCHECK_NE(&from, this);
  const AppNamespaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppNamespaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:l4.AppNamespaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:l4.AppNamespaces)
    MergeFrom(*source);
  }
}

void AppNamespaces::MergeFrom(const AppNamespaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:l4.AppNamespaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  app_namespaces_.MergeFrom(from.app_namespaces_);
}

void AppNamespaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:l4.AppNamespaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppNamespaces::CopyFrom(const AppNamespaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:l4.AppNamespaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppNamespaces::IsInitialized() const {
  return true;
}

void AppNamespaces::Swap(AppNamespaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppNamespaces::InternalSwap(AppNamespaces* other) {
  using std::swap;
  CastToBase(&app_namespaces_)->InternalSwap(CastToBase(&other->app_namespaces_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppNamespaces::GetMetadata() const {
  protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fl4_2fl4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace l4
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l4::L4Features* Arena::CreateMaybeMessage< ::l4::L4Features >(Arena* arena) {
  return Arena::CreateInternal< ::l4::L4Features >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l4::AppNamespaces_AppNamespace* Arena::CreateMaybeMessage< ::l4::AppNamespaces_AppNamespace >(Arena* arena) {
  return Arena::CreateInternal< ::l4::AppNamespaces_AppNamespace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::l4::AppNamespaces* Arena::CreateMaybeMessage< ::l4::AppNamespaces >(Arena* arena) {
  return Arena::CreateInternal< ::l4::AppNamespaces >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
