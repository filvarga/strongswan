// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/nat/nat.proto

#include "vpp/model/nat/nat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44DNat_DNatConfig_IdentityMapping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_AddressPool;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_NatInterface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_VirtualReassembly;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Nat44SNat_SNatConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Nat44DNat_DNatConfig_StaticMapping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Nat44DNat_DNatConfig;
}  // namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto
namespace nat {
class Nat44Global_NatInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44Global_NatInterface>
      _instance;
} _Nat44Global_NatInterface_default_instance_;
class Nat44Global_AddressPoolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44Global_AddressPool>
      _instance;
} _Nat44Global_AddressPool_default_instance_;
class Nat44Global_VirtualReassemblyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44Global_VirtualReassembly>
      _instance;
} _Nat44Global_VirtualReassembly_default_instance_;
class Nat44GlobalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44Global>
      _instance;
} _Nat44Global_default_instance_;
class Nat44SNat_SNatConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44SNat_SNatConfig>
      _instance;
} _Nat44SNat_SNatConfig_default_instance_;
class Nat44SNatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44SNat>
      _instance;
} _Nat44SNat_default_instance_;
class Nat44DNat_DNatConfig_StaticMapping_LocalIPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44DNat_DNatConfig_StaticMapping_LocalIP>
      _instance;
} _Nat44DNat_DNatConfig_StaticMapping_LocalIP_default_instance_;
class Nat44DNat_DNatConfig_StaticMappingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44DNat_DNatConfig_StaticMapping>
      _instance;
} _Nat44DNat_DNatConfig_StaticMapping_default_instance_;
class Nat44DNat_DNatConfig_IdentityMappingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44DNat_DNatConfig_IdentityMapping>
      _instance;
} _Nat44DNat_DNatConfig_IdentityMapping_default_instance_;
class Nat44DNat_DNatConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44DNat_DNatConfig>
      _instance;
} _Nat44DNat_DNatConfig_default_instance_;
class Nat44DNatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Nat44DNat>
      _instance;
} _Nat44DNat_default_instance_;
}  // namespace nat
namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto {
static void InitDefaultsNat44Global_NatInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44Global_NatInterface_default_instance_;
    new (ptr) ::nat::Nat44Global_NatInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44Global_NatInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_NatInterface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44Global_NatInterface}, {}};

static void InitDefaultsNat44Global_AddressPool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44Global_AddressPool_default_instance_;
    new (ptr) ::nat::Nat44Global_AddressPool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44Global_AddressPool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_AddressPool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44Global_AddressPool}, {}};

static void InitDefaultsNat44Global_VirtualReassembly() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44Global_VirtualReassembly_default_instance_;
    new (ptr) ::nat::Nat44Global_VirtualReassembly();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44Global_VirtualReassembly::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44Global_VirtualReassembly =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44Global_VirtualReassembly}, {}};

static void InitDefaultsNat44Global() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44Global_default_instance_;
    new (ptr) ::nat::Nat44Global();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44Global::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Nat44Global =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsNat44Global}, {
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_NatInterface.base,
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_AddressPool.base,
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_VirtualReassembly.base,}};

static void InitDefaultsNat44SNat_SNatConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44SNat_SNatConfig_default_instance_;
    new (ptr) ::nat::Nat44SNat_SNatConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44SNat_SNatConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44SNat_SNatConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44SNat_SNatConfig}, {}};

static void InitDefaultsNat44SNat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44SNat_default_instance_;
    new (ptr) ::nat::Nat44SNat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44SNat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Nat44SNat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNat44SNat}, {
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44SNat_SNatConfig.base,}};

static void InitDefaultsNat44DNat_DNatConfig_StaticMapping_LocalIP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44DNat_DNatConfig_StaticMapping_LocalIP_default_instance_;
    new (ptr) ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44DNat_DNatConfig_StaticMapping_LocalIP}, {}};

static void InitDefaultsNat44DNat_DNatConfig_StaticMapping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44DNat_DNatConfig_StaticMapping_default_instance_;
    new (ptr) ::nat::Nat44DNat_DNatConfig_StaticMapping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44DNat_DNatConfig_StaticMapping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Nat44DNat_DNatConfig_StaticMapping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNat44DNat_DNatConfig_StaticMapping}, {
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP.base,}};

static void InitDefaultsNat44DNat_DNatConfig_IdentityMapping() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44DNat_DNatConfig_IdentityMapping_default_instance_;
    new (ptr) ::nat::Nat44DNat_DNatConfig_IdentityMapping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44DNat_DNatConfig_IdentityMapping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Nat44DNat_DNatConfig_IdentityMapping =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNat44DNat_DNatConfig_IdentityMapping}, {}};

static void InitDefaultsNat44DNat_DNatConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44DNat_DNatConfig_default_instance_;
    new (ptr) ::nat::Nat44DNat_DNatConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44DNat_DNatConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Nat44DNat_DNatConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNat44DNat_DNatConfig}, {
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping.base,
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_IdentityMapping.base,}};

static void InitDefaultsNat44DNat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nat::_Nat44DNat_default_instance_;
    new (ptr) ::nat::Nat44DNat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nat::Nat44DNat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Nat44DNat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNat44DNat}, {
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44Global_NatInterface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44Global_AddressPool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44Global_VirtualReassembly.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44Global.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44SNat_SNatConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44SNat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44DNat_DNatConfig_StaticMapping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44DNat_DNatConfig_IdentityMapping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44DNat_DNatConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Nat44DNat.base);
}

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_NatInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_NatInterface, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_NatInterface, is_inside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_NatInterface, output_feature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_AddressPool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_AddressPool, first_src_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_AddressPool, last_src_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_AddressPool, vrf_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_AddressPool, twice_nat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_VirtualReassembly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_VirtualReassembly, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_VirtualReassembly, max_reass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_VirtualReassembly, max_frag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global_VirtualReassembly, drop_frag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, forwarding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, nat_interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, address_pools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, virtual_reassembly_ipv4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44Global, virtual_reassembly_ipv6_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44SNat_SNatConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44SNat_SNatConfig, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44SNat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44SNat, snat_configs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP, vrf_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP, local_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP, local_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP, probability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, external_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, external_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, external_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, local_ips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_StaticMapping, twice_nat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, vrf_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, addressed_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, ip_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig_IdentityMapping, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig, st_mappings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat_DNatConfig, id_mappings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nat::Nat44DNat, dnat_configs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nat::Nat44Global_NatInterface)},
  { 8, -1, sizeof(::nat::Nat44Global_AddressPool)},
  { 17, -1, sizeof(::nat::Nat44Global_VirtualReassembly)},
  { 26, -1, sizeof(::nat::Nat44Global)},
  { 36, -1, sizeof(::nat::Nat44SNat_SNatConfig)},
  { 42, -1, sizeof(::nat::Nat44SNat)},
  { 48, -1, sizeof(::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP)},
  { 57, -1, sizeof(::nat::Nat44DNat_DNatConfig_StaticMapping)},
  { 68, -1, sizeof(::nat::Nat44DNat_DNatConfig_IdentityMapping)},
  { 78, -1, sizeof(::nat::Nat44DNat_DNatConfig)},
  { 86, -1, sizeof(::nat::Nat44DNat)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44Global_NatInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44Global_AddressPool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44Global_VirtualReassembly_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44Global_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44SNat_SNatConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44SNat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44DNat_DNatConfig_StaticMapping_LocalIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44DNat_DNatConfig_StaticMapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44DNat_DNatConfig_IdentityMapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44DNat_DNatConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nat::_Nat44DNat_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "vpp/model/nat/nat.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027vpp/model/nat/nat.proto\022\003nat\"\245\004\n\013Nat44"
      "Global\022\022\n\nforwarding\030\002 \001(\010\0225\n\016nat_interf"
      "aces\030\003 \003(\0132\035.nat.Nat44Global.NatInterfac"
      "e\0223\n\raddress_pools\030\005 \003(\0132\034.nat.Nat44Glob"
      "al.AddressPool\022C\n\027virtual_reassembly_ipv"
      "4\030\006 \001(\0132\".nat.Nat44Global.VirtualReassem"
      "bly\022C\n\027virtual_reassembly_ipv6\030\007 \001(\0132\".n"
      "at.Nat44Global.VirtualReassembly\032G\n\014NatI"
      "nterface\022\014\n\004name\030\001 \001(\t\022\021\n\tis_inside\030\002 \001("
      "\010\022\026\n\016output_feature\030\003 \001(\010\032e\n\013AddressPool"
      "\022\031\n\021first_src_address\030\001 \001(\t\022\030\n\020last_src_"
      "address\030\002 \001(\t\022\016\n\006vrf_id\030\003 \001(\r\022\021\n\ttwice_n"
      "at\030\004 \001(\010\032\\\n\021VirtualReassembly\022\017\n\007timeout"
      "\030\001 \001(\r\022\021\n\tmax_reass\030\002 \001(\r\022\020\n\010max_frag\030\003 "
      "\001(\r\022\021\n\tdrop_frag\030\004 \001(\010\"Y\n\tNat44SNat\022/\n\014s"
      "nat_configs\030\001 \003(\0132\031.nat.Nat44SNat.SNatCo"
      "nfig\032\033\n\nSNatConfig\022\r\n\005label\030\001 \001(\t\"\227\005\n\tNa"
      "t44DNat\022/\n\014dnat_configs\030\001 \003(\0132\031.nat.Nat4"
      "4DNat.DNatConfig\032\330\004\n\nDNatConfig\022\r\n\005label"
      "\030\001 \001(\t\022<\n\013st_mappings\030\004 \003(\0132\'.nat.Nat44D"
      "Nat.DNatConfig.StaticMapping\022>\n\013id_mappi"
      "ngs\030\006 \003(\0132).nat.Nat44DNat.DNatConfig.Ide"
      "ntityMapping\032\270\002\n\rStaticMapping\022\032\n\022extern"
      "al_interface\030\002 \001(\t\022\023\n\013external_ip\030\003 \001(\t\022"
      "\025\n\rexternal_port\030\004 \001(\r\022B\n\tlocal_ips\030\005 \003("
      "\0132/.nat.Nat44DNat.DNatConfig.StaticMappi"
      "ng.LocalIP\022\037\n\010protocol\030\006 \001(\0162\r.nat.Proto"
      "col\022$\n\ttwice_nat\030\007 \001(\0162\021.nat.TwiceNatMod"
      "e\032T\n\007LocalIP\022\016\n\006vrf_id\030\004 \001(\r\022\020\n\010local_ip"
      "\030\001 \001(\t\022\022\n\nlocal_port\030\003 \001(\r\022\023\n\013probabilit"
      "y\030\002 \001(\r\032\201\001\n\017IdentityMapping\022\016\n\006vrf_id\030\001 "
      "\001(\r\022\033\n\023addressed_interface\030\002 \001(\t\022\022\n\nip_a"
      "ddress\030\003 \001(\t\022\014\n\004port\030\004 \001(\r\022\037\n\010protocol\030\005"
      " \001(\0162\r.nat.Protocol*&\n\010Protocol\022\007\n\003TCP\020\000"
      "\022\007\n\003UDP\020\001\022\010\n\004ICMP\020\002*3\n\014TwiceNatMode\022\014\n\010D"
      "ISABLED\020\000\022\013\n\007ENABLED\020\001\022\010\n\004SELF\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1440);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vpp/model/nat/nat.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto
namespace nat {
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_enum_descriptors[0];
}
bool Protocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TwiceNatMode_descriptor() {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_enum_descriptors[1];
}
bool TwiceNatMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Nat44Global_NatInterface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44Global_NatInterface::kNameFieldNumber;
const int Nat44Global_NatInterface::kIsInsideFieldNumber;
const int Nat44Global_NatInterface::kOutputFeatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44Global_NatInterface::Nat44Global_NatInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_NatInterface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44Global.NatInterface)
}
Nat44Global_NatInterface::Nat44Global_NatInterface(const Nat44Global_NatInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&is_inside_, &from.is_inside_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_feature_) -
    reinterpret_cast<char*>(&is_inside_)) + sizeof(output_feature_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44Global.NatInterface)
}

void Nat44Global_NatInterface::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_inside_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_feature_) -
      reinterpret_cast<char*>(&is_inside_)) + sizeof(output_feature_));
}

Nat44Global_NatInterface::~Nat44Global_NatInterface() {
  // @@protoc_insertion_point(destructor:nat.Nat44Global.NatInterface)
  SharedDtor();
}

void Nat44Global_NatInterface::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44Global_NatInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44Global_NatInterface::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44Global_NatInterface& Nat44Global_NatInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_NatInterface.base);
  return *internal_default_instance();
}


void Nat44Global_NatInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44Global.NatInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_inside_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_feature_) -
      reinterpret_cast<char*>(&is_inside_)) + sizeof(output_feature_));
  _internal_metadata_.Clear();
}

bool Nat44Global_NatInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44Global.NatInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44Global.NatInterface.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_inside = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool output_feature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &output_feature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44Global.NatInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44Global.NatInterface)
  return false;
#undef DO_
}

void Nat44Global_NatInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44Global.NatInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.NatInterface.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool is_inside = 2;
  if (this->is_inside() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_inside(), output);
  }

  // bool output_feature = 3;
  if (this->output_feature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->output_feature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44Global.NatInterface)
}

::google::protobuf::uint8* Nat44Global_NatInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44Global.NatInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.NatInterface.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool is_inside = 2;
  if (this->is_inside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_inside(), target);
  }

  // bool output_feature = 3;
  if (this->output_feature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->output_feature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44Global.NatInterface)
  return target;
}

size_t Nat44Global_NatInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44Global.NatInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool is_inside = 2;
  if (this->is_inside() != 0) {
    total_size += 1 + 1;
  }

  // bool output_feature = 3;
  if (this->output_feature() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44Global_NatInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44Global.NatInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44Global_NatInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44Global_NatInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44Global.NatInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44Global.NatInterface)
    MergeFrom(*source);
  }
}

void Nat44Global_NatInterface::MergeFrom(const Nat44Global_NatInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44Global.NatInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.is_inside() != 0) {
    set_is_inside(from.is_inside());
  }
  if (from.output_feature() != 0) {
    set_output_feature(from.output_feature());
  }
}

void Nat44Global_NatInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44Global.NatInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44Global_NatInterface::CopyFrom(const Nat44Global_NatInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44Global.NatInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44Global_NatInterface::IsInitialized() const {
  return true;
}

void Nat44Global_NatInterface::Swap(Nat44Global_NatInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44Global_NatInterface::InternalSwap(Nat44Global_NatInterface* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_inside_, other->is_inside_);
  swap(output_feature_, other->output_feature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44Global_NatInterface::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44Global_AddressPool::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44Global_AddressPool::kFirstSrcAddressFieldNumber;
const int Nat44Global_AddressPool::kLastSrcAddressFieldNumber;
const int Nat44Global_AddressPool::kVrfIdFieldNumber;
const int Nat44Global_AddressPool::kTwiceNatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44Global_AddressPool::Nat44Global_AddressPool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_AddressPool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44Global.AddressPool)
}
Nat44Global_AddressPool::Nat44Global_AddressPool(const Nat44Global_AddressPool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_src_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.first_src_address().size() > 0) {
    first_src_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_src_address_);
  }
  last_src_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_src_address().size() > 0) {
    last_src_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_src_address_);
  }
  ::memcpy(&vrf_id_, &from.vrf_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&twice_nat_) -
    reinterpret_cast<char*>(&vrf_id_)) + sizeof(twice_nat_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44Global.AddressPool)
}

void Nat44Global_AddressPool::SharedCtor() {
  first_src_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_src_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vrf_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_nat_) -
      reinterpret_cast<char*>(&vrf_id_)) + sizeof(twice_nat_));
}

Nat44Global_AddressPool::~Nat44Global_AddressPool() {
  // @@protoc_insertion_point(destructor:nat.Nat44Global.AddressPool)
  SharedDtor();
}

void Nat44Global_AddressPool::SharedDtor() {
  first_src_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_src_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44Global_AddressPool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44Global_AddressPool::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44Global_AddressPool& Nat44Global_AddressPool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_AddressPool.base);
  return *internal_default_instance();
}


void Nat44Global_AddressPool::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44Global.AddressPool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  first_src_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_src_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vrf_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_nat_) -
      reinterpret_cast<char*>(&vrf_id_)) + sizeof(twice_nat_));
  _internal_metadata_.Clear();
}

bool Nat44Global_AddressPool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44Global.AddressPool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string first_src_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_src_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_src_address().data(), static_cast<int>(this->first_src_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44Global.AddressPool.first_src_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_src_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_src_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_src_address().data(), static_cast<int>(this->last_src_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44Global.AddressPool.last_src_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vrf_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrf_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool twice_nat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twice_nat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44Global.AddressPool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44Global.AddressPool)
  return false;
#undef DO_
}

void Nat44Global_AddressPool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44Global.AddressPool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string first_src_address = 1;
  if (this->first_src_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_src_address().data(), static_cast<int>(this->first_src_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.AddressPool.first_src_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->first_src_address(), output);
  }

  // string last_src_address = 2;
  if (this->last_src_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_src_address().data(), static_cast<int>(this->last_src_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.AddressPool.last_src_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_src_address(), output);
  }

  // uint32 vrf_id = 3;
  if (this->vrf_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vrf_id(), output);
  }

  // bool twice_nat = 4;
  if (this->twice_nat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->twice_nat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44Global.AddressPool)
}

::google::protobuf::uint8* Nat44Global_AddressPool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44Global.AddressPool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string first_src_address = 1;
  if (this->first_src_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_src_address().data(), static_cast<int>(this->first_src_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.AddressPool.first_src_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->first_src_address(), target);
  }

  // string last_src_address = 2;
  if (this->last_src_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_src_address().data(), static_cast<int>(this->last_src_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44Global.AddressPool.last_src_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_src_address(), target);
  }

  // uint32 vrf_id = 3;
  if (this->vrf_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vrf_id(), target);
  }

  // bool twice_nat = 4;
  if (this->twice_nat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->twice_nat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44Global.AddressPool)
  return target;
}

size_t Nat44Global_AddressPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44Global.AddressPool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string first_src_address = 1;
  if (this->first_src_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_src_address());
  }

  // string last_src_address = 2;
  if (this->last_src_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_src_address());
  }

  // uint32 vrf_id = 3;
  if (this->vrf_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrf_id());
  }

  // bool twice_nat = 4;
  if (this->twice_nat() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44Global_AddressPool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44Global.AddressPool)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44Global_AddressPool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44Global_AddressPool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44Global.AddressPool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44Global.AddressPool)
    MergeFrom(*source);
  }
}

void Nat44Global_AddressPool::MergeFrom(const Nat44Global_AddressPool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44Global.AddressPool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.first_src_address().size() > 0) {

    first_src_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_src_address_);
  }
  if (from.last_src_address().size() > 0) {

    last_src_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_src_address_);
  }
  if (from.vrf_id() != 0) {
    set_vrf_id(from.vrf_id());
  }
  if (from.twice_nat() != 0) {
    set_twice_nat(from.twice_nat());
  }
}

void Nat44Global_AddressPool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44Global.AddressPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44Global_AddressPool::CopyFrom(const Nat44Global_AddressPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44Global.AddressPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44Global_AddressPool::IsInitialized() const {
  return true;
}

void Nat44Global_AddressPool::Swap(Nat44Global_AddressPool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44Global_AddressPool::InternalSwap(Nat44Global_AddressPool* other) {
  using std::swap;
  first_src_address_.Swap(&other->first_src_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_src_address_.Swap(&other->last_src_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vrf_id_, other->vrf_id_);
  swap(twice_nat_, other->twice_nat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44Global_AddressPool::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44Global_VirtualReassembly::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44Global_VirtualReassembly::kTimeoutFieldNumber;
const int Nat44Global_VirtualReassembly::kMaxReassFieldNumber;
const int Nat44Global_VirtualReassembly::kMaxFragFieldNumber;
const int Nat44Global_VirtualReassembly::kDropFragFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44Global_VirtualReassembly::Nat44Global_VirtualReassembly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_VirtualReassembly.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44Global.VirtualReassembly)
}
Nat44Global_VirtualReassembly::Nat44Global_VirtualReassembly(const Nat44Global_VirtualReassembly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeout_, &from.timeout_,
    static_cast<size_t>(reinterpret_cast<char*>(&drop_frag_) -
    reinterpret_cast<char*>(&timeout_)) + sizeof(drop_frag_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44Global.VirtualReassembly)
}

void Nat44Global_VirtualReassembly::SharedCtor() {
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_frag_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(drop_frag_));
}

Nat44Global_VirtualReassembly::~Nat44Global_VirtualReassembly() {
  // @@protoc_insertion_point(destructor:nat.Nat44Global.VirtualReassembly)
  SharedDtor();
}

void Nat44Global_VirtualReassembly::SharedDtor() {
}

void Nat44Global_VirtualReassembly::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44Global_VirtualReassembly::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44Global_VirtualReassembly& Nat44Global_VirtualReassembly::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global_VirtualReassembly.base);
  return *internal_default_instance();
}


void Nat44Global_VirtualReassembly::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44Global.VirtualReassembly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_frag_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(drop_frag_));
  _internal_metadata_.Clear();
}

bool Nat44Global_VirtualReassembly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44Global.VirtualReassembly)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_reass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_reass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_frag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_frag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool drop_frag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &drop_frag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44Global.VirtualReassembly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44Global.VirtualReassembly)
  return false;
#undef DO_
}

void Nat44Global_VirtualReassembly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44Global.VirtualReassembly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timeout = 1;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timeout(), output);
  }

  // uint32 max_reass = 2;
  if (this->max_reass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_reass(), output);
  }

  // uint32 max_frag = 3;
  if (this->max_frag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_frag(), output);
  }

  // bool drop_frag = 4;
  if (this->drop_frag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->drop_frag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44Global.VirtualReassembly)
}

::google::protobuf::uint8* Nat44Global_VirtualReassembly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44Global.VirtualReassembly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timeout = 1;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timeout(), target);
  }

  // uint32 max_reass = 2;
  if (this->max_reass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_reass(), target);
  }

  // uint32 max_frag = 3;
  if (this->max_frag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_frag(), target);
  }

  // bool drop_frag = 4;
  if (this->drop_frag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->drop_frag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44Global.VirtualReassembly)
  return target;
}

size_t Nat44Global_VirtualReassembly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44Global.VirtualReassembly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 timeout = 1;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  // uint32 max_reass = 2;
  if (this->max_reass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_reass());
  }

  // uint32 max_frag = 3;
  if (this->max_frag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_frag());
  }

  // bool drop_frag = 4;
  if (this->drop_frag() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44Global_VirtualReassembly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44Global.VirtualReassembly)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44Global_VirtualReassembly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44Global_VirtualReassembly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44Global.VirtualReassembly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44Global.VirtualReassembly)
    MergeFrom(*source);
  }
}

void Nat44Global_VirtualReassembly::MergeFrom(const Nat44Global_VirtualReassembly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44Global.VirtualReassembly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.max_reass() != 0) {
    set_max_reass(from.max_reass());
  }
  if (from.max_frag() != 0) {
    set_max_frag(from.max_frag());
  }
  if (from.drop_frag() != 0) {
    set_drop_frag(from.drop_frag());
  }
}

void Nat44Global_VirtualReassembly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44Global.VirtualReassembly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44Global_VirtualReassembly::CopyFrom(const Nat44Global_VirtualReassembly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44Global.VirtualReassembly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44Global_VirtualReassembly::IsInitialized() const {
  return true;
}

void Nat44Global_VirtualReassembly::Swap(Nat44Global_VirtualReassembly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44Global_VirtualReassembly::InternalSwap(Nat44Global_VirtualReassembly* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(max_reass_, other->max_reass_);
  swap(max_frag_, other->max_frag_);
  swap(drop_frag_, other->drop_frag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44Global_VirtualReassembly::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44Global::InitAsDefaultInstance() {
  ::nat::_Nat44Global_default_instance_._instance.get_mutable()->virtual_reassembly_ipv4_ = const_cast< ::nat::Nat44Global_VirtualReassembly*>(
      ::nat::Nat44Global_VirtualReassembly::internal_default_instance());
  ::nat::_Nat44Global_default_instance_._instance.get_mutable()->virtual_reassembly_ipv6_ = const_cast< ::nat::Nat44Global_VirtualReassembly*>(
      ::nat::Nat44Global_VirtualReassembly::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44Global::kForwardingFieldNumber;
const int Nat44Global::kNatInterfacesFieldNumber;
const int Nat44Global::kAddressPoolsFieldNumber;
const int Nat44Global::kVirtualReassemblyIpv4FieldNumber;
const int Nat44Global::kVirtualReassemblyIpv6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44Global::Nat44Global()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44Global)
}
Nat44Global::Nat44Global(const Nat44Global& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nat_interfaces_(from.nat_interfaces_),
      address_pools_(from.address_pools_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_virtual_reassembly_ipv4()) {
    virtual_reassembly_ipv4_ = new ::nat::Nat44Global_VirtualReassembly(*from.virtual_reassembly_ipv4_);
  } else {
    virtual_reassembly_ipv4_ = NULL;
  }
  if (from.has_virtual_reassembly_ipv6()) {
    virtual_reassembly_ipv6_ = new ::nat::Nat44Global_VirtualReassembly(*from.virtual_reassembly_ipv6_);
  } else {
    virtual_reassembly_ipv6_ = NULL;
  }
  forwarding_ = from.forwarding_;
  // @@protoc_insertion_point(copy_constructor:nat.Nat44Global)
}

void Nat44Global::SharedCtor() {
  ::memset(&virtual_reassembly_ipv4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forwarding_) -
      reinterpret_cast<char*>(&virtual_reassembly_ipv4_)) + sizeof(forwarding_));
}

Nat44Global::~Nat44Global() {
  // @@protoc_insertion_point(destructor:nat.Nat44Global)
  SharedDtor();
}

void Nat44Global::SharedDtor() {
  if (this != internal_default_instance()) delete virtual_reassembly_ipv4_;
  if (this != internal_default_instance()) delete virtual_reassembly_ipv6_;
}

void Nat44Global::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44Global::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44Global& Nat44Global::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44Global.base);
  return *internal_default_instance();
}


void Nat44Global::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nat_interfaces_.Clear();
  address_pools_.Clear();
  if (GetArenaNoVirtual() == NULL && virtual_reassembly_ipv4_ != NULL) {
    delete virtual_reassembly_ipv4_;
  }
  virtual_reassembly_ipv4_ = NULL;
  if (GetArenaNoVirtual() == NULL && virtual_reassembly_ipv6_ != NULL) {
    delete virtual_reassembly_ipv6_;
  }
  virtual_reassembly_ipv6_ = NULL;
  forwarding_ = false;
  _internal_metadata_.Clear();
}

bool Nat44Global::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44Global)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool forwarding = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forwarding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nat_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nat.Nat44Global.AddressPool address_pools = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_address_pools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_virtual_reassembly_ipv4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_virtual_reassembly_ipv6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44Global)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44Global)
  return false;
#undef DO_
}

void Nat44Global::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool forwarding = 2;
  if (this->forwarding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->forwarding(), output);
  }

  // repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nat_interfaces_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->nat_interfaces(static_cast<int>(i)),
      output);
  }

  // repeated .nat.Nat44Global.AddressPool address_pools = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_pools_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->address_pools(static_cast<int>(i)),
      output);
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
  if (this->has_virtual_reassembly_ipv4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_virtual_reassembly_ipv4(), output);
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
  if (this->has_virtual_reassembly_ipv6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_virtual_reassembly_ipv6(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44Global)
}

::google::protobuf::uint8* Nat44Global::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool forwarding = 2;
  if (this->forwarding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->forwarding(), target);
  }

  // repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nat_interfaces_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->nat_interfaces(static_cast<int>(i)), deterministic, target);
  }

  // repeated .nat.Nat44Global.AddressPool address_pools = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->address_pools_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->address_pools(static_cast<int>(i)), deterministic, target);
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
  if (this->has_virtual_reassembly_ipv4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_virtual_reassembly_ipv4(), deterministic, target);
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
  if (this->has_virtual_reassembly_ipv6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_virtual_reassembly_ipv6(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44Global)
  return target;
}

size_t Nat44Global::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44Global)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->nat_interfaces_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nat_interfaces(static_cast<int>(i)));
    }
  }

  // repeated .nat.Nat44Global.AddressPool address_pools = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->address_pools_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->address_pools(static_cast<int>(i)));
    }
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
  if (this->has_virtual_reassembly_ipv4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *virtual_reassembly_ipv4_);
  }

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
  if (this->has_virtual_reassembly_ipv6()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *virtual_reassembly_ipv6_);
  }

  // bool forwarding = 2;
  if (this->forwarding() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44Global::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44Global)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44Global* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44Global>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44Global)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44Global)
    MergeFrom(*source);
  }
}

void Nat44Global::MergeFrom(const Nat44Global& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44Global)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nat_interfaces_.MergeFrom(from.nat_interfaces_);
  address_pools_.MergeFrom(from.address_pools_);
  if (from.has_virtual_reassembly_ipv4()) {
    mutable_virtual_reassembly_ipv4()->::nat::Nat44Global_VirtualReassembly::MergeFrom(from.virtual_reassembly_ipv4());
  }
  if (from.has_virtual_reassembly_ipv6()) {
    mutable_virtual_reassembly_ipv6()->::nat::Nat44Global_VirtualReassembly::MergeFrom(from.virtual_reassembly_ipv6());
  }
  if (from.forwarding() != 0) {
    set_forwarding(from.forwarding());
  }
}

void Nat44Global::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44Global::CopyFrom(const Nat44Global& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44Global::IsInitialized() const {
  return true;
}

void Nat44Global::Swap(Nat44Global* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44Global::InternalSwap(Nat44Global* other) {
  using std::swap;
  CastToBase(&nat_interfaces_)->InternalSwap(CastToBase(&other->nat_interfaces_));
  CastToBase(&address_pools_)->InternalSwap(CastToBase(&other->address_pools_));
  swap(virtual_reassembly_ipv4_, other->virtual_reassembly_ipv4_);
  swap(virtual_reassembly_ipv6_, other->virtual_reassembly_ipv6_);
  swap(forwarding_, other->forwarding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44Global::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44SNat_SNatConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44SNat_SNatConfig::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44SNat_SNatConfig::Nat44SNat_SNatConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44SNat_SNatConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44SNat.SNatConfig)
}
Nat44SNat_SNatConfig::Nat44SNat_SNatConfig(const Nat44SNat_SNatConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:nat.Nat44SNat.SNatConfig)
}

void Nat44SNat_SNatConfig::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Nat44SNat_SNatConfig::~Nat44SNat_SNatConfig() {
  // @@protoc_insertion_point(destructor:nat.Nat44SNat.SNatConfig)
  SharedDtor();
}

void Nat44SNat_SNatConfig::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44SNat_SNatConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44SNat_SNatConfig::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44SNat_SNatConfig& Nat44SNat_SNatConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44SNat_SNatConfig.base);
  return *internal_default_instance();
}


void Nat44SNat_SNatConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44SNat.SNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Nat44SNat_SNatConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44SNat.SNatConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44SNat.SNatConfig.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44SNat.SNatConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44SNat.SNatConfig)
  return false;
#undef DO_
}

void Nat44SNat_SNatConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44SNat.SNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44SNat.SNatConfig.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44SNat.SNatConfig)
}

::google::protobuf::uint8* Nat44SNat_SNatConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44SNat.SNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44SNat.SNatConfig.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44SNat.SNatConfig)
  return target;
}

size_t Nat44SNat_SNatConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44SNat.SNatConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 1;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44SNat_SNatConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44SNat.SNatConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44SNat_SNatConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44SNat_SNatConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44SNat.SNatConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44SNat.SNatConfig)
    MergeFrom(*source);
  }
}

void Nat44SNat_SNatConfig::MergeFrom(const Nat44SNat_SNatConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44SNat.SNatConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void Nat44SNat_SNatConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44SNat.SNatConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44SNat_SNatConfig::CopyFrom(const Nat44SNat_SNatConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44SNat.SNatConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44SNat_SNatConfig::IsInitialized() const {
  return true;
}

void Nat44SNat_SNatConfig::Swap(Nat44SNat_SNatConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44SNat_SNatConfig::InternalSwap(Nat44SNat_SNatConfig* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44SNat_SNatConfig::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44SNat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44SNat::kSnatConfigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44SNat::Nat44SNat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44SNat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44SNat)
}
Nat44SNat::Nat44SNat(const Nat44SNat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      snat_configs_(from.snat_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nat.Nat44SNat)
}

void Nat44SNat::SharedCtor() {
}

Nat44SNat::~Nat44SNat() {
  // @@protoc_insertion_point(destructor:nat.Nat44SNat)
  SharedDtor();
}

void Nat44SNat::SharedDtor() {
}

void Nat44SNat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44SNat::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44SNat& Nat44SNat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44SNat.base);
  return *internal_default_instance();
}


void Nat44SNat::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44SNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snat_configs_.Clear();
  _internal_metadata_.Clear();
}

bool Nat44SNat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44SNat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_snat_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44SNat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44SNat)
  return false;
#undef DO_
}

void Nat44SNat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44SNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snat_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->snat_configs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44SNat)
}

::google::protobuf::uint8* Nat44SNat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44SNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snat_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->snat_configs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44SNat)
  return target;
}

size_t Nat44SNat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44SNat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->snat_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->snat_configs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44SNat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44SNat)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44SNat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44SNat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44SNat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44SNat)
    MergeFrom(*source);
  }
}

void Nat44SNat::MergeFrom(const Nat44SNat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44SNat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snat_configs_.MergeFrom(from.snat_configs_);
}

void Nat44SNat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44SNat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44SNat::CopyFrom(const Nat44SNat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44SNat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44SNat::IsInitialized() const {
  return true;
}

void Nat44SNat::Swap(Nat44SNat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44SNat::InternalSwap(Nat44SNat* other) {
  using std::swap;
  CastToBase(&snat_configs_)->InternalSwap(CastToBase(&other->snat_configs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44SNat::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44DNat_DNatConfig_StaticMapping_LocalIP::kVrfIdFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping_LocalIP::kLocalIpFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping_LocalIP::kLocalPortFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping_LocalIP::kProbabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44DNat_DNatConfig_StaticMapping_LocalIP::Nat44DNat_DNatConfig_StaticMapping_LocalIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
}
Nat44DNat_DNatConfig_StaticMapping_LocalIP::Nat44DNat_DNatConfig_StaticMapping_LocalIP(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_ip().size() > 0) {
    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  ::memcpy(&probability_, &from.probability_,
    static_cast<size_t>(reinterpret_cast<char*>(&vrf_id_) -
    reinterpret_cast<char*>(&probability_)) + sizeof(vrf_id_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::SharedCtor() {
  local_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&probability_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrf_id_) -
      reinterpret_cast<char*>(&probability_)) + sizeof(vrf_id_));
}

Nat44DNat_DNatConfig_StaticMapping_LocalIP::~Nat44DNat_DNatConfig_StaticMapping_LocalIP() {
  // @@protoc_insertion_point(destructor:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  SharedDtor();
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::SharedDtor() {
  local_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44DNat_DNatConfig_StaticMapping_LocalIP::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44DNat_DNatConfig_StaticMapping_LocalIP& Nat44DNat_DNatConfig_StaticMapping_LocalIP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping_LocalIP.base);
  return *internal_default_instance();
}


void Nat44DNat_DNatConfig_StaticMapping_LocalIP::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&probability_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrf_id_) -
      reinterpret_cast<char*>(&probability_)) + sizeof(vrf_id_));
  _internal_metadata_.Clear();
}

bool Nat44DNat_DNatConfig_StaticMapping_LocalIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string local_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_ip().data(), static_cast<int>(this->local_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 probability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vrf_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrf_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  return false;
#undef DO_
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->local_ip(), output);
  }

  // uint32 probability = 2;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->probability(), output);
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->local_port(), output);
  }

  // uint32 vrf_id = 4;
  if (this->vrf_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->vrf_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
}

::google::protobuf::uint8* Nat44DNat_DNatConfig_StaticMapping_LocalIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_ip().data(), static_cast<int>(this->local_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->local_ip(), target);
  }

  // uint32 probability = 2;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->probability(), target);
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->local_port(), target);
  }

  // uint32 vrf_id = 4;
  if (this->vrf_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->vrf_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  return target;
}

size_t Nat44DNat_DNatConfig_StaticMapping_LocalIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string local_ip = 1;
  if (this->local_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_ip());
  }

  // uint32 probability = 2;
  if (this->probability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->probability());
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_port());
  }

  // uint32 vrf_id = 4;
  if (this->vrf_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrf_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44DNat_DNatConfig_StaticMapping_LocalIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44DNat_DNatConfig_StaticMapping_LocalIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
    MergeFrom(*source);
  }
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::MergeFrom(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_ip().size() > 0) {

    local_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_ip_);
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
  if (from.local_port() != 0) {
    set_local_port(from.local_port());
  }
  if (from.vrf_id() != 0) {
    set_vrf_id(from.vrf_id());
  }
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::CopyFrom(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44DNat_DNatConfig_StaticMapping_LocalIP::IsInitialized() const {
  return true;
}

void Nat44DNat_DNatConfig_StaticMapping_LocalIP::Swap(Nat44DNat_DNatConfig_StaticMapping_LocalIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44DNat_DNatConfig_StaticMapping_LocalIP::InternalSwap(Nat44DNat_DNatConfig_StaticMapping_LocalIP* other) {
  using std::swap;
  local_ip_.Swap(&other->local_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(probability_, other->probability_);
  swap(local_port_, other->local_port_);
  swap(vrf_id_, other->vrf_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44DNat_DNatConfig_StaticMapping_LocalIP::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44DNat_DNatConfig_StaticMapping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44DNat_DNatConfig_StaticMapping::kExternalInterfaceFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping::kExternalIpFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping::kExternalPortFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping::kLocalIpsFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping::kProtocolFieldNumber;
const int Nat44DNat_DNatConfig_StaticMapping::kTwiceNatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44DNat_DNatConfig_StaticMapping::Nat44DNat_DNatConfig_StaticMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44DNat.DNatConfig.StaticMapping)
}
Nat44DNat_DNatConfig_StaticMapping::Nat44DNat_DNatConfig_StaticMapping(const Nat44DNat_DNatConfig_StaticMapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      local_ips_(from.local_ips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  external_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.external_interface().size() > 0) {
    external_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_interface_);
  }
  external_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.external_ip().size() > 0) {
    external_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_ip_);
  }
  ::memcpy(&external_port_, &from.external_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&twice_nat_) -
    reinterpret_cast<char*>(&external_port_)) + sizeof(twice_nat_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44DNat.DNatConfig.StaticMapping)
}

void Nat44DNat_DNatConfig_StaticMapping::SharedCtor() {
  external_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&external_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_nat_) -
      reinterpret_cast<char*>(&external_port_)) + sizeof(twice_nat_));
}

Nat44DNat_DNatConfig_StaticMapping::~Nat44DNat_DNatConfig_StaticMapping() {
  // @@protoc_insertion_point(destructor:nat.Nat44DNat.DNatConfig.StaticMapping)
  SharedDtor();
}

void Nat44DNat_DNatConfig_StaticMapping::SharedDtor() {
  external_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44DNat_DNatConfig_StaticMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44DNat_DNatConfig_StaticMapping::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44DNat_DNatConfig_StaticMapping& Nat44DNat_DNatConfig_StaticMapping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_StaticMapping.base);
  return *internal_default_instance();
}


void Nat44DNat_DNatConfig_StaticMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_ips_.Clear();
  external_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&external_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_nat_) -
      reinterpret_cast<char*>(&external_port_)) + sizeof(twice_nat_));
  _internal_metadata_.Clear();
}

bool Nat44DNat_DNatConfig_StaticMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string external_interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->external_interface().data(), static_cast<int>(this->external_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.StaticMapping.external_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string external_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->external_ip().data(), static_cast<int>(this->external_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.StaticMapping.external_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 external_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &external_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_local_ips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nat.Protocol protocol = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol(static_cast< ::nat::Protocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nat.TwiceNatMode twice_nat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_twice_nat(static_cast< ::nat::TwiceNatMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44DNat.DNatConfig.StaticMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44DNat.DNatConfig.StaticMapping)
  return false;
#undef DO_
}

void Nat44DNat_DNatConfig_StaticMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string external_interface = 2;
  if (this->external_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_interface().data(), static_cast<int>(this->external_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.external_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->external_interface(), output);
  }

  // string external_ip = 3;
  if (this->external_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_ip().data(), static_cast<int>(this->external_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.external_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->external_ip(), output);
  }

  // uint32 external_port = 4;
  if (this->external_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->external_port(), output);
  }

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_ips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->local_ips(static_cast<int>(i)),
      output);
  }

  // .nat.Protocol protocol = 6;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->protocol(), output);
  }

  // .nat.TwiceNatMode twice_nat = 7;
  if (this->twice_nat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->twice_nat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44DNat.DNatConfig.StaticMapping)
}

::google::protobuf::uint8* Nat44DNat_DNatConfig_StaticMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string external_interface = 2;
  if (this->external_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_interface().data(), static_cast<int>(this->external_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.external_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->external_interface(), target);
  }

  // string external_ip = 3;
  if (this->external_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_ip().data(), static_cast<int>(this->external_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.StaticMapping.external_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->external_ip(), target);
  }

  // uint32 external_port = 4;
  if (this->external_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->external_port(), target);
  }

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->local_ips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->local_ips(static_cast<int>(i)), deterministic, target);
  }

  // .nat.Protocol protocol = 6;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->protocol(), target);
  }

  // .nat.TwiceNatMode twice_nat = 7;
  if (this->twice_nat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->twice_nat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44DNat.DNatConfig.StaticMapping)
  return target;
}

size_t Nat44DNat_DNatConfig_StaticMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->local_ips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->local_ips(static_cast<int>(i)));
    }
  }

  // string external_interface = 2;
  if (this->external_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->external_interface());
  }

  // string external_ip = 3;
  if (this->external_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->external_ip());
  }

  // uint32 external_port = 4;
  if (this->external_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->external_port());
  }

  // .nat.Protocol protocol = 6;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
  }

  // .nat.TwiceNatMode twice_nat = 7;
  if (this->twice_nat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->twice_nat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44DNat_DNatConfig_StaticMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44DNat_DNatConfig_StaticMapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44DNat_DNatConfig_StaticMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44DNat.DNatConfig.StaticMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44DNat.DNatConfig.StaticMapping)
    MergeFrom(*source);
  }
}

void Nat44DNat_DNatConfig_StaticMapping::MergeFrom(const Nat44DNat_DNatConfig_StaticMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  local_ips_.MergeFrom(from.local_ips_);
  if (from.external_interface().size() > 0) {

    external_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_interface_);
  }
  if (from.external_ip().size() > 0) {

    external_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_ip_);
  }
  if (from.external_port() != 0) {
    set_external_port(from.external_port());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
  if (from.twice_nat() != 0) {
    set_twice_nat(from.twice_nat());
  }
}

void Nat44DNat_DNatConfig_StaticMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44DNat_DNatConfig_StaticMapping::CopyFrom(const Nat44DNat_DNatConfig_StaticMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44DNat.DNatConfig.StaticMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44DNat_DNatConfig_StaticMapping::IsInitialized() const {
  return true;
}

void Nat44DNat_DNatConfig_StaticMapping::Swap(Nat44DNat_DNatConfig_StaticMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44DNat_DNatConfig_StaticMapping::InternalSwap(Nat44DNat_DNatConfig_StaticMapping* other) {
  using std::swap;
  CastToBase(&local_ips_)->InternalSwap(CastToBase(&other->local_ips_));
  external_interface_.Swap(&other->external_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  external_ip_.Swap(&other->external_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(external_port_, other->external_port_);
  swap(protocol_, other->protocol_);
  swap(twice_nat_, other->twice_nat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44DNat_DNatConfig_StaticMapping::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44DNat_DNatConfig_IdentityMapping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44DNat_DNatConfig_IdentityMapping::kVrfIdFieldNumber;
const int Nat44DNat_DNatConfig_IdentityMapping::kAddressedInterfaceFieldNumber;
const int Nat44DNat_DNatConfig_IdentityMapping::kIpAddressFieldNumber;
const int Nat44DNat_DNatConfig_IdentityMapping::kPortFieldNumber;
const int Nat44DNat_DNatConfig_IdentityMapping::kProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44DNat_DNatConfig_IdentityMapping::Nat44DNat_DNatConfig_IdentityMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_IdentityMapping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44DNat.DNatConfig.IdentityMapping)
}
Nat44DNat_DNatConfig_IdentityMapping::Nat44DNat_DNatConfig_IdentityMapping(const Nat44DNat_DNatConfig_IdentityMapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addressed_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addressed_interface().size() > 0) {
    addressed_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addressed_interface_);
  }
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_address().size() > 0) {
    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  ::memcpy(&vrf_id_, &from.vrf_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&protocol_) -
    reinterpret_cast<char*>(&vrf_id_)) + sizeof(protocol_));
  // @@protoc_insertion_point(copy_constructor:nat.Nat44DNat.DNatConfig.IdentityMapping)
}

void Nat44DNat_DNatConfig_IdentityMapping::SharedCtor() {
  addressed_interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vrf_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_) -
      reinterpret_cast<char*>(&vrf_id_)) + sizeof(protocol_));
}

Nat44DNat_DNatConfig_IdentityMapping::~Nat44DNat_DNatConfig_IdentityMapping() {
  // @@protoc_insertion_point(destructor:nat.Nat44DNat.DNatConfig.IdentityMapping)
  SharedDtor();
}

void Nat44DNat_DNatConfig_IdentityMapping::SharedDtor() {
  addressed_interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44DNat_DNatConfig_IdentityMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44DNat_DNatConfig_IdentityMapping::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44DNat_DNatConfig_IdentityMapping& Nat44DNat_DNatConfig_IdentityMapping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig_IdentityMapping.base);
  return *internal_default_instance();
}


void Nat44DNat_DNatConfig_IdentityMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addressed_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vrf_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_) -
      reinterpret_cast<char*>(&vrf_id_)) + sizeof(protocol_));
  _internal_metadata_.Clear();
}

bool Nat44DNat_DNatConfig_IdentityMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 vrf_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrf_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addressed_interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addressed_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addressed_interface().data(), static_cast<int>(this->addressed_interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), static_cast<int>(this->ip_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .nat.Protocol protocol = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol(static_cast< ::nat::Protocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44DNat.DNatConfig.IdentityMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44DNat.DNatConfig.IdentityMapping)
  return false;
#undef DO_
}

void Nat44DNat_DNatConfig_IdentityMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vrf_id = 1;
  if (this->vrf_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vrf_id(), output);
  }

  // string addressed_interface = 2;
  if (this->addressed_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addressed_interface().data(), static_cast<int>(this->addressed_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->addressed_interface(), output);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_address(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  // .nat.Protocol protocol = 5;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->protocol(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44DNat.DNatConfig.IdentityMapping)
}

::google::protobuf::uint8* Nat44DNat_DNatConfig_IdentityMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vrf_id = 1;
  if (this->vrf_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vrf_id(), target);
  }

  // string addressed_interface = 2;
  if (this->addressed_interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addressed_interface().data(), static_cast<int>(this->addressed_interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->addressed_interface(), target);
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), static_cast<int>(this->ip_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_address(), target);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  // .nat.Protocol protocol = 5;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->protocol(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44DNat.DNatConfig.IdentityMapping)
  return target;
}

size_t Nat44DNat_DNatConfig_IdentityMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string addressed_interface = 2;
  if (this->addressed_interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addressed_interface());
  }

  // string ip_address = 3;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // uint32 vrf_id = 1;
  if (this->vrf_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrf_id());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // .nat.Protocol protocol = 5;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44DNat_DNatConfig_IdentityMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44DNat_DNatConfig_IdentityMapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44DNat_DNatConfig_IdentityMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44DNat.DNatConfig.IdentityMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44DNat.DNatConfig.IdentityMapping)
    MergeFrom(*source);
  }
}

void Nat44DNat_DNatConfig_IdentityMapping::MergeFrom(const Nat44DNat_DNatConfig_IdentityMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addressed_interface().size() > 0) {

    addressed_interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addressed_interface_);
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.vrf_id() != 0) {
    set_vrf_id(from.vrf_id());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
}

void Nat44DNat_DNatConfig_IdentityMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44DNat_DNatConfig_IdentityMapping::CopyFrom(const Nat44DNat_DNatConfig_IdentityMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44DNat.DNatConfig.IdentityMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44DNat_DNatConfig_IdentityMapping::IsInitialized() const {
  return true;
}

void Nat44DNat_DNatConfig_IdentityMapping::Swap(Nat44DNat_DNatConfig_IdentityMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44DNat_DNatConfig_IdentityMapping::InternalSwap(Nat44DNat_DNatConfig_IdentityMapping* other) {
  using std::swap;
  addressed_interface_.Swap(&other->addressed_interface_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_address_.Swap(&other->ip_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(vrf_id_, other->vrf_id_);
  swap(port_, other->port_);
  swap(protocol_, other->protocol_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44DNat_DNatConfig_IdentityMapping::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44DNat_DNatConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44DNat_DNatConfig::kLabelFieldNumber;
const int Nat44DNat_DNatConfig::kStMappingsFieldNumber;
const int Nat44DNat_DNatConfig::kIdMappingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44DNat_DNatConfig::Nat44DNat_DNatConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44DNat.DNatConfig)
}
Nat44DNat_DNatConfig::Nat44DNat_DNatConfig(const Nat44DNat_DNatConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      st_mappings_(from.st_mappings_),
      id_mappings_(from.id_mappings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:nat.Nat44DNat.DNatConfig)
}

void Nat44DNat_DNatConfig::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Nat44DNat_DNatConfig::~Nat44DNat_DNatConfig() {
  // @@protoc_insertion_point(destructor:nat.Nat44DNat.DNatConfig)
  SharedDtor();
}

void Nat44DNat_DNatConfig::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Nat44DNat_DNatConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44DNat_DNatConfig::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44DNat_DNatConfig& Nat44DNat_DNatConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat_DNatConfig.base);
  return *internal_default_instance();
}


void Nat44DNat_DNatConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44DNat.DNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  st_mappings_.Clear();
  id_mappings_.Clear();
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Nat44DNat_DNatConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44DNat.DNatConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nat.Nat44DNat.DNatConfig.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_st_mappings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_id_mappings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44DNat.DNatConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44DNat.DNatConfig)
  return false;
#undef DO_
}

void Nat44DNat_DNatConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44DNat.DNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_mappings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->st_mappings(static_cast<int>(i)),
      output);
  }

  // repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_mappings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->id_mappings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44DNat.DNatConfig)
}

::google::protobuf::uint8* Nat44DNat_DNatConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44DNat.DNatConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nat.Nat44DNat.DNatConfig.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_mappings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->st_mappings(static_cast<int>(i)), deterministic, target);
  }

  // repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_mappings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->id_mappings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44DNat.DNatConfig)
  return target;
}

size_t Nat44DNat_DNatConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44DNat.DNatConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->st_mappings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->st_mappings(static_cast<int>(i)));
    }
  }

  // repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->id_mappings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->id_mappings(static_cast<int>(i)));
    }
  }

  // string label = 1;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44DNat_DNatConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44DNat.DNatConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44DNat_DNatConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44DNat_DNatConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44DNat.DNatConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44DNat.DNatConfig)
    MergeFrom(*source);
  }
}

void Nat44DNat_DNatConfig::MergeFrom(const Nat44DNat_DNatConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44DNat.DNatConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  st_mappings_.MergeFrom(from.st_mappings_);
  id_mappings_.MergeFrom(from.id_mappings_);
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void Nat44DNat_DNatConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44DNat.DNatConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44DNat_DNatConfig::CopyFrom(const Nat44DNat_DNatConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44DNat.DNatConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44DNat_DNatConfig::IsInitialized() const {
  return true;
}

void Nat44DNat_DNatConfig::Swap(Nat44DNat_DNatConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44DNat_DNatConfig::InternalSwap(Nat44DNat_DNatConfig* other) {
  using std::swap;
  CastToBase(&st_mappings_)->InternalSwap(CastToBase(&other->st_mappings_));
  CastToBase(&id_mappings_)->InternalSwap(CastToBase(&other->id_mappings_));
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44DNat_DNatConfig::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Nat44DNat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Nat44DNat::kDnatConfigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Nat44DNat::Nat44DNat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:nat.Nat44DNat)
}
Nat44DNat::Nat44DNat(const Nat44DNat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dnat_configs_(from.dnat_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:nat.Nat44DNat)
}

void Nat44DNat::SharedCtor() {
}

Nat44DNat::~Nat44DNat() {
  // @@protoc_insertion_point(destructor:nat.Nat44DNat)
  SharedDtor();
}

void Nat44DNat::SharedDtor() {
}

void Nat44DNat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Nat44DNat::descriptor() {
  ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Nat44DNat& Nat44DNat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::scc_info_Nat44DNat.base);
  return *internal_default_instance();
}


void Nat44DNat::Clear() {
// @@protoc_insertion_point(message_clear_start:nat.Nat44DNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dnat_configs_.Clear();
  _internal_metadata_.Clear();
}

bool Nat44DNat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nat.Nat44DNat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dnat_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nat.Nat44DNat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nat.Nat44DNat)
  return false;
#undef DO_
}

void Nat44DNat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nat.Nat44DNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dnat_configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->dnat_configs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nat.Nat44DNat)
}

::google::protobuf::uint8* Nat44DNat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nat.Nat44DNat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dnat_configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dnat_configs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nat.Nat44DNat)
  return target;
}

size_t Nat44DNat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nat.Nat44DNat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dnat_configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dnat_configs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nat44DNat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nat.Nat44DNat)
  GOOGLE_DCHECK_NE(&from, this);
  const Nat44DNat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Nat44DNat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nat.Nat44DNat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nat.Nat44DNat)
    MergeFrom(*source);
  }
}

void Nat44DNat::MergeFrom(const Nat44DNat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nat.Nat44DNat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dnat_configs_.MergeFrom(from.dnat_configs_);
}

void Nat44DNat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nat.Nat44DNat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nat44DNat::CopyFrom(const Nat44DNat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nat.Nat44DNat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nat44DNat::IsInitialized() const {
  return true;
}

void Nat44DNat::Swap(Nat44DNat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Nat44DNat::InternalSwap(Nat44DNat* other) {
  using std::swap;
  CastToBase(&dnat_configs_)->InternalSwap(CastToBase(&other->dnat_configs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Nat44DNat::GetMetadata() const {
  protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nat
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44Global_NatInterface* Arena::CreateMaybeMessage< ::nat::Nat44Global_NatInterface >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44Global_NatInterface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44Global_AddressPool* Arena::CreateMaybeMessage< ::nat::Nat44Global_AddressPool >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44Global_AddressPool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44Global_VirtualReassembly* Arena::CreateMaybeMessage< ::nat::Nat44Global_VirtualReassembly >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44Global_VirtualReassembly >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44Global* Arena::CreateMaybeMessage< ::nat::Nat44Global >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44Global >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44SNat_SNatConfig* Arena::CreateMaybeMessage< ::nat::Nat44SNat_SNatConfig >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44SNat_SNatConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44SNat* Arena::CreateMaybeMessage< ::nat::Nat44SNat >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44SNat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* Arena::CreateMaybeMessage< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44DNat_DNatConfig_StaticMapping* Arena::CreateMaybeMessage< ::nat::Nat44DNat_DNatConfig_StaticMapping >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44DNat_DNatConfig_StaticMapping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44DNat_DNatConfig_IdentityMapping* Arena::CreateMaybeMessage< ::nat::Nat44DNat_DNatConfig_IdentityMapping >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44DNat_DNatConfig_IdentityMapping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44DNat_DNatConfig* Arena::CreateMaybeMessage< ::nat::Nat44DNat_DNatConfig >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44DNat_DNatConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::nat::Nat44DNat* Arena::CreateMaybeMessage< ::nat::Nat44DNat >(Arena* arena) {
  return Arena::CreateInternal< ::nat::Nat44DNat >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
