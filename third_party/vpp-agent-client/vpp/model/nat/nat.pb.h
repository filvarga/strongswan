// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vpp/model/nat/nat.proto

#ifndef PROTOBUF_INCLUDED_vpp_2fmodel_2fnat_2fnat_2eproto
#define PROTOBUF_INCLUDED_vpp_2fmodel_2fnat_2fnat_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_vpp_2fmodel_2fnat_2fnat_2eproto 

namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_vpp_2fmodel_2fnat_2fnat_2eproto
namespace nat {
class Nat44DNat;
class Nat44DNatDefaultTypeInternal;
extern Nat44DNatDefaultTypeInternal _Nat44DNat_default_instance_;
class Nat44DNat_DNatConfig;
class Nat44DNat_DNatConfigDefaultTypeInternal;
extern Nat44DNat_DNatConfigDefaultTypeInternal _Nat44DNat_DNatConfig_default_instance_;
class Nat44DNat_DNatConfig_IdentityMapping;
class Nat44DNat_DNatConfig_IdentityMappingDefaultTypeInternal;
extern Nat44DNat_DNatConfig_IdentityMappingDefaultTypeInternal _Nat44DNat_DNatConfig_IdentityMapping_default_instance_;
class Nat44DNat_DNatConfig_StaticMapping;
class Nat44DNat_DNatConfig_StaticMappingDefaultTypeInternal;
extern Nat44DNat_DNatConfig_StaticMappingDefaultTypeInternal _Nat44DNat_DNatConfig_StaticMapping_default_instance_;
class Nat44DNat_DNatConfig_StaticMapping_LocalIP;
class Nat44DNat_DNatConfig_StaticMapping_LocalIPDefaultTypeInternal;
extern Nat44DNat_DNatConfig_StaticMapping_LocalIPDefaultTypeInternal _Nat44DNat_DNatConfig_StaticMapping_LocalIP_default_instance_;
class Nat44Global;
class Nat44GlobalDefaultTypeInternal;
extern Nat44GlobalDefaultTypeInternal _Nat44Global_default_instance_;
class Nat44Global_AddressPool;
class Nat44Global_AddressPoolDefaultTypeInternal;
extern Nat44Global_AddressPoolDefaultTypeInternal _Nat44Global_AddressPool_default_instance_;
class Nat44Global_NatInterface;
class Nat44Global_NatInterfaceDefaultTypeInternal;
extern Nat44Global_NatInterfaceDefaultTypeInternal _Nat44Global_NatInterface_default_instance_;
class Nat44Global_VirtualReassembly;
class Nat44Global_VirtualReassemblyDefaultTypeInternal;
extern Nat44Global_VirtualReassemblyDefaultTypeInternal _Nat44Global_VirtualReassembly_default_instance_;
class Nat44SNat;
class Nat44SNatDefaultTypeInternal;
extern Nat44SNatDefaultTypeInternal _Nat44SNat_default_instance_;
class Nat44SNat_SNatConfig;
class Nat44SNat_SNatConfigDefaultTypeInternal;
extern Nat44SNat_SNatConfigDefaultTypeInternal _Nat44SNat_SNatConfig_default_instance_;
}  // namespace nat
namespace google {
namespace protobuf {
template<> ::nat::Nat44DNat* Arena::CreateMaybeMessage<::nat::Nat44DNat>(Arena*);
template<> ::nat::Nat44DNat_DNatConfig* Arena::CreateMaybeMessage<::nat::Nat44DNat_DNatConfig>(Arena*);
template<> ::nat::Nat44DNat_DNatConfig_IdentityMapping* Arena::CreateMaybeMessage<::nat::Nat44DNat_DNatConfig_IdentityMapping>(Arena*);
template<> ::nat::Nat44DNat_DNatConfig_StaticMapping* Arena::CreateMaybeMessage<::nat::Nat44DNat_DNatConfig_StaticMapping>(Arena*);
template<> ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* Arena::CreateMaybeMessage<::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP>(Arena*);
template<> ::nat::Nat44Global* Arena::CreateMaybeMessage<::nat::Nat44Global>(Arena*);
template<> ::nat::Nat44Global_AddressPool* Arena::CreateMaybeMessage<::nat::Nat44Global_AddressPool>(Arena*);
template<> ::nat::Nat44Global_NatInterface* Arena::CreateMaybeMessage<::nat::Nat44Global_NatInterface>(Arena*);
template<> ::nat::Nat44Global_VirtualReassembly* Arena::CreateMaybeMessage<::nat::Nat44Global_VirtualReassembly>(Arena*);
template<> ::nat::Nat44SNat* Arena::CreateMaybeMessage<::nat::Nat44SNat>(Arena*);
template<> ::nat::Nat44SNat_SNatConfig* Arena::CreateMaybeMessage<::nat::Nat44SNat_SNatConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace nat {

enum Protocol {
  TCP = 0,
  UDP = 1,
  ICMP = 2,
  Protocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Protocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Protocol_IsValid(int value);
const Protocol Protocol_MIN = TCP;
const Protocol Protocol_MAX = ICMP;
const int Protocol_ARRAYSIZE = Protocol_MAX + 1;

const ::google::protobuf::EnumDescriptor* Protocol_descriptor();
inline const ::std::string& Protocol_Name(Protocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    Protocol_descriptor(), value);
}
inline bool Protocol_Parse(
    const ::std::string& name, Protocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Protocol>(
    Protocol_descriptor(), name, value);
}
enum TwiceNatMode {
  DISABLED = 0,
  ENABLED = 1,
  SELF = 2,
  TwiceNatMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TwiceNatMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TwiceNatMode_IsValid(int value);
const TwiceNatMode TwiceNatMode_MIN = DISABLED;
const TwiceNatMode TwiceNatMode_MAX = SELF;
const int TwiceNatMode_ARRAYSIZE = TwiceNatMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TwiceNatMode_descriptor();
inline const ::std::string& TwiceNatMode_Name(TwiceNatMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TwiceNatMode_descriptor(), value);
}
inline bool TwiceNatMode_Parse(
    const ::std::string& name, TwiceNatMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TwiceNatMode>(
    TwiceNatMode_descriptor(), name, value);
}
// ===================================================================

class Nat44Global_NatInterface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44Global.NatInterface) */ {
 public:
  Nat44Global_NatInterface();
  virtual ~Nat44Global_NatInterface();

  Nat44Global_NatInterface(const Nat44Global_NatInterface& from);

  inline Nat44Global_NatInterface& operator=(const Nat44Global_NatInterface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44Global_NatInterface(Nat44Global_NatInterface&& from) noexcept
    : Nat44Global_NatInterface() {
    *this = ::std::move(from);
  }

  inline Nat44Global_NatInterface& operator=(Nat44Global_NatInterface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44Global_NatInterface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44Global_NatInterface* internal_default_instance() {
    return reinterpret_cast<const Nat44Global_NatInterface*>(
               &_Nat44Global_NatInterface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Nat44Global_NatInterface* other);
  friend void swap(Nat44Global_NatInterface& a, Nat44Global_NatInterface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44Global_NatInterface* New() const final {
    return CreateMaybeMessage<Nat44Global_NatInterface>(NULL);
  }

  Nat44Global_NatInterface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44Global_NatInterface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44Global_NatInterface& from);
  void MergeFrom(const Nat44Global_NatInterface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44Global_NatInterface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bool is_inside = 2;
  void clear_is_inside();
  static const int kIsInsideFieldNumber = 2;
  bool is_inside() const;
  void set_is_inside(bool value);

  // bool output_feature = 3;
  void clear_output_feature();
  static const int kOutputFeatureFieldNumber = 3;
  bool output_feature() const;
  void set_output_feature(bool value);

  // @@protoc_insertion_point(class_scope:nat.Nat44Global.NatInterface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool is_inside_;
  bool output_feature_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44Global_AddressPool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44Global.AddressPool) */ {
 public:
  Nat44Global_AddressPool();
  virtual ~Nat44Global_AddressPool();

  Nat44Global_AddressPool(const Nat44Global_AddressPool& from);

  inline Nat44Global_AddressPool& operator=(const Nat44Global_AddressPool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44Global_AddressPool(Nat44Global_AddressPool&& from) noexcept
    : Nat44Global_AddressPool() {
    *this = ::std::move(from);
  }

  inline Nat44Global_AddressPool& operator=(Nat44Global_AddressPool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44Global_AddressPool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44Global_AddressPool* internal_default_instance() {
    return reinterpret_cast<const Nat44Global_AddressPool*>(
               &_Nat44Global_AddressPool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Nat44Global_AddressPool* other);
  friend void swap(Nat44Global_AddressPool& a, Nat44Global_AddressPool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44Global_AddressPool* New() const final {
    return CreateMaybeMessage<Nat44Global_AddressPool>(NULL);
  }

  Nat44Global_AddressPool* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44Global_AddressPool>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44Global_AddressPool& from);
  void MergeFrom(const Nat44Global_AddressPool& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44Global_AddressPool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string first_src_address = 1;
  void clear_first_src_address();
  static const int kFirstSrcAddressFieldNumber = 1;
  const ::std::string& first_src_address() const;
  void set_first_src_address(const ::std::string& value);
  #if LANG_CXX11
  void set_first_src_address(::std::string&& value);
  #endif
  void set_first_src_address(const char* value);
  void set_first_src_address(const char* value, size_t size);
  ::std::string* mutable_first_src_address();
  ::std::string* release_first_src_address();
  void set_allocated_first_src_address(::std::string* first_src_address);

  // string last_src_address = 2;
  void clear_last_src_address();
  static const int kLastSrcAddressFieldNumber = 2;
  const ::std::string& last_src_address() const;
  void set_last_src_address(const ::std::string& value);
  #if LANG_CXX11
  void set_last_src_address(::std::string&& value);
  #endif
  void set_last_src_address(const char* value);
  void set_last_src_address(const char* value, size_t size);
  ::std::string* mutable_last_src_address();
  ::std::string* release_last_src_address();
  void set_allocated_last_src_address(::std::string* last_src_address);

  // uint32 vrf_id = 3;
  void clear_vrf_id();
  static const int kVrfIdFieldNumber = 3;
  ::google::protobuf::uint32 vrf_id() const;
  void set_vrf_id(::google::protobuf::uint32 value);

  // bool twice_nat = 4;
  void clear_twice_nat();
  static const int kTwiceNatFieldNumber = 4;
  bool twice_nat() const;
  void set_twice_nat(bool value);

  // @@protoc_insertion_point(class_scope:nat.Nat44Global.AddressPool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr first_src_address_;
  ::google::protobuf::internal::ArenaStringPtr last_src_address_;
  ::google::protobuf::uint32 vrf_id_;
  bool twice_nat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44Global_VirtualReassembly : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44Global.VirtualReassembly) */ {
 public:
  Nat44Global_VirtualReassembly();
  virtual ~Nat44Global_VirtualReassembly();

  Nat44Global_VirtualReassembly(const Nat44Global_VirtualReassembly& from);

  inline Nat44Global_VirtualReassembly& operator=(const Nat44Global_VirtualReassembly& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44Global_VirtualReassembly(Nat44Global_VirtualReassembly&& from) noexcept
    : Nat44Global_VirtualReassembly() {
    *this = ::std::move(from);
  }

  inline Nat44Global_VirtualReassembly& operator=(Nat44Global_VirtualReassembly&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44Global_VirtualReassembly& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44Global_VirtualReassembly* internal_default_instance() {
    return reinterpret_cast<const Nat44Global_VirtualReassembly*>(
               &_Nat44Global_VirtualReassembly_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Nat44Global_VirtualReassembly* other);
  friend void swap(Nat44Global_VirtualReassembly& a, Nat44Global_VirtualReassembly& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44Global_VirtualReassembly* New() const final {
    return CreateMaybeMessage<Nat44Global_VirtualReassembly>(NULL);
  }

  Nat44Global_VirtualReassembly* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44Global_VirtualReassembly>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44Global_VirtualReassembly& from);
  void MergeFrom(const Nat44Global_VirtualReassembly& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44Global_VirtualReassembly* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 timeout = 1;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 1;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // uint32 max_reass = 2;
  void clear_max_reass();
  static const int kMaxReassFieldNumber = 2;
  ::google::protobuf::uint32 max_reass() const;
  void set_max_reass(::google::protobuf::uint32 value);

  // uint32 max_frag = 3;
  void clear_max_frag();
  static const int kMaxFragFieldNumber = 3;
  ::google::protobuf::uint32 max_frag() const;
  void set_max_frag(::google::protobuf::uint32 value);

  // bool drop_frag = 4;
  void clear_drop_frag();
  static const int kDropFragFieldNumber = 4;
  bool drop_frag() const;
  void set_drop_frag(bool value);

  // @@protoc_insertion_point(class_scope:nat.Nat44Global.VirtualReassembly)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 timeout_;
  ::google::protobuf::uint32 max_reass_;
  ::google::protobuf::uint32 max_frag_;
  bool drop_frag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44Global : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44Global) */ {
 public:
  Nat44Global();
  virtual ~Nat44Global();

  Nat44Global(const Nat44Global& from);

  inline Nat44Global& operator=(const Nat44Global& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44Global(Nat44Global&& from) noexcept
    : Nat44Global() {
    *this = ::std::move(from);
  }

  inline Nat44Global& operator=(Nat44Global&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44Global& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44Global* internal_default_instance() {
    return reinterpret_cast<const Nat44Global*>(
               &_Nat44Global_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Nat44Global* other);
  friend void swap(Nat44Global& a, Nat44Global& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44Global* New() const final {
    return CreateMaybeMessage<Nat44Global>(NULL);
  }

  Nat44Global* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44Global>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44Global& from);
  void MergeFrom(const Nat44Global& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44Global* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Nat44Global_NatInterface NatInterface;
  typedef Nat44Global_AddressPool AddressPool;
  typedef Nat44Global_VirtualReassembly VirtualReassembly;

  // accessors -------------------------------------------------------

  // repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
  int nat_interfaces_size() const;
  void clear_nat_interfaces();
  static const int kNatInterfacesFieldNumber = 3;
  ::nat::Nat44Global_NatInterface* mutable_nat_interfaces(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_NatInterface >*
      mutable_nat_interfaces();
  const ::nat::Nat44Global_NatInterface& nat_interfaces(int index) const;
  ::nat::Nat44Global_NatInterface* add_nat_interfaces();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_NatInterface >&
      nat_interfaces() const;

  // repeated .nat.Nat44Global.AddressPool address_pools = 5;
  int address_pools_size() const;
  void clear_address_pools();
  static const int kAddressPoolsFieldNumber = 5;
  ::nat::Nat44Global_AddressPool* mutable_address_pools(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_AddressPool >*
      mutable_address_pools();
  const ::nat::Nat44Global_AddressPool& address_pools(int index) const;
  ::nat::Nat44Global_AddressPool* add_address_pools();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_AddressPool >&
      address_pools() const;

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
  bool has_virtual_reassembly_ipv4() const;
  void clear_virtual_reassembly_ipv4();
  static const int kVirtualReassemblyIpv4FieldNumber = 6;
  private:
  const ::nat::Nat44Global_VirtualReassembly& _internal_virtual_reassembly_ipv4() const;
  public:
  const ::nat::Nat44Global_VirtualReassembly& virtual_reassembly_ipv4() const;
  ::nat::Nat44Global_VirtualReassembly* release_virtual_reassembly_ipv4();
  ::nat::Nat44Global_VirtualReassembly* mutable_virtual_reassembly_ipv4();
  void set_allocated_virtual_reassembly_ipv4(::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv4);

  // .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
  bool has_virtual_reassembly_ipv6() const;
  void clear_virtual_reassembly_ipv6();
  static const int kVirtualReassemblyIpv6FieldNumber = 7;
  private:
  const ::nat::Nat44Global_VirtualReassembly& _internal_virtual_reassembly_ipv6() const;
  public:
  const ::nat::Nat44Global_VirtualReassembly& virtual_reassembly_ipv6() const;
  ::nat::Nat44Global_VirtualReassembly* release_virtual_reassembly_ipv6();
  ::nat::Nat44Global_VirtualReassembly* mutable_virtual_reassembly_ipv6();
  void set_allocated_virtual_reassembly_ipv6(::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv6);

  // bool forwarding = 2;
  void clear_forwarding();
  static const int kForwardingFieldNumber = 2;
  bool forwarding() const;
  void set_forwarding(bool value);

  // @@protoc_insertion_point(class_scope:nat.Nat44Global)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_NatInterface > nat_interfaces_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_AddressPool > address_pools_;
  ::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv4_;
  ::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv6_;
  bool forwarding_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44SNat_SNatConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44SNat.SNatConfig) */ {
 public:
  Nat44SNat_SNatConfig();
  virtual ~Nat44SNat_SNatConfig();

  Nat44SNat_SNatConfig(const Nat44SNat_SNatConfig& from);

  inline Nat44SNat_SNatConfig& operator=(const Nat44SNat_SNatConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44SNat_SNatConfig(Nat44SNat_SNatConfig&& from) noexcept
    : Nat44SNat_SNatConfig() {
    *this = ::std::move(from);
  }

  inline Nat44SNat_SNatConfig& operator=(Nat44SNat_SNatConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44SNat_SNatConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44SNat_SNatConfig* internal_default_instance() {
    return reinterpret_cast<const Nat44SNat_SNatConfig*>(
               &_Nat44SNat_SNatConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Nat44SNat_SNatConfig* other);
  friend void swap(Nat44SNat_SNatConfig& a, Nat44SNat_SNatConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44SNat_SNatConfig* New() const final {
    return CreateMaybeMessage<Nat44SNat_SNatConfig>(NULL);
  }

  Nat44SNat_SNatConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44SNat_SNatConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44SNat_SNatConfig& from);
  void MergeFrom(const Nat44SNat_SNatConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44SNat_SNatConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // @@protoc_insertion_point(class_scope:nat.Nat44SNat.SNatConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44SNat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44SNat) */ {
 public:
  Nat44SNat();
  virtual ~Nat44SNat();

  Nat44SNat(const Nat44SNat& from);

  inline Nat44SNat& operator=(const Nat44SNat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44SNat(Nat44SNat&& from) noexcept
    : Nat44SNat() {
    *this = ::std::move(from);
  }

  inline Nat44SNat& operator=(Nat44SNat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44SNat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44SNat* internal_default_instance() {
    return reinterpret_cast<const Nat44SNat*>(
               &_Nat44SNat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Nat44SNat* other);
  friend void swap(Nat44SNat& a, Nat44SNat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44SNat* New() const final {
    return CreateMaybeMessage<Nat44SNat>(NULL);
  }

  Nat44SNat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44SNat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44SNat& from);
  void MergeFrom(const Nat44SNat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44SNat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Nat44SNat_SNatConfig SNatConfig;

  // accessors -------------------------------------------------------

  // repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
  int snat_configs_size() const;
  void clear_snat_configs();
  static const int kSnatConfigsFieldNumber = 1;
  ::nat::Nat44SNat_SNatConfig* mutable_snat_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44SNat_SNatConfig >*
      mutable_snat_configs();
  const ::nat::Nat44SNat_SNatConfig& snat_configs(int index) const;
  ::nat::Nat44SNat_SNatConfig* add_snat_configs();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44SNat_SNatConfig >&
      snat_configs() const;

  // @@protoc_insertion_point(class_scope:nat.Nat44SNat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44SNat_SNatConfig > snat_configs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44DNat_DNatConfig_StaticMapping_LocalIP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP) */ {
 public:
  Nat44DNat_DNatConfig_StaticMapping_LocalIP();
  virtual ~Nat44DNat_DNatConfig_StaticMapping_LocalIP();

  Nat44DNat_DNatConfig_StaticMapping_LocalIP(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from);

  inline Nat44DNat_DNatConfig_StaticMapping_LocalIP& operator=(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44DNat_DNatConfig_StaticMapping_LocalIP(Nat44DNat_DNatConfig_StaticMapping_LocalIP&& from) noexcept
    : Nat44DNat_DNatConfig_StaticMapping_LocalIP() {
    *this = ::std::move(from);
  }

  inline Nat44DNat_DNatConfig_StaticMapping_LocalIP& operator=(Nat44DNat_DNatConfig_StaticMapping_LocalIP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44DNat_DNatConfig_StaticMapping_LocalIP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44DNat_DNatConfig_StaticMapping_LocalIP* internal_default_instance() {
    return reinterpret_cast<const Nat44DNat_DNatConfig_StaticMapping_LocalIP*>(
               &_Nat44DNat_DNatConfig_StaticMapping_LocalIP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Nat44DNat_DNatConfig_StaticMapping_LocalIP* other);
  friend void swap(Nat44DNat_DNatConfig_StaticMapping_LocalIP& a, Nat44DNat_DNatConfig_StaticMapping_LocalIP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44DNat_DNatConfig_StaticMapping_LocalIP* New() const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_StaticMapping_LocalIP>(NULL);
  }

  Nat44DNat_DNatConfig_StaticMapping_LocalIP* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_StaticMapping_LocalIP>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from);
  void MergeFrom(const Nat44DNat_DNatConfig_StaticMapping_LocalIP& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44DNat_DNatConfig_StaticMapping_LocalIP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string local_ip = 1;
  void clear_local_ip();
  static const int kLocalIpFieldNumber = 1;
  const ::std::string& local_ip() const;
  void set_local_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_local_ip(::std::string&& value);
  #endif
  void set_local_ip(const char* value);
  void set_local_ip(const char* value, size_t size);
  ::std::string* mutable_local_ip();
  ::std::string* release_local_ip();
  void set_allocated_local_ip(::std::string* local_ip);

  // uint32 probability = 2;
  void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  ::google::protobuf::uint32 probability() const;
  void set_probability(::google::protobuf::uint32 value);

  // uint32 local_port = 3;
  void clear_local_port();
  static const int kLocalPortFieldNumber = 3;
  ::google::protobuf::uint32 local_port() const;
  void set_local_port(::google::protobuf::uint32 value);

  // uint32 vrf_id = 4;
  void clear_vrf_id();
  static const int kVrfIdFieldNumber = 4;
  ::google::protobuf::uint32 vrf_id() const;
  void set_vrf_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr local_ip_;
  ::google::protobuf::uint32 probability_;
  ::google::protobuf::uint32 local_port_;
  ::google::protobuf::uint32 vrf_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44DNat_DNatConfig_StaticMapping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44DNat.DNatConfig.StaticMapping) */ {
 public:
  Nat44DNat_DNatConfig_StaticMapping();
  virtual ~Nat44DNat_DNatConfig_StaticMapping();

  Nat44DNat_DNatConfig_StaticMapping(const Nat44DNat_DNatConfig_StaticMapping& from);

  inline Nat44DNat_DNatConfig_StaticMapping& operator=(const Nat44DNat_DNatConfig_StaticMapping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44DNat_DNatConfig_StaticMapping(Nat44DNat_DNatConfig_StaticMapping&& from) noexcept
    : Nat44DNat_DNatConfig_StaticMapping() {
    *this = ::std::move(from);
  }

  inline Nat44DNat_DNatConfig_StaticMapping& operator=(Nat44DNat_DNatConfig_StaticMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44DNat_DNatConfig_StaticMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44DNat_DNatConfig_StaticMapping* internal_default_instance() {
    return reinterpret_cast<const Nat44DNat_DNatConfig_StaticMapping*>(
               &_Nat44DNat_DNatConfig_StaticMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Nat44DNat_DNatConfig_StaticMapping* other);
  friend void swap(Nat44DNat_DNatConfig_StaticMapping& a, Nat44DNat_DNatConfig_StaticMapping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44DNat_DNatConfig_StaticMapping* New() const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_StaticMapping>(NULL);
  }

  Nat44DNat_DNatConfig_StaticMapping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_StaticMapping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44DNat_DNatConfig_StaticMapping& from);
  void MergeFrom(const Nat44DNat_DNatConfig_StaticMapping& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44DNat_DNatConfig_StaticMapping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Nat44DNat_DNatConfig_StaticMapping_LocalIP LocalIP;

  // accessors -------------------------------------------------------

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
  int local_ips_size() const;
  void clear_local_ips();
  static const int kLocalIpsFieldNumber = 5;
  ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* mutable_local_ips(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >*
      mutable_local_ips();
  const ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP& local_ips(int index) const;
  ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* add_local_ips();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >&
      local_ips() const;

  // string external_interface = 2;
  void clear_external_interface();
  static const int kExternalInterfaceFieldNumber = 2;
  const ::std::string& external_interface() const;
  void set_external_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_external_interface(::std::string&& value);
  #endif
  void set_external_interface(const char* value);
  void set_external_interface(const char* value, size_t size);
  ::std::string* mutable_external_interface();
  ::std::string* release_external_interface();
  void set_allocated_external_interface(::std::string* external_interface);

  // string external_ip = 3;
  void clear_external_ip();
  static const int kExternalIpFieldNumber = 3;
  const ::std::string& external_ip() const;
  void set_external_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_external_ip(::std::string&& value);
  #endif
  void set_external_ip(const char* value);
  void set_external_ip(const char* value, size_t size);
  ::std::string* mutable_external_ip();
  ::std::string* release_external_ip();
  void set_allocated_external_ip(::std::string* external_ip);

  // uint32 external_port = 4;
  void clear_external_port();
  static const int kExternalPortFieldNumber = 4;
  ::google::protobuf::uint32 external_port() const;
  void set_external_port(::google::protobuf::uint32 value);

  // .nat.Protocol protocol = 6;
  void clear_protocol();
  static const int kProtocolFieldNumber = 6;
  ::nat::Protocol protocol() const;
  void set_protocol(::nat::Protocol value);

  // .nat.TwiceNatMode twice_nat = 7;
  void clear_twice_nat();
  static const int kTwiceNatFieldNumber = 7;
  ::nat::TwiceNatMode twice_nat() const;
  void set_twice_nat(::nat::TwiceNatMode value);

  // @@protoc_insertion_point(class_scope:nat.Nat44DNat.DNatConfig.StaticMapping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP > local_ips_;
  ::google::protobuf::internal::ArenaStringPtr external_interface_;
  ::google::protobuf::internal::ArenaStringPtr external_ip_;
  ::google::protobuf::uint32 external_port_;
  int protocol_;
  int twice_nat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44DNat_DNatConfig_IdentityMapping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44DNat.DNatConfig.IdentityMapping) */ {
 public:
  Nat44DNat_DNatConfig_IdentityMapping();
  virtual ~Nat44DNat_DNatConfig_IdentityMapping();

  Nat44DNat_DNatConfig_IdentityMapping(const Nat44DNat_DNatConfig_IdentityMapping& from);

  inline Nat44DNat_DNatConfig_IdentityMapping& operator=(const Nat44DNat_DNatConfig_IdentityMapping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44DNat_DNatConfig_IdentityMapping(Nat44DNat_DNatConfig_IdentityMapping&& from) noexcept
    : Nat44DNat_DNatConfig_IdentityMapping() {
    *this = ::std::move(from);
  }

  inline Nat44DNat_DNatConfig_IdentityMapping& operator=(Nat44DNat_DNatConfig_IdentityMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44DNat_DNatConfig_IdentityMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44DNat_DNatConfig_IdentityMapping* internal_default_instance() {
    return reinterpret_cast<const Nat44DNat_DNatConfig_IdentityMapping*>(
               &_Nat44DNat_DNatConfig_IdentityMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Nat44DNat_DNatConfig_IdentityMapping* other);
  friend void swap(Nat44DNat_DNatConfig_IdentityMapping& a, Nat44DNat_DNatConfig_IdentityMapping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44DNat_DNatConfig_IdentityMapping* New() const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_IdentityMapping>(NULL);
  }

  Nat44DNat_DNatConfig_IdentityMapping* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig_IdentityMapping>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44DNat_DNatConfig_IdentityMapping& from);
  void MergeFrom(const Nat44DNat_DNatConfig_IdentityMapping& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44DNat_DNatConfig_IdentityMapping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string addressed_interface = 2;
  void clear_addressed_interface();
  static const int kAddressedInterfaceFieldNumber = 2;
  const ::std::string& addressed_interface() const;
  void set_addressed_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_addressed_interface(::std::string&& value);
  #endif
  void set_addressed_interface(const char* value);
  void set_addressed_interface(const char* value, size_t size);
  ::std::string* mutable_addressed_interface();
  ::std::string* release_addressed_interface();
  void set_allocated_addressed_interface(::std::string* addressed_interface);

  // string ip_address = 3;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 3;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_address(::std::string&& value);
  #endif
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // uint32 vrf_id = 1;
  void clear_vrf_id();
  static const int kVrfIdFieldNumber = 1;
  ::google::protobuf::uint32 vrf_id() const;
  void set_vrf_id(::google::protobuf::uint32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // .nat.Protocol protocol = 5;
  void clear_protocol();
  static const int kProtocolFieldNumber = 5;
  ::nat::Protocol protocol() const;
  void set_protocol(::nat::Protocol value);

  // @@protoc_insertion_point(class_scope:nat.Nat44DNat.DNatConfig.IdentityMapping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr addressed_interface_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  ::google::protobuf::uint32 vrf_id_;
  ::google::protobuf::uint32 port_;
  int protocol_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44DNat_DNatConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44DNat.DNatConfig) */ {
 public:
  Nat44DNat_DNatConfig();
  virtual ~Nat44DNat_DNatConfig();

  Nat44DNat_DNatConfig(const Nat44DNat_DNatConfig& from);

  inline Nat44DNat_DNatConfig& operator=(const Nat44DNat_DNatConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44DNat_DNatConfig(Nat44DNat_DNatConfig&& from) noexcept
    : Nat44DNat_DNatConfig() {
    *this = ::std::move(from);
  }

  inline Nat44DNat_DNatConfig& operator=(Nat44DNat_DNatConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44DNat_DNatConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44DNat_DNatConfig* internal_default_instance() {
    return reinterpret_cast<const Nat44DNat_DNatConfig*>(
               &_Nat44DNat_DNatConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Nat44DNat_DNatConfig* other);
  friend void swap(Nat44DNat_DNatConfig& a, Nat44DNat_DNatConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44DNat_DNatConfig* New() const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig>(NULL);
  }

  Nat44DNat_DNatConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44DNat_DNatConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44DNat_DNatConfig& from);
  void MergeFrom(const Nat44DNat_DNatConfig& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44DNat_DNatConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Nat44DNat_DNatConfig_StaticMapping StaticMapping;
  typedef Nat44DNat_DNatConfig_IdentityMapping IdentityMapping;

  // accessors -------------------------------------------------------

  // repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
  int st_mappings_size() const;
  void clear_st_mappings();
  static const int kStMappingsFieldNumber = 4;
  ::nat::Nat44DNat_DNatConfig_StaticMapping* mutable_st_mappings(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping >*
      mutable_st_mappings();
  const ::nat::Nat44DNat_DNatConfig_StaticMapping& st_mappings(int index) const;
  ::nat::Nat44DNat_DNatConfig_StaticMapping* add_st_mappings();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping >&
      st_mappings() const;

  // repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
  int id_mappings_size() const;
  void clear_id_mappings();
  static const int kIdMappingsFieldNumber = 6;
  ::nat::Nat44DNat_DNatConfig_IdentityMapping* mutable_id_mappings(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_IdentityMapping >*
      mutable_id_mappings();
  const ::nat::Nat44DNat_DNatConfig_IdentityMapping& id_mappings(int index) const;
  ::nat::Nat44DNat_DNatConfig_IdentityMapping* add_id_mappings();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_IdentityMapping >&
      id_mappings() const;

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // @@protoc_insertion_point(class_scope:nat.Nat44DNat.DNatConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping > st_mappings_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_IdentityMapping > id_mappings_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Nat44DNat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:nat.Nat44DNat) */ {
 public:
  Nat44DNat();
  virtual ~Nat44DNat();

  Nat44DNat(const Nat44DNat& from);

  inline Nat44DNat& operator=(const Nat44DNat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nat44DNat(Nat44DNat&& from) noexcept
    : Nat44DNat() {
    *this = ::std::move(from);
  }

  inline Nat44DNat& operator=(Nat44DNat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Nat44DNat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nat44DNat* internal_default_instance() {
    return reinterpret_cast<const Nat44DNat*>(
               &_Nat44DNat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Nat44DNat* other);
  friend void swap(Nat44DNat& a, Nat44DNat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nat44DNat* New() const final {
    return CreateMaybeMessage<Nat44DNat>(NULL);
  }

  Nat44DNat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Nat44DNat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Nat44DNat& from);
  void MergeFrom(const Nat44DNat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Nat44DNat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Nat44DNat_DNatConfig DNatConfig;

  // accessors -------------------------------------------------------

  // repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
  int dnat_configs_size() const;
  void clear_dnat_configs();
  static const int kDnatConfigsFieldNumber = 1;
  ::nat::Nat44DNat_DNatConfig* mutable_dnat_configs(int index);
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >*
      mutable_dnat_configs();
  const ::nat::Nat44DNat_DNatConfig& dnat_configs(int index) const;
  ::nat::Nat44DNat_DNatConfig* add_dnat_configs();
  const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >&
      dnat_configs() const;

  // @@protoc_insertion_point(class_scope:nat.Nat44DNat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig > dnat_configs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_vpp_2fmodel_2fnat_2fnat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Nat44Global_NatInterface

// string name = 1;
inline void Nat44Global_NatInterface::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44Global_NatInterface::name() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.NatInterface.name)
  return name_.GetNoArena();
}
inline void Nat44Global_NatInterface::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44Global.NatInterface.name)
}
#if LANG_CXX11
inline void Nat44Global_NatInterface::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44Global.NatInterface.name)
}
#endif
inline void Nat44Global_NatInterface::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44Global.NatInterface.name)
}
inline void Nat44Global_NatInterface::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44Global.NatInterface.name)
}
inline ::std::string* Nat44Global_NatInterface::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.NatInterface.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44Global_NatInterface::release_name() {
  // @@protoc_insertion_point(field_release:nat.Nat44Global.NatInterface.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44Global_NatInterface::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44Global.NatInterface.name)
}

// bool is_inside = 2;
inline void Nat44Global_NatInterface::clear_is_inside() {
  is_inside_ = false;
}
inline bool Nat44Global_NatInterface::is_inside() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.NatInterface.is_inside)
  return is_inside_;
}
inline void Nat44Global_NatInterface::set_is_inside(bool value) {
  
  is_inside_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.NatInterface.is_inside)
}

// bool output_feature = 3;
inline void Nat44Global_NatInterface::clear_output_feature() {
  output_feature_ = false;
}
inline bool Nat44Global_NatInterface::output_feature() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.NatInterface.output_feature)
  return output_feature_;
}
inline void Nat44Global_NatInterface::set_output_feature(bool value) {
  
  output_feature_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.NatInterface.output_feature)
}

// -------------------------------------------------------------------

// Nat44Global_AddressPool

// string first_src_address = 1;
inline void Nat44Global_AddressPool::clear_first_src_address() {
  first_src_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44Global_AddressPool::first_src_address() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.AddressPool.first_src_address)
  return first_src_address_.GetNoArena();
}
inline void Nat44Global_AddressPool::set_first_src_address(const ::std::string& value) {
  
  first_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44Global.AddressPool.first_src_address)
}
#if LANG_CXX11
inline void Nat44Global_AddressPool::set_first_src_address(::std::string&& value) {
  
  first_src_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44Global.AddressPool.first_src_address)
}
#endif
inline void Nat44Global_AddressPool::set_first_src_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44Global.AddressPool.first_src_address)
}
inline void Nat44Global_AddressPool::set_first_src_address(const char* value, size_t size) {
  
  first_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44Global.AddressPool.first_src_address)
}
inline ::std::string* Nat44Global_AddressPool::mutable_first_src_address() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.AddressPool.first_src_address)
  return first_src_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44Global_AddressPool::release_first_src_address() {
  // @@protoc_insertion_point(field_release:nat.Nat44Global.AddressPool.first_src_address)
  
  return first_src_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44Global_AddressPool::set_allocated_first_src_address(::std::string* first_src_address) {
  if (first_src_address != NULL) {
    
  } else {
    
  }
  first_src_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_src_address);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44Global.AddressPool.first_src_address)
}

// string last_src_address = 2;
inline void Nat44Global_AddressPool::clear_last_src_address() {
  last_src_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44Global_AddressPool::last_src_address() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.AddressPool.last_src_address)
  return last_src_address_.GetNoArena();
}
inline void Nat44Global_AddressPool::set_last_src_address(const ::std::string& value) {
  
  last_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44Global.AddressPool.last_src_address)
}
#if LANG_CXX11
inline void Nat44Global_AddressPool::set_last_src_address(::std::string&& value) {
  
  last_src_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44Global.AddressPool.last_src_address)
}
#endif
inline void Nat44Global_AddressPool::set_last_src_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44Global.AddressPool.last_src_address)
}
inline void Nat44Global_AddressPool::set_last_src_address(const char* value, size_t size) {
  
  last_src_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44Global.AddressPool.last_src_address)
}
inline ::std::string* Nat44Global_AddressPool::mutable_last_src_address() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.AddressPool.last_src_address)
  return last_src_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44Global_AddressPool::release_last_src_address() {
  // @@protoc_insertion_point(field_release:nat.Nat44Global.AddressPool.last_src_address)
  
  return last_src_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44Global_AddressPool::set_allocated_last_src_address(::std::string* last_src_address) {
  if (last_src_address != NULL) {
    
  } else {
    
  }
  last_src_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_src_address);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44Global.AddressPool.last_src_address)
}

// uint32 vrf_id = 3;
inline void Nat44Global_AddressPool::clear_vrf_id() {
  vrf_id_ = 0u;
}
inline ::google::protobuf::uint32 Nat44Global_AddressPool::vrf_id() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.AddressPool.vrf_id)
  return vrf_id_;
}
inline void Nat44Global_AddressPool::set_vrf_id(::google::protobuf::uint32 value) {
  
  vrf_id_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.AddressPool.vrf_id)
}

// bool twice_nat = 4;
inline void Nat44Global_AddressPool::clear_twice_nat() {
  twice_nat_ = false;
}
inline bool Nat44Global_AddressPool::twice_nat() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.AddressPool.twice_nat)
  return twice_nat_;
}
inline void Nat44Global_AddressPool::set_twice_nat(bool value) {
  
  twice_nat_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.AddressPool.twice_nat)
}

// -------------------------------------------------------------------

// Nat44Global_VirtualReassembly

// uint32 timeout = 1;
inline void Nat44Global_VirtualReassembly::clear_timeout() {
  timeout_ = 0u;
}
inline ::google::protobuf::uint32 Nat44Global_VirtualReassembly::timeout() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.VirtualReassembly.timeout)
  return timeout_;
}
inline void Nat44Global_VirtualReassembly::set_timeout(::google::protobuf::uint32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.VirtualReassembly.timeout)
}

// uint32 max_reass = 2;
inline void Nat44Global_VirtualReassembly::clear_max_reass() {
  max_reass_ = 0u;
}
inline ::google::protobuf::uint32 Nat44Global_VirtualReassembly::max_reass() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.VirtualReassembly.max_reass)
  return max_reass_;
}
inline void Nat44Global_VirtualReassembly::set_max_reass(::google::protobuf::uint32 value) {
  
  max_reass_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.VirtualReassembly.max_reass)
}

// uint32 max_frag = 3;
inline void Nat44Global_VirtualReassembly::clear_max_frag() {
  max_frag_ = 0u;
}
inline ::google::protobuf::uint32 Nat44Global_VirtualReassembly::max_frag() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.VirtualReassembly.max_frag)
  return max_frag_;
}
inline void Nat44Global_VirtualReassembly::set_max_frag(::google::protobuf::uint32 value) {
  
  max_frag_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.VirtualReassembly.max_frag)
}

// bool drop_frag = 4;
inline void Nat44Global_VirtualReassembly::clear_drop_frag() {
  drop_frag_ = false;
}
inline bool Nat44Global_VirtualReassembly::drop_frag() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.VirtualReassembly.drop_frag)
  return drop_frag_;
}
inline void Nat44Global_VirtualReassembly::set_drop_frag(bool value) {
  
  drop_frag_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.VirtualReassembly.drop_frag)
}

// -------------------------------------------------------------------

// Nat44Global

// bool forwarding = 2;
inline void Nat44Global::clear_forwarding() {
  forwarding_ = false;
}
inline bool Nat44Global::forwarding() const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.forwarding)
  return forwarding_;
}
inline void Nat44Global::set_forwarding(bool value) {
  
  forwarding_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44Global.forwarding)
}

// repeated .nat.Nat44Global.NatInterface nat_interfaces = 3;
inline int Nat44Global::nat_interfaces_size() const {
  return nat_interfaces_.size();
}
inline void Nat44Global::clear_nat_interfaces() {
  nat_interfaces_.Clear();
}
inline ::nat::Nat44Global_NatInterface* Nat44Global::mutable_nat_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.nat_interfaces)
  return nat_interfaces_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_NatInterface >*
Nat44Global::mutable_nat_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44Global.nat_interfaces)
  return &nat_interfaces_;
}
inline const ::nat::Nat44Global_NatInterface& Nat44Global::nat_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.nat_interfaces)
  return nat_interfaces_.Get(index);
}
inline ::nat::Nat44Global_NatInterface* Nat44Global::add_nat_interfaces() {
  // @@protoc_insertion_point(field_add:nat.Nat44Global.nat_interfaces)
  return nat_interfaces_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_NatInterface >&
Nat44Global::nat_interfaces() const {
  // @@protoc_insertion_point(field_list:nat.Nat44Global.nat_interfaces)
  return nat_interfaces_;
}

// repeated .nat.Nat44Global.AddressPool address_pools = 5;
inline int Nat44Global::address_pools_size() const {
  return address_pools_.size();
}
inline void Nat44Global::clear_address_pools() {
  address_pools_.Clear();
}
inline ::nat::Nat44Global_AddressPool* Nat44Global::mutable_address_pools(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.address_pools)
  return address_pools_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_AddressPool >*
Nat44Global::mutable_address_pools() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44Global.address_pools)
  return &address_pools_;
}
inline const ::nat::Nat44Global_AddressPool& Nat44Global::address_pools(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44Global.address_pools)
  return address_pools_.Get(index);
}
inline ::nat::Nat44Global_AddressPool* Nat44Global::add_address_pools() {
  // @@protoc_insertion_point(field_add:nat.Nat44Global.address_pools)
  return address_pools_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44Global_AddressPool >&
Nat44Global::address_pools() const {
  // @@protoc_insertion_point(field_list:nat.Nat44Global.address_pools)
  return address_pools_;
}

// .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv4 = 6;
inline bool Nat44Global::has_virtual_reassembly_ipv4() const {
  return this != internal_default_instance() && virtual_reassembly_ipv4_ != NULL;
}
inline void Nat44Global::clear_virtual_reassembly_ipv4() {
  if (GetArenaNoVirtual() == NULL && virtual_reassembly_ipv4_ != NULL) {
    delete virtual_reassembly_ipv4_;
  }
  virtual_reassembly_ipv4_ = NULL;
}
inline const ::nat::Nat44Global_VirtualReassembly& Nat44Global::_internal_virtual_reassembly_ipv4() const {
  return *virtual_reassembly_ipv4_;
}
inline const ::nat::Nat44Global_VirtualReassembly& Nat44Global::virtual_reassembly_ipv4() const {
  const ::nat::Nat44Global_VirtualReassembly* p = virtual_reassembly_ipv4_;
  // @@protoc_insertion_point(field_get:nat.Nat44Global.virtual_reassembly_ipv4)
  return p != NULL ? *p : *reinterpret_cast<const ::nat::Nat44Global_VirtualReassembly*>(
      &::nat::_Nat44Global_VirtualReassembly_default_instance_);
}
inline ::nat::Nat44Global_VirtualReassembly* Nat44Global::release_virtual_reassembly_ipv4() {
  // @@protoc_insertion_point(field_release:nat.Nat44Global.virtual_reassembly_ipv4)
  
  ::nat::Nat44Global_VirtualReassembly* temp = virtual_reassembly_ipv4_;
  virtual_reassembly_ipv4_ = NULL;
  return temp;
}
inline ::nat::Nat44Global_VirtualReassembly* Nat44Global::mutable_virtual_reassembly_ipv4() {
  
  if (virtual_reassembly_ipv4_ == NULL) {
    auto* p = CreateMaybeMessage<::nat::Nat44Global_VirtualReassembly>(GetArenaNoVirtual());
    virtual_reassembly_ipv4_ = p;
  }
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.virtual_reassembly_ipv4)
  return virtual_reassembly_ipv4_;
}
inline void Nat44Global::set_allocated_virtual_reassembly_ipv4(::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete virtual_reassembly_ipv4_;
  }
  if (virtual_reassembly_ipv4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      virtual_reassembly_ipv4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, virtual_reassembly_ipv4, submessage_arena);
    }
    
  } else {
    
  }
  virtual_reassembly_ipv4_ = virtual_reassembly_ipv4;
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44Global.virtual_reassembly_ipv4)
}

// .nat.Nat44Global.VirtualReassembly virtual_reassembly_ipv6 = 7;
inline bool Nat44Global::has_virtual_reassembly_ipv6() const {
  return this != internal_default_instance() && virtual_reassembly_ipv6_ != NULL;
}
inline void Nat44Global::clear_virtual_reassembly_ipv6() {
  if (GetArenaNoVirtual() == NULL && virtual_reassembly_ipv6_ != NULL) {
    delete virtual_reassembly_ipv6_;
  }
  virtual_reassembly_ipv6_ = NULL;
}
inline const ::nat::Nat44Global_VirtualReassembly& Nat44Global::_internal_virtual_reassembly_ipv6() const {
  return *virtual_reassembly_ipv6_;
}
inline const ::nat::Nat44Global_VirtualReassembly& Nat44Global::virtual_reassembly_ipv6() const {
  const ::nat::Nat44Global_VirtualReassembly* p = virtual_reassembly_ipv6_;
  // @@protoc_insertion_point(field_get:nat.Nat44Global.virtual_reassembly_ipv6)
  return p != NULL ? *p : *reinterpret_cast<const ::nat::Nat44Global_VirtualReassembly*>(
      &::nat::_Nat44Global_VirtualReassembly_default_instance_);
}
inline ::nat::Nat44Global_VirtualReassembly* Nat44Global::release_virtual_reassembly_ipv6() {
  // @@protoc_insertion_point(field_release:nat.Nat44Global.virtual_reassembly_ipv6)
  
  ::nat::Nat44Global_VirtualReassembly* temp = virtual_reassembly_ipv6_;
  virtual_reassembly_ipv6_ = NULL;
  return temp;
}
inline ::nat::Nat44Global_VirtualReassembly* Nat44Global::mutable_virtual_reassembly_ipv6() {
  
  if (virtual_reassembly_ipv6_ == NULL) {
    auto* p = CreateMaybeMessage<::nat::Nat44Global_VirtualReassembly>(GetArenaNoVirtual());
    virtual_reassembly_ipv6_ = p;
  }
  // @@protoc_insertion_point(field_mutable:nat.Nat44Global.virtual_reassembly_ipv6)
  return virtual_reassembly_ipv6_;
}
inline void Nat44Global::set_allocated_virtual_reassembly_ipv6(::nat::Nat44Global_VirtualReassembly* virtual_reassembly_ipv6) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete virtual_reassembly_ipv6_;
  }
  if (virtual_reassembly_ipv6) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      virtual_reassembly_ipv6 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, virtual_reassembly_ipv6, submessage_arena);
    }
    
  } else {
    
  }
  virtual_reassembly_ipv6_ = virtual_reassembly_ipv6;
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44Global.virtual_reassembly_ipv6)
}

// -------------------------------------------------------------------

// Nat44SNat_SNatConfig

// string label = 1;
inline void Nat44SNat_SNatConfig::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44SNat_SNatConfig::label() const {
  // @@protoc_insertion_point(field_get:nat.Nat44SNat.SNatConfig.label)
  return label_.GetNoArena();
}
inline void Nat44SNat_SNatConfig::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44SNat.SNatConfig.label)
}
#if LANG_CXX11
inline void Nat44SNat_SNatConfig::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44SNat.SNatConfig.label)
}
#endif
inline void Nat44SNat_SNatConfig::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44SNat.SNatConfig.label)
}
inline void Nat44SNat_SNatConfig::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44SNat.SNatConfig.label)
}
inline ::std::string* Nat44SNat_SNatConfig::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44SNat.SNatConfig.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44SNat_SNatConfig::release_label() {
  // @@protoc_insertion_point(field_release:nat.Nat44SNat.SNatConfig.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44SNat_SNatConfig::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44SNat.SNatConfig.label)
}

// -------------------------------------------------------------------

// Nat44SNat

// repeated .nat.Nat44SNat.SNatConfig snat_configs = 1;
inline int Nat44SNat::snat_configs_size() const {
  return snat_configs_.size();
}
inline void Nat44SNat::clear_snat_configs() {
  snat_configs_.Clear();
}
inline ::nat::Nat44SNat_SNatConfig* Nat44SNat::mutable_snat_configs(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44SNat.snat_configs)
  return snat_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44SNat_SNatConfig >*
Nat44SNat::mutable_snat_configs() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44SNat.snat_configs)
  return &snat_configs_;
}
inline const ::nat::Nat44SNat_SNatConfig& Nat44SNat::snat_configs(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44SNat.snat_configs)
  return snat_configs_.Get(index);
}
inline ::nat::Nat44SNat_SNatConfig* Nat44SNat::add_snat_configs() {
  // @@protoc_insertion_point(field_add:nat.Nat44SNat.snat_configs)
  return snat_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44SNat_SNatConfig >&
Nat44SNat::snat_configs() const {
  // @@protoc_insertion_point(field_list:nat.Nat44SNat.snat_configs)
  return snat_configs_;
}

// -------------------------------------------------------------------

// Nat44DNat_DNatConfig_StaticMapping_LocalIP

// uint32 vrf_id = 4;
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::clear_vrf_id() {
  vrf_id_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_StaticMapping_LocalIP::vrf_id() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.vrf_id)
  return vrf_id_;
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_vrf_id(::google::protobuf::uint32 value) {
  
  vrf_id_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.vrf_id)
}

// string local_ip = 1;
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::clear_local_ip() {
  local_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig_StaticMapping_LocalIP::local_ip() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
  return local_ip_.GetNoArena();
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_local_ip(const ::std::string& value) {
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_local_ip(::std::string&& value) {
  
  local_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
}
#endif
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_local_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_local_ip(const char* value, size_t size) {
  
  local_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping_LocalIP::mutable_local_ip() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
  return local_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping_LocalIP::release_local_ip() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
  
  return local_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_allocated_local_ip(::std::string* local_ip) {
  if (local_ip != NULL) {
    
  } else {
    
  }
  local_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_ip);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_ip)
}

// uint32 local_port = 3;
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::clear_local_port() {
  local_port_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_StaticMapping_LocalIP::local_port() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_port)
  return local_port_;
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_local_port(::google::protobuf::uint32 value) {
  
  local_port_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.local_port)
}

// uint32 probability = 2;
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::clear_probability() {
  probability_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_StaticMapping_LocalIP::probability() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.probability)
  return probability_;
}
inline void Nat44DNat_DNatConfig_StaticMapping_LocalIP::set_probability(::google::protobuf::uint32 value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP.probability)
}

// -------------------------------------------------------------------

// Nat44DNat_DNatConfig_StaticMapping

// string external_interface = 2;
inline void Nat44DNat_DNatConfig_StaticMapping::clear_external_interface() {
  external_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig_StaticMapping::external_interface() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
  return external_interface_.GetNoArena();
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_interface(const ::std::string& value) {
  
  external_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_interface(::std::string&& value) {
  
  external_interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
}
#endif
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  external_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_interface(const char* value, size_t size) {
  
  external_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping::mutable_external_interface() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
  return external_interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping::release_external_interface() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
  
  return external_interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_allocated_external_interface(::std::string* external_interface) {
  if (external_interface != NULL) {
    
  } else {
    
  }
  external_interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_interface);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.StaticMapping.external_interface)
}

// string external_ip = 3;
inline void Nat44DNat_DNatConfig_StaticMapping::clear_external_ip() {
  external_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig_StaticMapping::external_ip() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
  return external_ip_.GetNoArena();
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_ip(const ::std::string& value) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_ip(::std::string&& value) {
  
  external_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
}
#endif
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_ip(const char* value, size_t size) {
  
  external_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping::mutable_external_ip() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
  return external_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig_StaticMapping::release_external_ip() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
  
  return external_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_allocated_external_ip(::std::string* external_ip) {
  if (external_ip != NULL) {
    
  } else {
    
  }
  external_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_ip);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.StaticMapping.external_ip)
}

// uint32 external_port = 4;
inline void Nat44DNat_DNatConfig_StaticMapping::clear_external_port() {
  external_port_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_StaticMapping::external_port() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.external_port)
  return external_port_;
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_external_port(::google::protobuf::uint32 value) {
  
  external_port_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.external_port)
}

// repeated .nat.Nat44DNat.DNatConfig.StaticMapping.LocalIP local_ips = 5;
inline int Nat44DNat_DNatConfig_StaticMapping::local_ips_size() const {
  return local_ips_.size();
}
inline void Nat44DNat_DNatConfig_StaticMapping::clear_local_ips() {
  local_ips_.Clear();
}
inline ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* Nat44DNat_DNatConfig_StaticMapping::mutable_local_ips(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.StaticMapping.local_ips)
  return local_ips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >*
Nat44DNat_DNatConfig_StaticMapping::mutable_local_ips() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44DNat.DNatConfig.StaticMapping.local_ips)
  return &local_ips_;
}
inline const ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP& Nat44DNat_DNatConfig_StaticMapping::local_ips(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.local_ips)
  return local_ips_.Get(index);
}
inline ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP* Nat44DNat_DNatConfig_StaticMapping::add_local_ips() {
  // @@protoc_insertion_point(field_add:nat.Nat44DNat.DNatConfig.StaticMapping.local_ips)
  return local_ips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping_LocalIP >&
Nat44DNat_DNatConfig_StaticMapping::local_ips() const {
  // @@protoc_insertion_point(field_list:nat.Nat44DNat.DNatConfig.StaticMapping.local_ips)
  return local_ips_;
}

// .nat.Protocol protocol = 6;
inline void Nat44DNat_DNatConfig_StaticMapping::clear_protocol() {
  protocol_ = 0;
}
inline ::nat::Protocol Nat44DNat_DNatConfig_StaticMapping::protocol() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.protocol)
  return static_cast< ::nat::Protocol >(protocol_);
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_protocol(::nat::Protocol value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.protocol)
}

// .nat.TwiceNatMode twice_nat = 7;
inline void Nat44DNat_DNatConfig_StaticMapping::clear_twice_nat() {
  twice_nat_ = 0;
}
inline ::nat::TwiceNatMode Nat44DNat_DNatConfig_StaticMapping::twice_nat() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.StaticMapping.twice_nat)
  return static_cast< ::nat::TwiceNatMode >(twice_nat_);
}
inline void Nat44DNat_DNatConfig_StaticMapping::set_twice_nat(::nat::TwiceNatMode value) {
  
  twice_nat_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.StaticMapping.twice_nat)
}

// -------------------------------------------------------------------

// Nat44DNat_DNatConfig_IdentityMapping

// uint32 vrf_id = 1;
inline void Nat44DNat_DNatConfig_IdentityMapping::clear_vrf_id() {
  vrf_id_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_IdentityMapping::vrf_id() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.IdentityMapping.vrf_id)
  return vrf_id_;
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_vrf_id(::google::protobuf::uint32 value) {
  
  vrf_id_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.IdentityMapping.vrf_id)
}

// string addressed_interface = 2;
inline void Nat44DNat_DNatConfig_IdentityMapping::clear_addressed_interface() {
  addressed_interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig_IdentityMapping::addressed_interface() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
  return addressed_interface_.GetNoArena();
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_addressed_interface(const ::std::string& value) {
  
  addressed_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig_IdentityMapping::set_addressed_interface(::std::string&& value) {
  
  addressed_interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
}
#endif
inline void Nat44DNat_DNatConfig_IdentityMapping::set_addressed_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  addressed_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_addressed_interface(const char* value, size_t size) {
  
  addressed_interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
}
inline ::std::string* Nat44DNat_DNatConfig_IdentityMapping::mutable_addressed_interface() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
  return addressed_interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig_IdentityMapping::release_addressed_interface() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
  
  return addressed_interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_allocated_addressed_interface(::std::string* addressed_interface) {
  if (addressed_interface != NULL) {
    
  } else {
    
  }
  addressed_interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addressed_interface);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.IdentityMapping.addressed_interface)
}

// string ip_address = 3;
inline void Nat44DNat_DNatConfig_IdentityMapping::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig_IdentityMapping::ip_address() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
  return ip_address_.GetNoArena();
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig_IdentityMapping::set_ip_address(::std::string&& value) {
  
  ip_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
}
#endif
inline void Nat44DNat_DNatConfig_IdentityMapping::set_ip_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
}
inline ::std::string* Nat44DNat_DNatConfig_IdentityMapping::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig_IdentityMapping::release_ip_address() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.IdentityMapping.ip_address)
}

// uint32 port = 4;
inline void Nat44DNat_DNatConfig_IdentityMapping::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 Nat44DNat_DNatConfig_IdentityMapping::port() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.IdentityMapping.port)
  return port_;
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.IdentityMapping.port)
}

// .nat.Protocol protocol = 5;
inline void Nat44DNat_DNatConfig_IdentityMapping::clear_protocol() {
  protocol_ = 0;
}
inline ::nat::Protocol Nat44DNat_DNatConfig_IdentityMapping::protocol() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.IdentityMapping.protocol)
  return static_cast< ::nat::Protocol >(protocol_);
}
inline void Nat44DNat_DNatConfig_IdentityMapping::set_protocol(::nat::Protocol value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.IdentityMapping.protocol)
}

// -------------------------------------------------------------------

// Nat44DNat_DNatConfig

// string label = 1;
inline void Nat44DNat_DNatConfig::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Nat44DNat_DNatConfig::label() const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.label)
  return label_.GetNoArena();
}
inline void Nat44DNat_DNatConfig::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:nat.Nat44DNat.DNatConfig.label)
}
#if LANG_CXX11
inline void Nat44DNat_DNatConfig::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:nat.Nat44DNat.DNatConfig.label)
}
#endif
inline void Nat44DNat_DNatConfig::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:nat.Nat44DNat.DNatConfig.label)
}
inline void Nat44DNat_DNatConfig::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:nat.Nat44DNat.DNatConfig.label)
}
inline ::std::string* Nat44DNat_DNatConfig::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nat44DNat_DNatConfig::release_label() {
  // @@protoc_insertion_point(field_release:nat.Nat44DNat.DNatConfig.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nat44DNat_DNatConfig::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:nat.Nat44DNat.DNatConfig.label)
}

// repeated .nat.Nat44DNat.DNatConfig.StaticMapping st_mappings = 4;
inline int Nat44DNat_DNatConfig::st_mappings_size() const {
  return st_mappings_.size();
}
inline void Nat44DNat_DNatConfig::clear_st_mappings() {
  st_mappings_.Clear();
}
inline ::nat::Nat44DNat_DNatConfig_StaticMapping* Nat44DNat_DNatConfig::mutable_st_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.st_mappings)
  return st_mappings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping >*
Nat44DNat_DNatConfig::mutable_st_mappings() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44DNat.DNatConfig.st_mappings)
  return &st_mappings_;
}
inline const ::nat::Nat44DNat_DNatConfig_StaticMapping& Nat44DNat_DNatConfig::st_mappings(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.st_mappings)
  return st_mappings_.Get(index);
}
inline ::nat::Nat44DNat_DNatConfig_StaticMapping* Nat44DNat_DNatConfig::add_st_mappings() {
  // @@protoc_insertion_point(field_add:nat.Nat44DNat.DNatConfig.st_mappings)
  return st_mappings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_StaticMapping >&
Nat44DNat_DNatConfig::st_mappings() const {
  // @@protoc_insertion_point(field_list:nat.Nat44DNat.DNatConfig.st_mappings)
  return st_mappings_;
}

// repeated .nat.Nat44DNat.DNatConfig.IdentityMapping id_mappings = 6;
inline int Nat44DNat_DNatConfig::id_mappings_size() const {
  return id_mappings_.size();
}
inline void Nat44DNat_DNatConfig::clear_id_mappings() {
  id_mappings_.Clear();
}
inline ::nat::Nat44DNat_DNatConfig_IdentityMapping* Nat44DNat_DNatConfig::mutable_id_mappings(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.DNatConfig.id_mappings)
  return id_mappings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_IdentityMapping >*
Nat44DNat_DNatConfig::mutable_id_mappings() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44DNat.DNatConfig.id_mappings)
  return &id_mappings_;
}
inline const ::nat::Nat44DNat_DNatConfig_IdentityMapping& Nat44DNat_DNatConfig::id_mappings(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.DNatConfig.id_mappings)
  return id_mappings_.Get(index);
}
inline ::nat::Nat44DNat_DNatConfig_IdentityMapping* Nat44DNat_DNatConfig::add_id_mappings() {
  // @@protoc_insertion_point(field_add:nat.Nat44DNat.DNatConfig.id_mappings)
  return id_mappings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig_IdentityMapping >&
Nat44DNat_DNatConfig::id_mappings() const {
  // @@protoc_insertion_point(field_list:nat.Nat44DNat.DNatConfig.id_mappings)
  return id_mappings_;
}

// -------------------------------------------------------------------

// Nat44DNat

// repeated .nat.Nat44DNat.DNatConfig dnat_configs = 1;
inline int Nat44DNat::dnat_configs_size() const {
  return dnat_configs_.size();
}
inline void Nat44DNat::clear_dnat_configs() {
  dnat_configs_.Clear();
}
inline ::nat::Nat44DNat_DNatConfig* Nat44DNat::mutable_dnat_configs(int index) {
  // @@protoc_insertion_point(field_mutable:nat.Nat44DNat.dnat_configs)
  return dnat_configs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >*
Nat44DNat::mutable_dnat_configs() {
  // @@protoc_insertion_point(field_mutable_list:nat.Nat44DNat.dnat_configs)
  return &dnat_configs_;
}
inline const ::nat::Nat44DNat_DNatConfig& Nat44DNat::dnat_configs(int index) const {
  // @@protoc_insertion_point(field_get:nat.Nat44DNat.dnat_configs)
  return dnat_configs_.Get(index);
}
inline ::nat::Nat44DNat_DNatConfig* Nat44DNat::add_dnat_configs() {
  // @@protoc_insertion_point(field_add:nat.Nat44DNat.dnat_configs)
  return dnat_configs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::nat::Nat44DNat_DNatConfig >&
Nat44DNat::dnat_configs() const {
  // @@protoc_insertion_point(field_list:nat.Nat44DNat.dnat_configs)
  return dnat_configs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace nat

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::nat::Protocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nat::Protocol>() {
  return ::nat::Protocol_descriptor();
}
template <> struct is_proto_enum< ::nat::TwiceNatMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::nat::TwiceNatMode>() {
  return ::nat::TwiceNatMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_vpp_2fmodel_2fnat_2fnat_2eproto
